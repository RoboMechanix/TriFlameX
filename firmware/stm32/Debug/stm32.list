
stm32.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000045a0  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003bc  080046b0  080046b0  000056b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004a6c  08004a6c  000061cc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08004a6c  08004a6c  000061cc  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08004a6c  08004a6c  000061cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004a6c  08004a6c  00005a6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004a70  08004a70  00005a70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001cc  20000000  08004a74  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001e0  200001d0  08004c40  000061d0  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200003b0  08004c40  000063b0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000061cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002991  00000000  00000000  000061f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000dc3  00000000  00000000  00008b86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000380  00000000  00000000  00009950  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000027c  00000000  00000000  00009cd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001764d  00000000  00000000  00009f4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000052b0  00000000  00000000  00021599  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000811ea  00000000  00000000  00026849  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a7a33  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001e90  00000000  00000000  000a7a78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  000a9908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d0 	.word	0x200001d0
 800012c:	00000000 	.word	0x00000000
 8000130:	08004698 	.word	0x08004698

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d4 	.word	0x200001d4
 800014c:	08004698 	.word	0x08004698

08000150 <__aeabi_drsub>:
 8000150:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000154:	e002      	b.n	800015c <__adddf3>
 8000156:	bf00      	nop

08000158 <__aeabi_dsub>:
 8000158:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800015c <__adddf3>:
 800015c:	b530      	push	{r4, r5, lr}
 800015e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000162:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000166:	ea94 0f05 	teq	r4, r5
 800016a:	bf08      	it	eq
 800016c:	ea90 0f02 	teqeq	r0, r2
 8000170:	bf1f      	itttt	ne
 8000172:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000176:	ea55 0c02 	orrsne.w	ip, r5, r2
 800017a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800017e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000182:	f000 80e2 	beq.w	800034a <__adddf3+0x1ee>
 8000186:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800018a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800018e:	bfb8      	it	lt
 8000190:	426d      	neglt	r5, r5
 8000192:	dd0c      	ble.n	80001ae <__adddf3+0x52>
 8000194:	442c      	add	r4, r5
 8000196:	ea80 0202 	eor.w	r2, r0, r2
 800019a:	ea81 0303 	eor.w	r3, r1, r3
 800019e:	ea82 0000 	eor.w	r0, r2, r0
 80001a2:	ea83 0101 	eor.w	r1, r3, r1
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	2d36      	cmp	r5, #54	@ 0x36
 80001b0:	bf88      	it	hi
 80001b2:	bd30      	pophi	{r4, r5, pc}
 80001b4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001bc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001c4:	d002      	beq.n	80001cc <__adddf3+0x70>
 80001c6:	4240      	negs	r0, r0
 80001c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001cc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001d8:	d002      	beq.n	80001e0 <__adddf3+0x84>
 80001da:	4252      	negs	r2, r2
 80001dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001e0:	ea94 0f05 	teq	r4, r5
 80001e4:	f000 80a7 	beq.w	8000336 <__adddf3+0x1da>
 80001e8:	f1a4 0401 	sub.w	r4, r4, #1
 80001ec:	f1d5 0e20 	rsbs	lr, r5, #32
 80001f0:	db0d      	blt.n	800020e <__adddf3+0xb2>
 80001f2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80001f6:	fa22 f205 	lsr.w	r2, r2, r5
 80001fa:	1880      	adds	r0, r0, r2
 80001fc:	f141 0100 	adc.w	r1, r1, #0
 8000200:	fa03 f20e 	lsl.w	r2, r3, lr
 8000204:	1880      	adds	r0, r0, r2
 8000206:	fa43 f305 	asr.w	r3, r3, r5
 800020a:	4159      	adcs	r1, r3
 800020c:	e00e      	b.n	800022c <__adddf3+0xd0>
 800020e:	f1a5 0520 	sub.w	r5, r5, #32
 8000212:	f10e 0e20 	add.w	lr, lr, #32
 8000216:	2a01      	cmp	r2, #1
 8000218:	fa03 fc0e 	lsl.w	ip, r3, lr
 800021c:	bf28      	it	cs
 800021e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000222:	fa43 f305 	asr.w	r3, r3, r5
 8000226:	18c0      	adds	r0, r0, r3
 8000228:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800022c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000230:	d507      	bpl.n	8000242 <__adddf3+0xe6>
 8000232:	f04f 0e00 	mov.w	lr, #0
 8000236:	f1dc 0c00 	rsbs	ip, ip, #0
 800023a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800023e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000242:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000246:	d31b      	bcc.n	8000280 <__adddf3+0x124>
 8000248:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800024c:	d30c      	bcc.n	8000268 <__adddf3+0x10c>
 800024e:	0849      	lsrs	r1, r1, #1
 8000250:	ea5f 0030 	movs.w	r0, r0, rrx
 8000254:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000258:	f104 0401 	add.w	r4, r4, #1
 800025c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000260:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000264:	f080 809a 	bcs.w	800039c <__adddf3+0x240>
 8000268:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800026c:	bf08      	it	eq
 800026e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000272:	f150 0000 	adcs.w	r0, r0, #0
 8000276:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800027a:	ea41 0105 	orr.w	r1, r1, r5
 800027e:	bd30      	pop	{r4, r5, pc}
 8000280:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000284:	4140      	adcs	r0, r0
 8000286:	eb41 0101 	adc.w	r1, r1, r1
 800028a:	3c01      	subs	r4, #1
 800028c:	bf28      	it	cs
 800028e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000292:	d2e9      	bcs.n	8000268 <__adddf3+0x10c>
 8000294:	f091 0f00 	teq	r1, #0
 8000298:	bf04      	itt	eq
 800029a:	4601      	moveq	r1, r0
 800029c:	2000      	moveq	r0, #0
 800029e:	fab1 f381 	clz	r3, r1
 80002a2:	bf08      	it	eq
 80002a4:	3320      	addeq	r3, #32
 80002a6:	f1a3 030b 	sub.w	r3, r3, #11
 80002aa:	f1b3 0220 	subs.w	r2, r3, #32
 80002ae:	da0c      	bge.n	80002ca <__adddf3+0x16e>
 80002b0:	320c      	adds	r2, #12
 80002b2:	dd08      	ble.n	80002c6 <__adddf3+0x16a>
 80002b4:	f102 0c14 	add.w	ip, r2, #20
 80002b8:	f1c2 020c 	rsb	r2, r2, #12
 80002bc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002c0:	fa21 f102 	lsr.w	r1, r1, r2
 80002c4:	e00c      	b.n	80002e0 <__adddf3+0x184>
 80002c6:	f102 0214 	add.w	r2, r2, #20
 80002ca:	bfd8      	it	le
 80002cc:	f1c2 0c20 	rsble	ip, r2, #32
 80002d0:	fa01 f102 	lsl.w	r1, r1, r2
 80002d4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002d8:	bfdc      	itt	le
 80002da:	ea41 010c 	orrle.w	r1, r1, ip
 80002de:	4090      	lslle	r0, r2
 80002e0:	1ae4      	subs	r4, r4, r3
 80002e2:	bfa2      	ittt	ge
 80002e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002e8:	4329      	orrge	r1, r5
 80002ea:	bd30      	popge	{r4, r5, pc}
 80002ec:	ea6f 0404 	mvn.w	r4, r4
 80002f0:	3c1f      	subs	r4, #31
 80002f2:	da1c      	bge.n	800032e <__adddf3+0x1d2>
 80002f4:	340c      	adds	r4, #12
 80002f6:	dc0e      	bgt.n	8000316 <__adddf3+0x1ba>
 80002f8:	f104 0414 	add.w	r4, r4, #20
 80002fc:	f1c4 0220 	rsb	r2, r4, #32
 8000300:	fa20 f004 	lsr.w	r0, r0, r4
 8000304:	fa01 f302 	lsl.w	r3, r1, r2
 8000308:	ea40 0003 	orr.w	r0, r0, r3
 800030c:	fa21 f304 	lsr.w	r3, r1, r4
 8000310:	ea45 0103 	orr.w	r1, r5, r3
 8000314:	bd30      	pop	{r4, r5, pc}
 8000316:	f1c4 040c 	rsb	r4, r4, #12
 800031a:	f1c4 0220 	rsb	r2, r4, #32
 800031e:	fa20 f002 	lsr.w	r0, r0, r2
 8000322:	fa01 f304 	lsl.w	r3, r1, r4
 8000326:	ea40 0003 	orr.w	r0, r0, r3
 800032a:	4629      	mov	r1, r5
 800032c:	bd30      	pop	{r4, r5, pc}
 800032e:	fa21 f004 	lsr.w	r0, r1, r4
 8000332:	4629      	mov	r1, r5
 8000334:	bd30      	pop	{r4, r5, pc}
 8000336:	f094 0f00 	teq	r4, #0
 800033a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800033e:	bf06      	itte	eq
 8000340:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000344:	3401      	addeq	r4, #1
 8000346:	3d01      	subne	r5, #1
 8000348:	e74e      	b.n	80001e8 <__adddf3+0x8c>
 800034a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800034e:	bf18      	it	ne
 8000350:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000354:	d029      	beq.n	80003aa <__adddf3+0x24e>
 8000356:	ea94 0f05 	teq	r4, r5
 800035a:	bf08      	it	eq
 800035c:	ea90 0f02 	teqeq	r0, r2
 8000360:	d005      	beq.n	800036e <__adddf3+0x212>
 8000362:	ea54 0c00 	orrs.w	ip, r4, r0
 8000366:	bf04      	itt	eq
 8000368:	4619      	moveq	r1, r3
 800036a:	4610      	moveq	r0, r2
 800036c:	bd30      	pop	{r4, r5, pc}
 800036e:	ea91 0f03 	teq	r1, r3
 8000372:	bf1e      	ittt	ne
 8000374:	2100      	movne	r1, #0
 8000376:	2000      	movne	r0, #0
 8000378:	bd30      	popne	{r4, r5, pc}
 800037a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800037e:	d105      	bne.n	800038c <__adddf3+0x230>
 8000380:	0040      	lsls	r0, r0, #1
 8000382:	4149      	adcs	r1, r1
 8000384:	bf28      	it	cs
 8000386:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800038a:	bd30      	pop	{r4, r5, pc}
 800038c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000390:	bf3c      	itt	cc
 8000392:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000396:	bd30      	popcc	{r4, r5, pc}
 8000398:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800039c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003a0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003a4:	f04f 0000 	mov.w	r0, #0
 80003a8:	bd30      	pop	{r4, r5, pc}
 80003aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ae:	bf1a      	itte	ne
 80003b0:	4619      	movne	r1, r3
 80003b2:	4610      	movne	r0, r2
 80003b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003b8:	bf1c      	itt	ne
 80003ba:	460b      	movne	r3, r1
 80003bc:	4602      	movne	r2, r0
 80003be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003c2:	bf06      	itte	eq
 80003c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003c8:	ea91 0f03 	teqeq	r1, r3
 80003cc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003d0:	bd30      	pop	{r4, r5, pc}
 80003d2:	bf00      	nop

080003d4 <__aeabi_ui2d>:
 80003d4:	f090 0f00 	teq	r0, #0
 80003d8:	bf04      	itt	eq
 80003da:	2100      	moveq	r1, #0
 80003dc:	4770      	bxeq	lr
 80003de:	b530      	push	{r4, r5, lr}
 80003e0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003e4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003e8:	f04f 0500 	mov.w	r5, #0
 80003ec:	f04f 0100 	mov.w	r1, #0
 80003f0:	e750      	b.n	8000294 <__adddf3+0x138>
 80003f2:	bf00      	nop

080003f4 <__aeabi_i2d>:
 80003f4:	f090 0f00 	teq	r0, #0
 80003f8:	bf04      	itt	eq
 80003fa:	2100      	moveq	r1, #0
 80003fc:	4770      	bxeq	lr
 80003fe:	b530      	push	{r4, r5, lr}
 8000400:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000404:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000408:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800040c:	bf48      	it	mi
 800040e:	4240      	negmi	r0, r0
 8000410:	f04f 0100 	mov.w	r1, #0
 8000414:	e73e      	b.n	8000294 <__adddf3+0x138>
 8000416:	bf00      	nop

08000418 <__aeabi_f2d>:
 8000418:	0042      	lsls	r2, r0, #1
 800041a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800041e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000422:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000426:	bf1f      	itttt	ne
 8000428:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800042c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000430:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000434:	4770      	bxne	lr
 8000436:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800043a:	bf08      	it	eq
 800043c:	4770      	bxeq	lr
 800043e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000442:	bf04      	itt	eq
 8000444:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000448:	4770      	bxeq	lr
 800044a:	b530      	push	{r4, r5, lr}
 800044c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000454:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000458:	e71c      	b.n	8000294 <__adddf3+0x138>
 800045a:	bf00      	nop

0800045c <__aeabi_ul2d>:
 800045c:	ea50 0201 	orrs.w	r2, r0, r1
 8000460:	bf08      	it	eq
 8000462:	4770      	bxeq	lr
 8000464:	b530      	push	{r4, r5, lr}
 8000466:	f04f 0500 	mov.w	r5, #0
 800046a:	e00a      	b.n	8000482 <__aeabi_l2d+0x16>

0800046c <__aeabi_l2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800047a:	d502      	bpl.n	8000482 <__aeabi_l2d+0x16>
 800047c:	4240      	negs	r0, r0
 800047e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000482:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000486:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800048a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800048e:	f43f aed8 	beq.w	8000242 <__adddf3+0xe6>
 8000492:	f04f 0203 	mov.w	r2, #3
 8000496:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800049a:	bf18      	it	ne
 800049c:	3203      	addne	r2, #3
 800049e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004a2:	bf18      	it	ne
 80004a4:	3203      	addne	r2, #3
 80004a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004aa:	f1c2 0320 	rsb	r3, r2, #32
 80004ae:	fa00 fc03 	lsl.w	ip, r0, r3
 80004b2:	fa20 f002 	lsr.w	r0, r0, r2
 80004b6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ba:	ea40 000e 	orr.w	r0, r0, lr
 80004be:	fa21 f102 	lsr.w	r1, r1, r2
 80004c2:	4414      	add	r4, r2
 80004c4:	e6bd      	b.n	8000242 <__adddf3+0xe6>
 80004c6:	bf00      	nop

080004c8 <__aeabi_dmul>:
 80004c8:	b570      	push	{r4, r5, r6, lr}
 80004ca:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004ce:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004d2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004d6:	bf1d      	ittte	ne
 80004d8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004dc:	ea94 0f0c 	teqne	r4, ip
 80004e0:	ea95 0f0c 	teqne	r5, ip
 80004e4:	f000 f8de 	bleq	80006a4 <__aeabi_dmul+0x1dc>
 80004e8:	442c      	add	r4, r5
 80004ea:	ea81 0603 	eor.w	r6, r1, r3
 80004ee:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80004f2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80004f6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80004fa:	bf18      	it	ne
 80004fc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000500:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000504:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000508:	d038      	beq.n	800057c <__aeabi_dmul+0xb4>
 800050a:	fba0 ce02 	umull	ip, lr, r0, r2
 800050e:	f04f 0500 	mov.w	r5, #0
 8000512:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000516:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800051a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800051e:	f04f 0600 	mov.w	r6, #0
 8000522:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000526:	f09c 0f00 	teq	ip, #0
 800052a:	bf18      	it	ne
 800052c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000530:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000534:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000538:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800053c:	d204      	bcs.n	8000548 <__aeabi_dmul+0x80>
 800053e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000542:	416d      	adcs	r5, r5
 8000544:	eb46 0606 	adc.w	r6, r6, r6
 8000548:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800054c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000550:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000554:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000558:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800055c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000560:	bf88      	it	hi
 8000562:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000566:	d81e      	bhi.n	80005a6 <__aeabi_dmul+0xde>
 8000568:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800056c:	bf08      	it	eq
 800056e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000572:	f150 0000 	adcs.w	r0, r0, #0
 8000576:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800057a:	bd70      	pop	{r4, r5, r6, pc}
 800057c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000580:	ea46 0101 	orr.w	r1, r6, r1
 8000584:	ea40 0002 	orr.w	r0, r0, r2
 8000588:	ea81 0103 	eor.w	r1, r1, r3
 800058c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000590:	bfc2      	ittt	gt
 8000592:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000596:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800059a:	bd70      	popgt	{r4, r5, r6, pc}
 800059c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005a0:	f04f 0e00 	mov.w	lr, #0
 80005a4:	3c01      	subs	r4, #1
 80005a6:	f300 80ab 	bgt.w	8000700 <__aeabi_dmul+0x238>
 80005aa:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005ae:	bfde      	ittt	le
 80005b0:	2000      	movle	r0, #0
 80005b2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005b6:	bd70      	pople	{r4, r5, r6, pc}
 80005b8:	f1c4 0400 	rsb	r4, r4, #0
 80005bc:	3c20      	subs	r4, #32
 80005be:	da35      	bge.n	800062c <__aeabi_dmul+0x164>
 80005c0:	340c      	adds	r4, #12
 80005c2:	dc1b      	bgt.n	80005fc <__aeabi_dmul+0x134>
 80005c4:	f104 0414 	add.w	r4, r4, #20
 80005c8:	f1c4 0520 	rsb	r5, r4, #32
 80005cc:	fa00 f305 	lsl.w	r3, r0, r5
 80005d0:	fa20 f004 	lsr.w	r0, r0, r4
 80005d4:	fa01 f205 	lsl.w	r2, r1, r5
 80005d8:	ea40 0002 	orr.w	r0, r0, r2
 80005dc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005e0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005e4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005e8:	fa21 f604 	lsr.w	r6, r1, r4
 80005ec:	eb42 0106 	adc.w	r1, r2, r6
 80005f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80005f4:	bf08      	it	eq
 80005f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80005fa:	bd70      	pop	{r4, r5, r6, pc}
 80005fc:	f1c4 040c 	rsb	r4, r4, #12
 8000600:	f1c4 0520 	rsb	r5, r4, #32
 8000604:	fa00 f304 	lsl.w	r3, r0, r4
 8000608:	fa20 f005 	lsr.w	r0, r0, r5
 800060c:	fa01 f204 	lsl.w	r2, r1, r4
 8000610:	ea40 0002 	orr.w	r0, r0, r2
 8000614:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000618:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800061c:	f141 0100 	adc.w	r1, r1, #0
 8000620:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000624:	bf08      	it	eq
 8000626:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800062a:	bd70      	pop	{r4, r5, r6, pc}
 800062c:	f1c4 0520 	rsb	r5, r4, #32
 8000630:	fa00 f205 	lsl.w	r2, r0, r5
 8000634:	ea4e 0e02 	orr.w	lr, lr, r2
 8000638:	fa20 f304 	lsr.w	r3, r0, r4
 800063c:	fa01 f205 	lsl.w	r2, r1, r5
 8000640:	ea43 0302 	orr.w	r3, r3, r2
 8000644:	fa21 f004 	lsr.w	r0, r1, r4
 8000648:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800064c:	fa21 f204 	lsr.w	r2, r1, r4
 8000650:	ea20 0002 	bic.w	r0, r0, r2
 8000654:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000658:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800065c:	bf08      	it	eq
 800065e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f094 0f00 	teq	r4, #0
 8000668:	d10f      	bne.n	800068a <__aeabi_dmul+0x1c2>
 800066a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800066e:	0040      	lsls	r0, r0, #1
 8000670:	eb41 0101 	adc.w	r1, r1, r1
 8000674:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000678:	bf08      	it	eq
 800067a:	3c01      	subeq	r4, #1
 800067c:	d0f7      	beq.n	800066e <__aeabi_dmul+0x1a6>
 800067e:	ea41 0106 	orr.w	r1, r1, r6
 8000682:	f095 0f00 	teq	r5, #0
 8000686:	bf18      	it	ne
 8000688:	4770      	bxne	lr
 800068a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800068e:	0052      	lsls	r2, r2, #1
 8000690:	eb43 0303 	adc.w	r3, r3, r3
 8000694:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000698:	bf08      	it	eq
 800069a:	3d01      	subeq	r5, #1
 800069c:	d0f7      	beq.n	800068e <__aeabi_dmul+0x1c6>
 800069e:	ea43 0306 	orr.w	r3, r3, r6
 80006a2:	4770      	bx	lr
 80006a4:	ea94 0f0c 	teq	r4, ip
 80006a8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006ac:	bf18      	it	ne
 80006ae:	ea95 0f0c 	teqne	r5, ip
 80006b2:	d00c      	beq.n	80006ce <__aeabi_dmul+0x206>
 80006b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006b8:	bf18      	it	ne
 80006ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006be:	d1d1      	bne.n	8000664 <__aeabi_dmul+0x19c>
 80006c0:	ea81 0103 	eor.w	r1, r1, r3
 80006c4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006c8:	f04f 0000 	mov.w	r0, #0
 80006cc:	bd70      	pop	{r4, r5, r6, pc}
 80006ce:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006d2:	bf06      	itte	eq
 80006d4:	4610      	moveq	r0, r2
 80006d6:	4619      	moveq	r1, r3
 80006d8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006dc:	d019      	beq.n	8000712 <__aeabi_dmul+0x24a>
 80006de:	ea94 0f0c 	teq	r4, ip
 80006e2:	d102      	bne.n	80006ea <__aeabi_dmul+0x222>
 80006e4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006e8:	d113      	bne.n	8000712 <__aeabi_dmul+0x24a>
 80006ea:	ea95 0f0c 	teq	r5, ip
 80006ee:	d105      	bne.n	80006fc <__aeabi_dmul+0x234>
 80006f0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80006f4:	bf1c      	itt	ne
 80006f6:	4610      	movne	r0, r2
 80006f8:	4619      	movne	r1, r3
 80006fa:	d10a      	bne.n	8000712 <__aeabi_dmul+0x24a>
 80006fc:	ea81 0103 	eor.w	r1, r1, r3
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000704:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000708:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800070c:	f04f 0000 	mov.w	r0, #0
 8000710:	bd70      	pop	{r4, r5, r6, pc}
 8000712:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000716:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800071a:	bd70      	pop	{r4, r5, r6, pc}

0800071c <__aeabi_ddiv>:
 800071c:	b570      	push	{r4, r5, r6, lr}
 800071e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000722:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000726:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800072a:	bf1d      	ittte	ne
 800072c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000730:	ea94 0f0c 	teqne	r4, ip
 8000734:	ea95 0f0c 	teqne	r5, ip
 8000738:	f000 f8a7 	bleq	800088a <__aeabi_ddiv+0x16e>
 800073c:	eba4 0405 	sub.w	r4, r4, r5
 8000740:	ea81 0e03 	eor.w	lr, r1, r3
 8000744:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000748:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800074c:	f000 8088 	beq.w	8000860 <__aeabi_ddiv+0x144>
 8000750:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000754:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000758:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800075c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000760:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000764:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000768:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800076c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000770:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000774:	429d      	cmp	r5, r3
 8000776:	bf08      	it	eq
 8000778:	4296      	cmpeq	r6, r2
 800077a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800077e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000782:	d202      	bcs.n	800078a <__aeabi_ddiv+0x6e>
 8000784:	085b      	lsrs	r3, r3, #1
 8000786:	ea4f 0232 	mov.w	r2, r2, rrx
 800078a:	1ab6      	subs	r6, r6, r2
 800078c:	eb65 0503 	sbc.w	r5, r5, r3
 8000790:	085b      	lsrs	r3, r3, #1
 8000792:	ea4f 0232 	mov.w	r2, r2, rrx
 8000796:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800079a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800079e:	ebb6 0e02 	subs.w	lr, r6, r2
 80007a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007a6:	bf22      	ittt	cs
 80007a8:	1ab6      	subcs	r6, r6, r2
 80007aa:	4675      	movcs	r5, lr
 80007ac:	ea40 000c 	orrcs.w	r0, r0, ip
 80007b0:	085b      	lsrs	r3, r3, #1
 80007b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007be:	bf22      	ittt	cs
 80007c0:	1ab6      	subcs	r6, r6, r2
 80007c2:	4675      	movcs	r5, lr
 80007c4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007c8:	085b      	lsrs	r3, r3, #1
 80007ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80007d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007d6:	bf22      	ittt	cs
 80007d8:	1ab6      	subcs	r6, r6, r2
 80007da:	4675      	movcs	r5, lr
 80007dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007e0:	085b      	lsrs	r3, r3, #1
 80007e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ee:	bf22      	ittt	cs
 80007f0:	1ab6      	subcs	r6, r6, r2
 80007f2:	4675      	movcs	r5, lr
 80007f4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80007f8:	ea55 0e06 	orrs.w	lr, r5, r6
 80007fc:	d018      	beq.n	8000830 <__aeabi_ddiv+0x114>
 80007fe:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000802:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000806:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800080a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800080e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000812:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000816:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800081a:	d1c0      	bne.n	800079e <__aeabi_ddiv+0x82>
 800081c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000820:	d10b      	bne.n	800083a <__aeabi_ddiv+0x11e>
 8000822:	ea41 0100 	orr.w	r1, r1, r0
 8000826:	f04f 0000 	mov.w	r0, #0
 800082a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800082e:	e7b6      	b.n	800079e <__aeabi_ddiv+0x82>
 8000830:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000834:	bf04      	itt	eq
 8000836:	4301      	orreq	r1, r0
 8000838:	2000      	moveq	r0, #0
 800083a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800083e:	bf88      	it	hi
 8000840:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000844:	f63f aeaf 	bhi.w	80005a6 <__aeabi_dmul+0xde>
 8000848:	ebb5 0c03 	subs.w	ip, r5, r3
 800084c:	bf04      	itt	eq
 800084e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000852:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000856:	f150 0000 	adcs.w	r0, r0, #0
 800085a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800085e:	bd70      	pop	{r4, r5, r6, pc}
 8000860:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000864:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000868:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800086c:	bfc2      	ittt	gt
 800086e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000872:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000876:	bd70      	popgt	{r4, r5, r6, pc}
 8000878:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800087c:	f04f 0e00 	mov.w	lr, #0
 8000880:	3c01      	subs	r4, #1
 8000882:	e690      	b.n	80005a6 <__aeabi_dmul+0xde>
 8000884:	ea45 0e06 	orr.w	lr, r5, r6
 8000888:	e68d      	b.n	80005a6 <__aeabi_dmul+0xde>
 800088a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800088e:	ea94 0f0c 	teq	r4, ip
 8000892:	bf08      	it	eq
 8000894:	ea95 0f0c 	teqeq	r5, ip
 8000898:	f43f af3b 	beq.w	8000712 <__aeabi_dmul+0x24a>
 800089c:	ea94 0f0c 	teq	r4, ip
 80008a0:	d10a      	bne.n	80008b8 <__aeabi_ddiv+0x19c>
 80008a2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008a6:	f47f af34 	bne.w	8000712 <__aeabi_dmul+0x24a>
 80008aa:	ea95 0f0c 	teq	r5, ip
 80008ae:	f47f af25 	bne.w	80006fc <__aeabi_dmul+0x234>
 80008b2:	4610      	mov	r0, r2
 80008b4:	4619      	mov	r1, r3
 80008b6:	e72c      	b.n	8000712 <__aeabi_dmul+0x24a>
 80008b8:	ea95 0f0c 	teq	r5, ip
 80008bc:	d106      	bne.n	80008cc <__aeabi_ddiv+0x1b0>
 80008be:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008c2:	f43f aefd 	beq.w	80006c0 <__aeabi_dmul+0x1f8>
 80008c6:	4610      	mov	r0, r2
 80008c8:	4619      	mov	r1, r3
 80008ca:	e722      	b.n	8000712 <__aeabi_dmul+0x24a>
 80008cc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008d0:	bf18      	it	ne
 80008d2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008d6:	f47f aec5 	bne.w	8000664 <__aeabi_dmul+0x19c>
 80008da:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008de:	f47f af0d 	bne.w	80006fc <__aeabi_dmul+0x234>
 80008e2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008e6:	f47f aeeb 	bne.w	80006c0 <__aeabi_dmul+0x1f8>
 80008ea:	e712      	b.n	8000712 <__aeabi_dmul+0x24a>

080008ec <__gedf2>:
 80008ec:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 80008f0:	e006      	b.n	8000900 <__cmpdf2+0x4>
 80008f2:	bf00      	nop

080008f4 <__ledf2>:
 80008f4:	f04f 0c01 	mov.w	ip, #1
 80008f8:	e002      	b.n	8000900 <__cmpdf2+0x4>
 80008fa:	bf00      	nop

080008fc <__cmpdf2>:
 80008fc:	f04f 0c01 	mov.w	ip, #1
 8000900:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000904:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000908:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800090c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000910:	bf18      	it	ne
 8000912:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000916:	d01b      	beq.n	8000950 <__cmpdf2+0x54>
 8000918:	b001      	add	sp, #4
 800091a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800091e:	bf0c      	ite	eq
 8000920:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000924:	ea91 0f03 	teqne	r1, r3
 8000928:	bf02      	ittt	eq
 800092a:	ea90 0f02 	teqeq	r0, r2
 800092e:	2000      	moveq	r0, #0
 8000930:	4770      	bxeq	lr
 8000932:	f110 0f00 	cmn.w	r0, #0
 8000936:	ea91 0f03 	teq	r1, r3
 800093a:	bf58      	it	pl
 800093c:	4299      	cmppl	r1, r3
 800093e:	bf08      	it	eq
 8000940:	4290      	cmpeq	r0, r2
 8000942:	bf2c      	ite	cs
 8000944:	17d8      	asrcs	r0, r3, #31
 8000946:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800094a:	f040 0001 	orr.w	r0, r0, #1
 800094e:	4770      	bx	lr
 8000950:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000954:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000958:	d102      	bne.n	8000960 <__cmpdf2+0x64>
 800095a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800095e:	d107      	bne.n	8000970 <__cmpdf2+0x74>
 8000960:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d1d6      	bne.n	8000918 <__cmpdf2+0x1c>
 800096a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800096e:	d0d3      	beq.n	8000918 <__cmpdf2+0x1c>
 8000970:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000974:	4770      	bx	lr
 8000976:	bf00      	nop

08000978 <__aeabi_cdrcmple>:
 8000978:	4684      	mov	ip, r0
 800097a:	4610      	mov	r0, r2
 800097c:	4662      	mov	r2, ip
 800097e:	468c      	mov	ip, r1
 8000980:	4619      	mov	r1, r3
 8000982:	4663      	mov	r3, ip
 8000984:	e000      	b.n	8000988 <__aeabi_cdcmpeq>
 8000986:	bf00      	nop

08000988 <__aeabi_cdcmpeq>:
 8000988:	b501      	push	{r0, lr}
 800098a:	f7ff ffb7 	bl	80008fc <__cmpdf2>
 800098e:	2800      	cmp	r0, #0
 8000990:	bf48      	it	mi
 8000992:	f110 0f00 	cmnmi.w	r0, #0
 8000996:	bd01      	pop	{r0, pc}

08000998 <__aeabi_dcmpeq>:
 8000998:	f84d ed08 	str.w	lr, [sp, #-8]!
 800099c:	f7ff fff4 	bl	8000988 <__aeabi_cdcmpeq>
 80009a0:	bf0c      	ite	eq
 80009a2:	2001      	moveq	r0, #1
 80009a4:	2000      	movne	r0, #0
 80009a6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009aa:	bf00      	nop

080009ac <__aeabi_dcmplt>:
 80009ac:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009b0:	f7ff ffea 	bl	8000988 <__aeabi_cdcmpeq>
 80009b4:	bf34      	ite	cc
 80009b6:	2001      	movcc	r0, #1
 80009b8:	2000      	movcs	r0, #0
 80009ba:	f85d fb08 	ldr.w	pc, [sp], #8
 80009be:	bf00      	nop

080009c0 <__aeabi_dcmple>:
 80009c0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c4:	f7ff ffe0 	bl	8000988 <__aeabi_cdcmpeq>
 80009c8:	bf94      	ite	ls
 80009ca:	2001      	movls	r0, #1
 80009cc:	2000      	movhi	r0, #0
 80009ce:	f85d fb08 	ldr.w	pc, [sp], #8
 80009d2:	bf00      	nop

080009d4 <__aeabi_dcmpge>:
 80009d4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d8:	f7ff ffce 	bl	8000978 <__aeabi_cdrcmple>
 80009dc:	bf94      	ite	ls
 80009de:	2001      	movls	r0, #1
 80009e0:	2000      	movhi	r0, #0
 80009e2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e6:	bf00      	nop

080009e8 <__aeabi_dcmpgt>:
 80009e8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ec:	f7ff ffc4 	bl	8000978 <__aeabi_cdrcmple>
 80009f0:	bf34      	ite	cc
 80009f2:	2001      	movcc	r0, #1
 80009f4:	2000      	movcs	r0, #0
 80009f6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009fa:	bf00      	nop

080009fc <__aeabi_d2uiz>:
 80009fc:	004a      	lsls	r2, r1, #1
 80009fe:	d211      	bcs.n	8000a24 <__aeabi_d2uiz+0x28>
 8000a00:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a04:	d211      	bcs.n	8000a2a <__aeabi_d2uiz+0x2e>
 8000a06:	d50d      	bpl.n	8000a24 <__aeabi_d2uiz+0x28>
 8000a08:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a0c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a10:	d40e      	bmi.n	8000a30 <__aeabi_d2uiz+0x34>
 8000a12:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a16:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a1a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a1e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a22:	4770      	bx	lr
 8000a24:	f04f 0000 	mov.w	r0, #0
 8000a28:	4770      	bx	lr
 8000a2a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a2e:	d102      	bne.n	8000a36 <__aeabi_d2uiz+0x3a>
 8000a30:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000a34:	4770      	bx	lr
 8000a36:	f04f 0000 	mov.w	r0, #0
 8000a3a:	4770      	bx	lr

08000a3c <__aeabi_d2f>:
 8000a3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000a44:	bf24      	itt	cs
 8000a46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000a4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000a4e:	d90d      	bls.n	8000a6c <__aeabi_d2f+0x30>
 8000a50:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000a54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a5c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000a60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a64:	bf08      	it	eq
 8000a66:	f020 0001 	biceq.w	r0, r0, #1
 8000a6a:	4770      	bx	lr
 8000a6c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000a70:	d121      	bne.n	8000ab6 <__aeabi_d2f+0x7a>
 8000a72:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000a76:	bfbc      	itt	lt
 8000a78:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000a7c:	4770      	bxlt	lr
 8000a7e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000a82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a86:	f1c2 0218 	rsb	r2, r2, #24
 8000a8a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000a92:	fa20 f002 	lsr.w	r0, r0, r2
 8000a96:	bf18      	it	ne
 8000a98:	f040 0001 	orrne.w	r0, r0, #1
 8000a9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000aa4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000aa8:	ea40 000c 	orr.w	r0, r0, ip
 8000aac:	fa23 f302 	lsr.w	r3, r3, r2
 8000ab0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ab4:	e7cc      	b.n	8000a50 <__aeabi_d2f+0x14>
 8000ab6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000aba:	d107      	bne.n	8000acc <__aeabi_d2f+0x90>
 8000abc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000ac0:	bf1e      	ittt	ne
 8000ac2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000ac6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000aca:	4770      	bxne	lr
 8000acc:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000ad0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ad4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ad8:	4770      	bx	lr
 8000ada:	bf00      	nop

08000adc <__aeabi_frsub>:
 8000adc:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000ae0:	e002      	b.n	8000ae8 <__addsf3>
 8000ae2:	bf00      	nop

08000ae4 <__aeabi_fsub>:
 8000ae4:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000ae8 <__addsf3>:
 8000ae8:	0042      	lsls	r2, r0, #1
 8000aea:	bf1f      	itttt	ne
 8000aec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000af0:	ea92 0f03 	teqne	r2, r3
 8000af4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000af8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000afc:	d06a      	beq.n	8000bd4 <__addsf3+0xec>
 8000afe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b02:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b06:	bfc1      	itttt	gt
 8000b08:	18d2      	addgt	r2, r2, r3
 8000b0a:	4041      	eorgt	r1, r0
 8000b0c:	4048      	eorgt	r0, r1
 8000b0e:	4041      	eorgt	r1, r0
 8000b10:	bfb8      	it	lt
 8000b12:	425b      	neglt	r3, r3
 8000b14:	2b19      	cmp	r3, #25
 8000b16:	bf88      	it	hi
 8000b18:	4770      	bxhi	lr
 8000b1a:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000b1e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b22:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000b26:	bf18      	it	ne
 8000b28:	4240      	negne	r0, r0
 8000b2a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b2e:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000b32:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000b36:	bf18      	it	ne
 8000b38:	4249      	negne	r1, r1
 8000b3a:	ea92 0f03 	teq	r2, r3
 8000b3e:	d03f      	beq.n	8000bc0 <__addsf3+0xd8>
 8000b40:	f1a2 0201 	sub.w	r2, r2, #1
 8000b44:	fa41 fc03 	asr.w	ip, r1, r3
 8000b48:	eb10 000c 	adds.w	r0, r0, ip
 8000b4c:	f1c3 0320 	rsb	r3, r3, #32
 8000b50:	fa01 f103 	lsl.w	r1, r1, r3
 8000b54:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000b58:	d502      	bpl.n	8000b60 <__addsf3+0x78>
 8000b5a:	4249      	negs	r1, r1
 8000b5c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000b60:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000b64:	d313      	bcc.n	8000b8e <__addsf3+0xa6>
 8000b66:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000b6a:	d306      	bcc.n	8000b7a <__addsf3+0x92>
 8000b6c:	0840      	lsrs	r0, r0, #1
 8000b6e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000b72:	f102 0201 	add.w	r2, r2, #1
 8000b76:	2afe      	cmp	r2, #254	@ 0xfe
 8000b78:	d251      	bcs.n	8000c1e <__addsf3+0x136>
 8000b7a:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000b7e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000b82:	bf08      	it	eq
 8000b84:	f020 0001 	biceq.w	r0, r0, #1
 8000b88:	ea40 0003 	orr.w	r0, r0, r3
 8000b8c:	4770      	bx	lr
 8000b8e:	0049      	lsls	r1, r1, #1
 8000b90:	eb40 0000 	adc.w	r0, r0, r0
 8000b94:	3a01      	subs	r2, #1
 8000b96:	bf28      	it	cs
 8000b98:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000b9c:	d2ed      	bcs.n	8000b7a <__addsf3+0x92>
 8000b9e:	fab0 fc80 	clz	ip, r0
 8000ba2:	f1ac 0c08 	sub.w	ip, ip, #8
 8000ba6:	ebb2 020c 	subs.w	r2, r2, ip
 8000baa:	fa00 f00c 	lsl.w	r0, r0, ip
 8000bae:	bfaa      	itet	ge
 8000bb0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000bb4:	4252      	neglt	r2, r2
 8000bb6:	4318      	orrge	r0, r3
 8000bb8:	bfbc      	itt	lt
 8000bba:	40d0      	lsrlt	r0, r2
 8000bbc:	4318      	orrlt	r0, r3
 8000bbe:	4770      	bx	lr
 8000bc0:	f092 0f00 	teq	r2, #0
 8000bc4:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000bc8:	bf06      	itte	eq
 8000bca:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000bce:	3201      	addeq	r2, #1
 8000bd0:	3b01      	subne	r3, #1
 8000bd2:	e7b5      	b.n	8000b40 <__addsf3+0x58>
 8000bd4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000bd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000bdc:	bf18      	it	ne
 8000bde:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000be2:	d021      	beq.n	8000c28 <__addsf3+0x140>
 8000be4:	ea92 0f03 	teq	r2, r3
 8000be8:	d004      	beq.n	8000bf4 <__addsf3+0x10c>
 8000bea:	f092 0f00 	teq	r2, #0
 8000bee:	bf08      	it	eq
 8000bf0:	4608      	moveq	r0, r1
 8000bf2:	4770      	bx	lr
 8000bf4:	ea90 0f01 	teq	r0, r1
 8000bf8:	bf1c      	itt	ne
 8000bfa:	2000      	movne	r0, #0
 8000bfc:	4770      	bxne	lr
 8000bfe:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000c02:	d104      	bne.n	8000c0e <__addsf3+0x126>
 8000c04:	0040      	lsls	r0, r0, #1
 8000c06:	bf28      	it	cs
 8000c08:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000c0c:	4770      	bx	lr
 8000c0e:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000c12:	bf3c      	itt	cc
 8000c14:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000c18:	4770      	bxcc	lr
 8000c1a:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c1e:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000c22:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c26:	4770      	bx	lr
 8000c28:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000c2c:	bf16      	itet	ne
 8000c2e:	4608      	movne	r0, r1
 8000c30:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000c34:	4601      	movne	r1, r0
 8000c36:	0242      	lsls	r2, r0, #9
 8000c38:	bf06      	itte	eq
 8000c3a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000c3e:	ea90 0f01 	teqeq	r0, r1
 8000c42:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000c46:	4770      	bx	lr

08000c48 <__aeabi_ui2f>:
 8000c48:	f04f 0300 	mov.w	r3, #0
 8000c4c:	e004      	b.n	8000c58 <__aeabi_i2f+0x8>
 8000c4e:	bf00      	nop

08000c50 <__aeabi_i2f>:
 8000c50:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000c54:	bf48      	it	mi
 8000c56:	4240      	negmi	r0, r0
 8000c58:	ea5f 0c00 	movs.w	ip, r0
 8000c5c:	bf08      	it	eq
 8000c5e:	4770      	bxeq	lr
 8000c60:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000c64:	4601      	mov	r1, r0
 8000c66:	f04f 0000 	mov.w	r0, #0
 8000c6a:	e01c      	b.n	8000ca6 <__aeabi_l2f+0x2a>

08000c6c <__aeabi_ul2f>:
 8000c6c:	ea50 0201 	orrs.w	r2, r0, r1
 8000c70:	bf08      	it	eq
 8000c72:	4770      	bxeq	lr
 8000c74:	f04f 0300 	mov.w	r3, #0
 8000c78:	e00a      	b.n	8000c90 <__aeabi_l2f+0x14>
 8000c7a:	bf00      	nop

08000c7c <__aeabi_l2f>:
 8000c7c:	ea50 0201 	orrs.w	r2, r0, r1
 8000c80:	bf08      	it	eq
 8000c82:	4770      	bxeq	lr
 8000c84:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000c88:	d502      	bpl.n	8000c90 <__aeabi_l2f+0x14>
 8000c8a:	4240      	negs	r0, r0
 8000c8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c90:	ea5f 0c01 	movs.w	ip, r1
 8000c94:	bf02      	ittt	eq
 8000c96:	4684      	moveq	ip, r0
 8000c98:	4601      	moveq	r1, r0
 8000c9a:	2000      	moveq	r0, #0
 8000c9c:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000ca0:	bf08      	it	eq
 8000ca2:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000ca6:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000caa:	fabc f28c 	clz	r2, ip
 8000cae:	3a08      	subs	r2, #8
 8000cb0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000cb4:	db10      	blt.n	8000cd8 <__aeabi_l2f+0x5c>
 8000cb6:	fa01 fc02 	lsl.w	ip, r1, r2
 8000cba:	4463      	add	r3, ip
 8000cbc:	fa00 fc02 	lsl.w	ip, r0, r2
 8000cc0:	f1c2 0220 	rsb	r2, r2, #32
 8000cc4:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000cc8:	fa20 f202 	lsr.w	r2, r0, r2
 8000ccc:	eb43 0002 	adc.w	r0, r3, r2
 8000cd0:	bf08      	it	eq
 8000cd2:	f020 0001 	biceq.w	r0, r0, #1
 8000cd6:	4770      	bx	lr
 8000cd8:	f102 0220 	add.w	r2, r2, #32
 8000cdc:	fa01 fc02 	lsl.w	ip, r1, r2
 8000ce0:	f1c2 0220 	rsb	r2, r2, #32
 8000ce4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000ce8:	fa21 f202 	lsr.w	r2, r1, r2
 8000cec:	eb43 0002 	adc.w	r0, r3, r2
 8000cf0:	bf08      	it	eq
 8000cf2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_fmul>:
 8000cf8:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000cfc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d00:	bf1e      	ittt	ne
 8000d02:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d06:	ea92 0f0c 	teqne	r2, ip
 8000d0a:	ea93 0f0c 	teqne	r3, ip
 8000d0e:	d06f      	beq.n	8000df0 <__aeabi_fmul+0xf8>
 8000d10:	441a      	add	r2, r3
 8000d12:	ea80 0c01 	eor.w	ip, r0, r1
 8000d16:	0240      	lsls	r0, r0, #9
 8000d18:	bf18      	it	ne
 8000d1a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000d1e:	d01e      	beq.n	8000d5e <__aeabi_fmul+0x66>
 8000d20:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000d24:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000d28:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000d2c:	fba0 3101 	umull	r3, r1, r0, r1
 8000d30:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000d34:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 8000d38:	bf3e      	ittt	cc
 8000d3a:	0049      	lslcc	r1, r1, #1
 8000d3c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000d40:	005b      	lslcc	r3, r3, #1
 8000d42:	ea40 0001 	orr.w	r0, r0, r1
 8000d46:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 8000d4a:	2afd      	cmp	r2, #253	@ 0xfd
 8000d4c:	d81d      	bhi.n	8000d8a <__aeabi_fmul+0x92>
 8000d4e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000d52:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d56:	bf08      	it	eq
 8000d58:	f020 0001 	biceq.w	r0, r0, #1
 8000d5c:	4770      	bx	lr
 8000d5e:	f090 0f00 	teq	r0, #0
 8000d62:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000d66:	bf08      	it	eq
 8000d68:	0249      	lsleq	r1, r1, #9
 8000d6a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000d6e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000d72:	3a7f      	subs	r2, #127	@ 0x7f
 8000d74:	bfc2      	ittt	gt
 8000d76:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000d7a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000d7e:	4770      	bxgt	lr
 8000d80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d84:	f04f 0300 	mov.w	r3, #0
 8000d88:	3a01      	subs	r2, #1
 8000d8a:	dc5d      	bgt.n	8000e48 <__aeabi_fmul+0x150>
 8000d8c:	f112 0f19 	cmn.w	r2, #25
 8000d90:	bfdc      	itt	le
 8000d92:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000d96:	4770      	bxle	lr
 8000d98:	f1c2 0200 	rsb	r2, r2, #0
 8000d9c:	0041      	lsls	r1, r0, #1
 8000d9e:	fa21 f102 	lsr.w	r1, r1, r2
 8000da2:	f1c2 0220 	rsb	r2, r2, #32
 8000da6:	fa00 fc02 	lsl.w	ip, r0, r2
 8000daa:	ea5f 0031 	movs.w	r0, r1, rrx
 8000dae:	f140 0000 	adc.w	r0, r0, #0
 8000db2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000db6:	bf08      	it	eq
 8000db8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000dbc:	4770      	bx	lr
 8000dbe:	f092 0f00 	teq	r2, #0
 8000dc2:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000dc6:	bf02      	ittt	eq
 8000dc8:	0040      	lsleq	r0, r0, #1
 8000dca:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000dce:	3a01      	subeq	r2, #1
 8000dd0:	d0f9      	beq.n	8000dc6 <__aeabi_fmul+0xce>
 8000dd2:	ea40 000c 	orr.w	r0, r0, ip
 8000dd6:	f093 0f00 	teq	r3, #0
 8000dda:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000dde:	bf02      	ittt	eq
 8000de0:	0049      	lsleq	r1, r1, #1
 8000de2:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000de6:	3b01      	subeq	r3, #1
 8000de8:	d0f9      	beq.n	8000dde <__aeabi_fmul+0xe6>
 8000dea:	ea41 010c 	orr.w	r1, r1, ip
 8000dee:	e78f      	b.n	8000d10 <__aeabi_fmul+0x18>
 8000df0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000df4:	ea92 0f0c 	teq	r2, ip
 8000df8:	bf18      	it	ne
 8000dfa:	ea93 0f0c 	teqne	r3, ip
 8000dfe:	d00a      	beq.n	8000e16 <__aeabi_fmul+0x11e>
 8000e00:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000e04:	bf18      	it	ne
 8000e06:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000e0a:	d1d8      	bne.n	8000dbe <__aeabi_fmul+0xc6>
 8000e0c:	ea80 0001 	eor.w	r0, r0, r1
 8000e10:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000e14:	4770      	bx	lr
 8000e16:	f090 0f00 	teq	r0, #0
 8000e1a:	bf17      	itett	ne
 8000e1c:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000e20:	4608      	moveq	r0, r1
 8000e22:	f091 0f00 	teqne	r1, #0
 8000e26:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000e2a:	d014      	beq.n	8000e56 <__aeabi_fmul+0x15e>
 8000e2c:	ea92 0f0c 	teq	r2, ip
 8000e30:	d101      	bne.n	8000e36 <__aeabi_fmul+0x13e>
 8000e32:	0242      	lsls	r2, r0, #9
 8000e34:	d10f      	bne.n	8000e56 <__aeabi_fmul+0x15e>
 8000e36:	ea93 0f0c 	teq	r3, ip
 8000e3a:	d103      	bne.n	8000e44 <__aeabi_fmul+0x14c>
 8000e3c:	024b      	lsls	r3, r1, #9
 8000e3e:	bf18      	it	ne
 8000e40:	4608      	movne	r0, r1
 8000e42:	d108      	bne.n	8000e56 <__aeabi_fmul+0x15e>
 8000e44:	ea80 0001 	eor.w	r0, r0, r1
 8000e48:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000e4c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000e50:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e54:	4770      	bx	lr
 8000e56:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000e5a:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000e5e:	4770      	bx	lr

08000e60 <__aeabi_fdiv>:
 8000e60:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000e64:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000e68:	bf1e      	ittt	ne
 8000e6a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000e6e:	ea92 0f0c 	teqne	r2, ip
 8000e72:	ea93 0f0c 	teqne	r3, ip
 8000e76:	d069      	beq.n	8000f4c <__aeabi_fdiv+0xec>
 8000e78:	eba2 0203 	sub.w	r2, r2, r3
 8000e7c:	ea80 0c01 	eor.w	ip, r0, r1
 8000e80:	0249      	lsls	r1, r1, #9
 8000e82:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000e86:	d037      	beq.n	8000ef8 <__aeabi_fdiv+0x98>
 8000e88:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000e8c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000e90:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000e94:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000e98:	428b      	cmp	r3, r1
 8000e9a:	bf38      	it	cc
 8000e9c:	005b      	lslcc	r3, r3, #1
 8000e9e:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000ea2:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000ea6:	428b      	cmp	r3, r1
 8000ea8:	bf24      	itt	cs
 8000eaa:	1a5b      	subcs	r3, r3, r1
 8000eac:	ea40 000c 	orrcs.w	r0, r0, ip
 8000eb0:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000eb4:	bf24      	itt	cs
 8000eb6:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000eba:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000ebe:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000ec2:	bf24      	itt	cs
 8000ec4:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000ec8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000ecc:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000ed0:	bf24      	itt	cs
 8000ed2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000ed6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000eda:	011b      	lsls	r3, r3, #4
 8000edc:	bf18      	it	ne
 8000ede:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000ee2:	d1e0      	bne.n	8000ea6 <__aeabi_fdiv+0x46>
 8000ee4:	2afd      	cmp	r2, #253	@ 0xfd
 8000ee6:	f63f af50 	bhi.w	8000d8a <__aeabi_fmul+0x92>
 8000eea:	428b      	cmp	r3, r1
 8000eec:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000ef0:	bf08      	it	eq
 8000ef2:	f020 0001 	biceq.w	r0, r0, #1
 8000ef6:	4770      	bx	lr
 8000ef8:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000efc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f00:	327f      	adds	r2, #127	@ 0x7f
 8000f02:	bfc2      	ittt	gt
 8000f04:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000f08:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f0c:	4770      	bxgt	lr
 8000f0e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000f12:	f04f 0300 	mov.w	r3, #0
 8000f16:	3a01      	subs	r2, #1
 8000f18:	e737      	b.n	8000d8a <__aeabi_fmul+0x92>
 8000f1a:	f092 0f00 	teq	r2, #0
 8000f1e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000f22:	bf02      	ittt	eq
 8000f24:	0040      	lsleq	r0, r0, #1
 8000f26:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000f2a:	3a01      	subeq	r2, #1
 8000f2c:	d0f9      	beq.n	8000f22 <__aeabi_fdiv+0xc2>
 8000f2e:	ea40 000c 	orr.w	r0, r0, ip
 8000f32:	f093 0f00 	teq	r3, #0
 8000f36:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000f3a:	bf02      	ittt	eq
 8000f3c:	0049      	lsleq	r1, r1, #1
 8000f3e:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000f42:	3b01      	subeq	r3, #1
 8000f44:	d0f9      	beq.n	8000f3a <__aeabi_fdiv+0xda>
 8000f46:	ea41 010c 	orr.w	r1, r1, ip
 8000f4a:	e795      	b.n	8000e78 <__aeabi_fdiv+0x18>
 8000f4c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000f50:	ea92 0f0c 	teq	r2, ip
 8000f54:	d108      	bne.n	8000f68 <__aeabi_fdiv+0x108>
 8000f56:	0242      	lsls	r2, r0, #9
 8000f58:	f47f af7d 	bne.w	8000e56 <__aeabi_fmul+0x15e>
 8000f5c:	ea93 0f0c 	teq	r3, ip
 8000f60:	f47f af70 	bne.w	8000e44 <__aeabi_fmul+0x14c>
 8000f64:	4608      	mov	r0, r1
 8000f66:	e776      	b.n	8000e56 <__aeabi_fmul+0x15e>
 8000f68:	ea93 0f0c 	teq	r3, ip
 8000f6c:	d104      	bne.n	8000f78 <__aeabi_fdiv+0x118>
 8000f6e:	024b      	lsls	r3, r1, #9
 8000f70:	f43f af4c 	beq.w	8000e0c <__aeabi_fmul+0x114>
 8000f74:	4608      	mov	r0, r1
 8000f76:	e76e      	b.n	8000e56 <__aeabi_fmul+0x15e>
 8000f78:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000f7c:	bf18      	it	ne
 8000f7e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000f82:	d1ca      	bne.n	8000f1a <__aeabi_fdiv+0xba>
 8000f84:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8000f88:	f47f af5c 	bne.w	8000e44 <__aeabi_fmul+0x14c>
 8000f8c:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000f90:	f47f af3c 	bne.w	8000e0c <__aeabi_fmul+0x114>
 8000f94:	e75f      	b.n	8000e56 <__aeabi_fmul+0x15e>
 8000f96:	bf00      	nop

08000f98 <__gesf2>:
 8000f98:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000f9c:	e006      	b.n	8000fac <__cmpsf2+0x4>
 8000f9e:	bf00      	nop

08000fa0 <__lesf2>:
 8000fa0:	f04f 0c01 	mov.w	ip, #1
 8000fa4:	e002      	b.n	8000fac <__cmpsf2+0x4>
 8000fa6:	bf00      	nop

08000fa8 <__cmpsf2>:
 8000fa8:	f04f 0c01 	mov.w	ip, #1
 8000fac:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000fb0:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000fb4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000fb8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000fbc:	bf18      	it	ne
 8000fbe:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000fc2:	d011      	beq.n	8000fe8 <__cmpsf2+0x40>
 8000fc4:	b001      	add	sp, #4
 8000fc6:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000fca:	bf18      	it	ne
 8000fcc:	ea90 0f01 	teqne	r0, r1
 8000fd0:	bf58      	it	pl
 8000fd2:	ebb2 0003 	subspl.w	r0, r2, r3
 8000fd6:	bf88      	it	hi
 8000fd8:	17c8      	asrhi	r0, r1, #31
 8000fda:	bf38      	it	cc
 8000fdc:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000fe0:	bf18      	it	ne
 8000fe2:	f040 0001 	orrne.w	r0, r0, #1
 8000fe6:	4770      	bx	lr
 8000fe8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000fec:	d102      	bne.n	8000ff4 <__cmpsf2+0x4c>
 8000fee:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000ff2:	d105      	bne.n	8001000 <__cmpsf2+0x58>
 8000ff4:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000ff8:	d1e4      	bne.n	8000fc4 <__cmpsf2+0x1c>
 8000ffa:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000ffe:	d0e1      	beq.n	8000fc4 <__cmpsf2+0x1c>
 8001000:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001004:	4770      	bx	lr
 8001006:	bf00      	nop

08001008 <__aeabi_cfrcmple>:
 8001008:	4684      	mov	ip, r0
 800100a:	4608      	mov	r0, r1
 800100c:	4661      	mov	r1, ip
 800100e:	e7ff      	b.n	8001010 <__aeabi_cfcmpeq>

08001010 <__aeabi_cfcmpeq>:
 8001010:	b50f      	push	{r0, r1, r2, r3, lr}
 8001012:	f7ff ffc9 	bl	8000fa8 <__cmpsf2>
 8001016:	2800      	cmp	r0, #0
 8001018:	bf48      	it	mi
 800101a:	f110 0f00 	cmnmi.w	r0, #0
 800101e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08001020 <__aeabi_fcmpeq>:
 8001020:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001024:	f7ff fff4 	bl	8001010 <__aeabi_cfcmpeq>
 8001028:	bf0c      	ite	eq
 800102a:	2001      	moveq	r0, #1
 800102c:	2000      	movne	r0, #0
 800102e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001032:	bf00      	nop

08001034 <__aeabi_fcmplt>:
 8001034:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001038:	f7ff ffea 	bl	8001010 <__aeabi_cfcmpeq>
 800103c:	bf34      	ite	cc
 800103e:	2001      	movcc	r0, #1
 8001040:	2000      	movcs	r0, #0
 8001042:	f85d fb08 	ldr.w	pc, [sp], #8
 8001046:	bf00      	nop

08001048 <__aeabi_fcmple>:
 8001048:	f84d ed08 	str.w	lr, [sp, #-8]!
 800104c:	f7ff ffe0 	bl	8001010 <__aeabi_cfcmpeq>
 8001050:	bf94      	ite	ls
 8001052:	2001      	movls	r0, #1
 8001054:	2000      	movhi	r0, #0
 8001056:	f85d fb08 	ldr.w	pc, [sp], #8
 800105a:	bf00      	nop

0800105c <__aeabi_fcmpge>:
 800105c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001060:	f7ff ffd2 	bl	8001008 <__aeabi_cfrcmple>
 8001064:	bf94      	ite	ls
 8001066:	2001      	movls	r0, #1
 8001068:	2000      	movhi	r0, #0
 800106a:	f85d fb08 	ldr.w	pc, [sp], #8
 800106e:	bf00      	nop

08001070 <__aeabi_fcmpgt>:
 8001070:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001074:	f7ff ffc8 	bl	8001008 <__aeabi_cfrcmple>
 8001078:	bf34      	ite	cc
 800107a:	2001      	movcc	r0, #1
 800107c:	2000      	movcs	r0, #0
 800107e:	f85d fb08 	ldr.w	pc, [sp], #8
 8001082:	bf00      	nop

08001084 <__aeabi_f2uiz>:
 8001084:	0042      	lsls	r2, r0, #1
 8001086:	d20e      	bcs.n	80010a6 <__aeabi_f2uiz+0x22>
 8001088:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 800108c:	d30b      	bcc.n	80010a6 <__aeabi_f2uiz+0x22>
 800108e:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8001092:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001096:	d409      	bmi.n	80010ac <__aeabi_f2uiz+0x28>
 8001098:	ea4f 2300 	mov.w	r3, r0, lsl #8
 800109c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80010a0:	fa23 f002 	lsr.w	r0, r3, r2
 80010a4:	4770      	bx	lr
 80010a6:	f04f 0000 	mov.w	r0, #0
 80010aa:	4770      	bx	lr
 80010ac:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 80010b0:	d101      	bne.n	80010b6 <__aeabi_f2uiz+0x32>
 80010b2:	0242      	lsls	r2, r0, #9
 80010b4:	d102      	bne.n	80010bc <__aeabi_f2uiz+0x38>
 80010b6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80010ba:	4770      	bx	lr
 80010bc:	f04f 0000 	mov.w	r0, #0
 80010c0:	4770      	bx	lr
 80010c2:	bf00      	nop

080010c4 <__aeabi_d2lz>:
 80010c4:	b538      	push	{r3, r4, r5, lr}
 80010c6:	2200      	movs	r2, #0
 80010c8:	2300      	movs	r3, #0
 80010ca:	4604      	mov	r4, r0
 80010cc:	460d      	mov	r5, r1
 80010ce:	f7ff fc6d 	bl	80009ac <__aeabi_dcmplt>
 80010d2:	b928      	cbnz	r0, 80010e0 <__aeabi_d2lz+0x1c>
 80010d4:	4620      	mov	r0, r4
 80010d6:	4629      	mov	r1, r5
 80010d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80010dc:	f000 b80a 	b.w	80010f4 <__aeabi_d2ulz>
 80010e0:	4620      	mov	r0, r4
 80010e2:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 80010e6:	f000 f805 	bl	80010f4 <__aeabi_d2ulz>
 80010ea:	4240      	negs	r0, r0
 80010ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80010f0:	bd38      	pop	{r3, r4, r5, pc}
 80010f2:	bf00      	nop

080010f4 <__aeabi_d2ulz>:
 80010f4:	b5d0      	push	{r4, r6, r7, lr}
 80010f6:	2200      	movs	r2, #0
 80010f8:	4b0b      	ldr	r3, [pc, #44]	@ (8001128 <__aeabi_d2ulz+0x34>)
 80010fa:	4606      	mov	r6, r0
 80010fc:	460f      	mov	r7, r1
 80010fe:	f7ff f9e3 	bl	80004c8 <__aeabi_dmul>
 8001102:	f7ff fc7b 	bl	80009fc <__aeabi_d2uiz>
 8001106:	4604      	mov	r4, r0
 8001108:	f7ff f964 	bl	80003d4 <__aeabi_ui2d>
 800110c:	2200      	movs	r2, #0
 800110e:	4b07      	ldr	r3, [pc, #28]	@ (800112c <__aeabi_d2ulz+0x38>)
 8001110:	f7ff f9da 	bl	80004c8 <__aeabi_dmul>
 8001114:	4602      	mov	r2, r0
 8001116:	460b      	mov	r3, r1
 8001118:	4630      	mov	r0, r6
 800111a:	4639      	mov	r1, r7
 800111c:	f7ff f81c 	bl	8000158 <__aeabi_dsub>
 8001120:	f7ff fc6c 	bl	80009fc <__aeabi_d2uiz>
 8001124:	4621      	mov	r1, r4
 8001126:	bdd0      	pop	{r4, r6, r7, pc}
 8001128:	3df00000 	.word	0x3df00000
 800112c:	41f00000 	.word	0x41f00000

08001130 <main>:
void turnOFF(char i);
char y =0;



int main(void) {
 8001130:	b580      	push	{r7, lr}
 8001132:	b082      	sub	sp, #8
 8001134:	af00      	add	r7, sp, #0

	RCC->APB2ENR |= 0xFFFFF;
 8001136:	4b2e      	ldr	r3, [pc, #184]	@ (80011f0 <main+0xc0>)
 8001138:	699b      	ldr	r3, [r3, #24]
 800113a:	4a2d      	ldr	r2, [pc, #180]	@ (80011f0 <main+0xc0>)
 800113c:	ea6f 5313 	mvn.w	r3, r3, lsr #20
 8001140:	ea6f 5303 	mvn.w	r3, r3, lsl #20
 8001144:	6193      	str	r3, [r2, #24]
	GPIOB -> CRH = 0x44442244;
 8001146:	4b2b      	ldr	r3, [pc, #172]	@ (80011f4 <main+0xc4>)
 8001148:	4a2b      	ldr	r2, [pc, #172]	@ (80011f8 <main+0xc8>)
 800114a:	605a      	str	r2, [r3, #4]
	GPIOA -> CRL = 0x24444444;
 800114c:	4b2b      	ldr	r3, [pc, #172]	@ (80011fc <main+0xcc>)
 800114e:	4a2c      	ldr	r2, [pc, #176]	@ (8001200 <main+0xd0>)
 8001150:	601a      	str	r2, [r3, #0]
	//turnON(0);

	UART_init(1,BAUDRATE);
 8001152:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8001156:	2001      	movs	r0, #1
 8001158:	f000 fb80 	bl	800185c <UART_init>
	while (1) {
		UARTMessage msg;
		do {
		    msg = UART_receive_message(1);
 800115c:	463b      	mov	r3, r7
 800115e:	2101      	movs	r1, #1
 8001160:	4618      	mov	r0, r3
 8001162:	f000 fc3d 	bl	80019e0 <UART_receive_message>
		} while (msg.type == MSG_NONE);
 8001166:	783b      	ldrb	r3, [r7, #0]
 8001168:	2b00      	cmp	r3, #0
 800116a:	d0f7      	beq.n	800115c <main+0x2c>

		    switch (msg.type) {
 800116c:	783b      	ldrb	r3, [r7, #0]
 800116e:	2b01      	cmp	r3, #1
 8001170:	d002      	beq.n	8001178 <main+0x48>
 8001172:	2b02      	cmp	r3, #2
 8001174:	d021      	beq.n	80011ba <main+0x8a>
		            	y = 2;
		            }
		            break;
		        default:
		            // No complete message yet
		            break;
 8001176:	e03a      	b.n	80011ee <main+0xbe>
		        	if (msg.distance == 0.0f) {
 8001178:	687b      	ldr	r3, [r7, #4]
 800117a:	f04f 0100 	mov.w	r1, #0
 800117e:	4618      	mov	r0, r3
 8001180:	f7ff ff4e 	bl	8001020 <__aeabi_fcmpeq>
 8001184:	4603      	mov	r3, r0
 8001186:	2b00      	cmp	r3, #0
 8001188:	d006      	beq.n	8001198 <main+0x68>
		        	                turnON(0);
 800118a:	2000      	movs	r0, #0
 800118c:	f000 f83c 	bl	8001208 <turnON>
		        	                turnOFF(1);
 8001190:	2001      	movs	r0, #1
 8001192:	f000 f855 	bl	8001240 <turnOFF>
		            break;
 8001196:	e02a      	b.n	80011ee <main+0xbe>
		        	} else if (msg.distance == 1.0f) {
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	f04f 517e 	mov.w	r1, #1065353216	@ 0x3f800000
 800119e:	4618      	mov	r0, r3
 80011a0:	f7ff ff3e 	bl	8001020 <__aeabi_fcmpeq>
 80011a4:	4603      	mov	r3, r0
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d100      	bne.n	80011ac <main+0x7c>
		            break;
 80011aa:	e020      	b.n	80011ee <main+0xbe>
		        	                turnON(1);
 80011ac:	2001      	movs	r0, #1
 80011ae:	f000 f82b 	bl	8001208 <turnON>
		        	                turnOFF(0);
 80011b2:	2000      	movs	r0, #0
 80011b4:	f000 f844 	bl	8001240 <turnOFF>
		            break;
 80011b8:	e019      	b.n	80011ee <main+0xbe>
		            if (msg.command == GO) {
 80011ba:	793b      	ldrb	r3, [r7, #4]
 80011bc:	2b01      	cmp	r3, #1
 80011be:	d109      	bne.n	80011d4 <main+0xa4>
		            	y= 1;
 80011c0:	4b10      	ldr	r3, [pc, #64]	@ (8001204 <main+0xd4>)
 80011c2:	2201      	movs	r2, #1
 80011c4:	701a      	strb	r2, [r3, #0]
		                turnON(1);
 80011c6:	2001      	movs	r0, #1
 80011c8:	f000 f81e 	bl	8001208 <turnON>
		                turnOFF(0);
 80011cc:	2000      	movs	r0, #0
 80011ce:	f000 f837 	bl	8001240 <turnOFF>
		            break;
 80011d2:	e00b      	b.n	80011ec <main+0xbc>
		            } else if (msg.command == STOP) {
 80011d4:	793b      	ldrb	r3, [r7, #4]
 80011d6:	2b02      	cmp	r3, #2
 80011d8:	d108      	bne.n	80011ec <main+0xbc>
		            	turnON(0);
 80011da:	2000      	movs	r0, #0
 80011dc:	f000 f814 	bl	8001208 <turnON>
		            	turnOFF(1);
 80011e0:	2001      	movs	r0, #1
 80011e2:	f000 f82d 	bl	8001240 <turnOFF>
		            	y = 2;
 80011e6:	4b07      	ldr	r3, [pc, #28]	@ (8001204 <main+0xd4>)
 80011e8:	2202      	movs	r2, #2
 80011ea:	701a      	strb	r2, [r3, #0]
		            break;
 80011ec:	bf00      	nop
	while (1) {
 80011ee:	e7b5      	b.n	800115c <main+0x2c>
 80011f0:	40021000 	.word	0x40021000
 80011f4:	40010c00 	.word	0x40010c00
 80011f8:	44442244 	.word	0x44442244
 80011fc:	40010800 	.word	0x40010800
 8001200:	24444444 	.word	0x24444444
 8001204:	200001ec 	.word	0x200001ec

08001208 <turnON>:

	}

}

void turnON(char i){
 8001208:	b480      	push	{r7}
 800120a:	b083      	sub	sp, #12
 800120c:	af00      	add	r7, sp, #0
 800120e:	4603      	mov	r3, r0
 8001210:	71fb      	strb	r3, [r7, #7]

	switch (i){
 8001212:	79fb      	ldrb	r3, [r7, #7]
 8001214:	2b00      	cmp	r3, #0
 8001216:	d002      	beq.n	800121e <turnON+0x16>
 8001218:	2b01      	cmp	r3, #1
 800121a:	d005      	beq.n	8001228 <turnON+0x20>
	case 0 : GPIOB ->ODR = (1<<10); return;
	case 1 : GPIOB ->ODR = (1<<11); return;
	default : return;
 800121c:	e009      	b.n	8001232 <turnON+0x2a>
	case 0 : GPIOB ->ODR = (1<<10); return;
 800121e:	4b07      	ldr	r3, [pc, #28]	@ (800123c <turnON+0x34>)
 8001220:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001224:	60da      	str	r2, [r3, #12]
 8001226:	e004      	b.n	8001232 <turnON+0x2a>
	case 1 : GPIOB ->ODR = (1<<11); return;
 8001228:	4b04      	ldr	r3, [pc, #16]	@ (800123c <turnON+0x34>)
 800122a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800122e:	60da      	str	r2, [r3, #12]
 8001230:	bf00      	nop
	}
}
 8001232:	370c      	adds	r7, #12
 8001234:	46bd      	mov	sp, r7
 8001236:	bc80      	pop	{r7}
 8001238:	4770      	bx	lr
 800123a:	bf00      	nop
 800123c:	40010c00 	.word	0x40010c00

08001240 <turnOFF>:

void turnOFF(char i){
 8001240:	b480      	push	{r7}
 8001242:	b083      	sub	sp, #12
 8001244:	af00      	add	r7, sp, #0
 8001246:	4603      	mov	r3, r0
 8001248:	71fb      	strb	r3, [r7, #7]

	switch (i){
 800124a:	79fb      	ldrb	r3, [r7, #7]
 800124c:	2b00      	cmp	r3, #0
 800124e:	d002      	beq.n	8001256 <turnOFF+0x16>
 8001250:	2b01      	cmp	r3, #1
 8001252:	d005      	beq.n	8001260 <turnOFF+0x20>
	case 0 : GPIOB ->ODR = ~(1<<10); return;
	case 1 : GPIOB ->ODR = ~(1<<11); return;
	default : return;
 8001254:	e009      	b.n	800126a <turnOFF+0x2a>
	case 0 : GPIOB ->ODR = ~(1<<10); return;
 8001256:	4b07      	ldr	r3, [pc, #28]	@ (8001274 <turnOFF+0x34>)
 8001258:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800125c:	60da      	str	r2, [r3, #12]
 800125e:	e004      	b.n	800126a <turnOFF+0x2a>
	case 1 : GPIOB ->ODR = ~(1<<11); return;
 8001260:	4b04      	ldr	r3, [pc, #16]	@ (8001274 <turnOFF+0x34>)
 8001262:	f46f 6200 	mvn.w	r2, #2048	@ 0x800
 8001266:	60da      	str	r2, [r3, #12]
 8001268:	bf00      	nop
	}
}
 800126a:	370c      	adds	r7, #12
 800126c:	46bd      	mov	sp, r7
 800126e:	bc80      	pop	{r7}
 8001270:	4770      	bx	lr
 8001272:	bf00      	nop
 8001274:	40010c00 	.word	0x40010c00

08001278 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001278:	b480      	push	{r7}
 800127a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800127c:	bf00      	nop
 800127e:	e7fd      	b.n	800127c <NMI_Handler+0x4>

08001280 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001280:	b480      	push	{r7}
 8001282:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001284:	bf00      	nop
 8001286:	e7fd      	b.n	8001284 <HardFault_Handler+0x4>

08001288 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001288:	b480      	push	{r7}
 800128a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800128c:	bf00      	nop
 800128e:	e7fd      	b.n	800128c <MemManage_Handler+0x4>

08001290 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001290:	b480      	push	{r7}
 8001292:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001294:	bf00      	nop
 8001296:	e7fd      	b.n	8001294 <BusFault_Handler+0x4>

08001298 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001298:	b480      	push	{r7}
 800129a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800129c:	bf00      	nop
 800129e:	e7fd      	b.n	800129c <UsageFault_Handler+0x4>

080012a0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80012a0:	b480      	push	{r7}
 80012a2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80012a4:	bf00      	nop
 80012a6:	46bd      	mov	sp, r7
 80012a8:	bc80      	pop	{r7}
 80012aa:	4770      	bx	lr

080012ac <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80012ac:	b480      	push	{r7}
 80012ae:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80012b0:	bf00      	nop
 80012b2:	46bd      	mov	sp, r7
 80012b4:	bc80      	pop	{r7}
 80012b6:	4770      	bx	lr

080012b8 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80012b8:	b480      	push	{r7}
 80012ba:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80012bc:	bf00      	nop
 80012be:	46bd      	mov	sp, r7
 80012c0:	bc80      	pop	{r7}
 80012c2:	4770      	bx	lr

080012c4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80012c4:	b580      	push	{r7, lr}
 80012c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80012c8:	f000 f8f0 	bl	80014ac <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80012cc:	bf00      	nop
 80012ce:	bd80      	pop	{r7, pc}

080012d0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80012d0:	b480      	push	{r7}
 80012d2:	af00      	add	r7, sp, #0
  return 1;
 80012d4:	2301      	movs	r3, #1
}
 80012d6:	4618      	mov	r0, r3
 80012d8:	46bd      	mov	sp, r7
 80012da:	bc80      	pop	{r7}
 80012dc:	4770      	bx	lr

080012de <_kill>:

int _kill(int pid, int sig)
{
 80012de:	b580      	push	{r7, lr}
 80012e0:	b082      	sub	sp, #8
 80012e2:	af00      	add	r7, sp, #0
 80012e4:	6078      	str	r0, [r7, #4]
 80012e6:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80012e8:	f001 fb60 	bl	80029ac <__errno>
 80012ec:	4603      	mov	r3, r0
 80012ee:	2216      	movs	r2, #22
 80012f0:	601a      	str	r2, [r3, #0]
  return -1;
 80012f2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80012f6:	4618      	mov	r0, r3
 80012f8:	3708      	adds	r7, #8
 80012fa:	46bd      	mov	sp, r7
 80012fc:	bd80      	pop	{r7, pc}

080012fe <_exit>:

void _exit (int status)
{
 80012fe:	b580      	push	{r7, lr}
 8001300:	b082      	sub	sp, #8
 8001302:	af00      	add	r7, sp, #0
 8001304:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001306:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800130a:	6878      	ldr	r0, [r7, #4]
 800130c:	f7ff ffe7 	bl	80012de <_kill>
  while (1) {}    /* Make sure we hang here */
 8001310:	bf00      	nop
 8001312:	e7fd      	b.n	8001310 <_exit+0x12>

08001314 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001314:	b580      	push	{r7, lr}
 8001316:	b086      	sub	sp, #24
 8001318:	af00      	add	r7, sp, #0
 800131a:	60f8      	str	r0, [r7, #12]
 800131c:	60b9      	str	r1, [r7, #8]
 800131e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001320:	2300      	movs	r3, #0
 8001322:	617b      	str	r3, [r7, #20]
 8001324:	e00a      	b.n	800133c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001326:	f3af 8000 	nop.w
 800132a:	4601      	mov	r1, r0
 800132c:	68bb      	ldr	r3, [r7, #8]
 800132e:	1c5a      	adds	r2, r3, #1
 8001330:	60ba      	str	r2, [r7, #8]
 8001332:	b2ca      	uxtb	r2, r1
 8001334:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001336:	697b      	ldr	r3, [r7, #20]
 8001338:	3301      	adds	r3, #1
 800133a:	617b      	str	r3, [r7, #20]
 800133c:	697a      	ldr	r2, [r7, #20]
 800133e:	687b      	ldr	r3, [r7, #4]
 8001340:	429a      	cmp	r2, r3
 8001342:	dbf0      	blt.n	8001326 <_read+0x12>
  }

  return len;
 8001344:	687b      	ldr	r3, [r7, #4]
}
 8001346:	4618      	mov	r0, r3
 8001348:	3718      	adds	r7, #24
 800134a:	46bd      	mov	sp, r7
 800134c:	bd80      	pop	{r7, pc}

0800134e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800134e:	b580      	push	{r7, lr}
 8001350:	b086      	sub	sp, #24
 8001352:	af00      	add	r7, sp, #0
 8001354:	60f8      	str	r0, [r7, #12]
 8001356:	60b9      	str	r1, [r7, #8]
 8001358:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800135a:	2300      	movs	r3, #0
 800135c:	617b      	str	r3, [r7, #20]
 800135e:	e009      	b.n	8001374 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001360:	68bb      	ldr	r3, [r7, #8]
 8001362:	1c5a      	adds	r2, r3, #1
 8001364:	60ba      	str	r2, [r7, #8]
 8001366:	781b      	ldrb	r3, [r3, #0]
 8001368:	4618      	mov	r0, r3
 800136a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800136e:	697b      	ldr	r3, [r7, #20]
 8001370:	3301      	adds	r3, #1
 8001372:	617b      	str	r3, [r7, #20]
 8001374:	697a      	ldr	r2, [r7, #20]
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	429a      	cmp	r2, r3
 800137a:	dbf1      	blt.n	8001360 <_write+0x12>
  }
  return len;
 800137c:	687b      	ldr	r3, [r7, #4]
}
 800137e:	4618      	mov	r0, r3
 8001380:	3718      	adds	r7, #24
 8001382:	46bd      	mov	sp, r7
 8001384:	bd80      	pop	{r7, pc}

08001386 <_close>:

int _close(int file)
{
 8001386:	b480      	push	{r7}
 8001388:	b083      	sub	sp, #12
 800138a:	af00      	add	r7, sp, #0
 800138c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800138e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001392:	4618      	mov	r0, r3
 8001394:	370c      	adds	r7, #12
 8001396:	46bd      	mov	sp, r7
 8001398:	bc80      	pop	{r7}
 800139a:	4770      	bx	lr

0800139c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800139c:	b480      	push	{r7}
 800139e:	b083      	sub	sp, #12
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
 80013a4:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80013a6:	683b      	ldr	r3, [r7, #0]
 80013a8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80013ac:	605a      	str	r2, [r3, #4]
  return 0;
 80013ae:	2300      	movs	r3, #0
}
 80013b0:	4618      	mov	r0, r3
 80013b2:	370c      	adds	r7, #12
 80013b4:	46bd      	mov	sp, r7
 80013b6:	bc80      	pop	{r7}
 80013b8:	4770      	bx	lr

080013ba <_isatty>:

int _isatty(int file)
{
 80013ba:	b480      	push	{r7}
 80013bc:	b083      	sub	sp, #12
 80013be:	af00      	add	r7, sp, #0
 80013c0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80013c2:	2301      	movs	r3, #1
}
 80013c4:	4618      	mov	r0, r3
 80013c6:	370c      	adds	r7, #12
 80013c8:	46bd      	mov	sp, r7
 80013ca:	bc80      	pop	{r7}
 80013cc:	4770      	bx	lr

080013ce <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80013ce:	b480      	push	{r7}
 80013d0:	b085      	sub	sp, #20
 80013d2:	af00      	add	r7, sp, #0
 80013d4:	60f8      	str	r0, [r7, #12]
 80013d6:	60b9      	str	r1, [r7, #8]
 80013d8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80013da:	2300      	movs	r3, #0
}
 80013dc:	4618      	mov	r0, r3
 80013de:	3714      	adds	r7, #20
 80013e0:	46bd      	mov	sp, r7
 80013e2:	bc80      	pop	{r7}
 80013e4:	4770      	bx	lr
	...

080013e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80013e8:	b580      	push	{r7, lr}
 80013ea:	b086      	sub	sp, #24
 80013ec:	af00      	add	r7, sp, #0
 80013ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80013f0:	4a14      	ldr	r2, [pc, #80]	@ (8001444 <_sbrk+0x5c>)
 80013f2:	4b15      	ldr	r3, [pc, #84]	@ (8001448 <_sbrk+0x60>)
 80013f4:	1ad3      	subs	r3, r2, r3
 80013f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80013f8:	697b      	ldr	r3, [r7, #20]
 80013fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80013fc:	4b13      	ldr	r3, [pc, #76]	@ (800144c <_sbrk+0x64>)
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	2b00      	cmp	r3, #0
 8001402:	d102      	bne.n	800140a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001404:	4b11      	ldr	r3, [pc, #68]	@ (800144c <_sbrk+0x64>)
 8001406:	4a12      	ldr	r2, [pc, #72]	@ (8001450 <_sbrk+0x68>)
 8001408:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800140a:	4b10      	ldr	r3, [pc, #64]	@ (800144c <_sbrk+0x64>)
 800140c:	681a      	ldr	r2, [r3, #0]
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	4413      	add	r3, r2
 8001412:	693a      	ldr	r2, [r7, #16]
 8001414:	429a      	cmp	r2, r3
 8001416:	d207      	bcs.n	8001428 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001418:	f001 fac8 	bl	80029ac <__errno>
 800141c:	4603      	mov	r3, r0
 800141e:	220c      	movs	r2, #12
 8001420:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001422:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001426:	e009      	b.n	800143c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001428:	4b08      	ldr	r3, [pc, #32]	@ (800144c <_sbrk+0x64>)
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800142e:	4b07      	ldr	r3, [pc, #28]	@ (800144c <_sbrk+0x64>)
 8001430:	681a      	ldr	r2, [r3, #0]
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	4413      	add	r3, r2
 8001436:	4a05      	ldr	r2, [pc, #20]	@ (800144c <_sbrk+0x64>)
 8001438:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800143a:	68fb      	ldr	r3, [r7, #12]
}
 800143c:	4618      	mov	r0, r3
 800143e:	3718      	adds	r7, #24
 8001440:	46bd      	mov	sp, r7
 8001442:	bd80      	pop	{r7, pc}
 8001444:	20005000 	.word	0x20005000
 8001448:	00000400 	.word	0x00000400
 800144c:	200001f0 	.word	0x200001f0
 8001450:	200003b0 	.word	0x200003b0

08001454 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001454:	b480      	push	{r7}
 8001456:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001458:	bf00      	nop
 800145a:	46bd      	mov	sp, r7
 800145c:	bc80      	pop	{r7}
 800145e:	4770      	bx	lr

08001460 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8001460:	f7ff fff8 	bl	8001454 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001464:	480b      	ldr	r0, [pc, #44]	@ (8001494 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8001466:	490c      	ldr	r1, [pc, #48]	@ (8001498 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8001468:	4a0c      	ldr	r2, [pc, #48]	@ (800149c <LoopFillZerobss+0x16>)
  movs r3, #0
 800146a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800146c:	e002      	b.n	8001474 <LoopCopyDataInit>

0800146e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800146e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001470:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001472:	3304      	adds	r3, #4

08001474 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001474:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001476:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001478:	d3f9      	bcc.n	800146e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800147a:	4a09      	ldr	r2, [pc, #36]	@ (80014a0 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 800147c:	4c09      	ldr	r4, [pc, #36]	@ (80014a4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800147e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001480:	e001      	b.n	8001486 <LoopFillZerobss>

08001482 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001482:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001484:	3204      	adds	r2, #4

08001486 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001486:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001488:	d3fb      	bcc.n	8001482 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800148a:	f001 fa95 	bl	80029b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800148e:	f7ff fe4f 	bl	8001130 <main>
  bx lr
 8001492:	4770      	bx	lr
  ldr r0, =_sdata
 8001494:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001498:	200001cc 	.word	0x200001cc
  ldr r2, =_sidata
 800149c:	08004a74 	.word	0x08004a74
  ldr r2, =_sbss
 80014a0:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 80014a4:	200003b0 	.word	0x200003b0

080014a8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80014a8:	e7fe      	b.n	80014a8 <ADC1_2_IRQHandler>
	...

080014ac <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80014ac:	b480      	push	{r7}
 80014ae:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80014b0:	4b05      	ldr	r3, [pc, #20]	@ (80014c8 <HAL_IncTick+0x1c>)
 80014b2:	781b      	ldrb	r3, [r3, #0]
 80014b4:	461a      	mov	r2, r3
 80014b6:	4b05      	ldr	r3, [pc, #20]	@ (80014cc <HAL_IncTick+0x20>)
 80014b8:	681b      	ldr	r3, [r3, #0]
 80014ba:	4413      	add	r3, r2
 80014bc:	4a03      	ldr	r2, [pc, #12]	@ (80014cc <HAL_IncTick+0x20>)
 80014be:	6013      	str	r3, [r2, #0]
}
 80014c0:	bf00      	nop
 80014c2:	46bd      	mov	sp, r7
 80014c4:	bc80      	pop	{r7}
 80014c6:	4770      	bx	lr
 80014c8:	20000000 	.word	0x20000000
 80014cc:	200001f4 	.word	0x200001f4

080014d0 <GPIO_pinMode>:
#include "GPIO_interface.h"

void GPIO_pinMode(GPIO_TypeDef *GPIOX, uint8_t pinNumber, GPIO_MODE mode){
 80014d0:	b480      	push	{r7}
 80014d2:	b085      	sub	sp, #20
 80014d4:	af00      	add	r7, sp, #0
 80014d6:	6078      	str	r0, [r7, #4]
 80014d8:	460b      	mov	r3, r1
 80014da:	70fb      	strb	r3, [r7, #3]
 80014dc:	4613      	mov	r3, r2
 80014de:	70bb      	strb	r3, [r7, #2]
	if (pinNumber < 0 || pinNumber > 15){
 80014e0:	78fb      	ldrb	r3, [r7, #3]
 80014e2:	2b0f      	cmp	r3, #15
 80014e4:	f200 8099 	bhi.w	800161a <GPIO_pinMode+0x14a>
		return;
	}
	// Initialize the clock of port x
    if (GPIOX == GPIOA) {
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	4a4e      	ldr	r2, [pc, #312]	@ (8001624 <GPIO_pinMode+0x154>)
 80014ec:	4293      	cmp	r3, r2
 80014ee:	d106      	bne.n	80014fe <GPIO_pinMode+0x2e>
		SET_BIT(RCC->APB2ENR, 2);
 80014f0:	4b4d      	ldr	r3, [pc, #308]	@ (8001628 <GPIO_pinMode+0x158>)
 80014f2:	699b      	ldr	r3, [r3, #24]
 80014f4:	4a4c      	ldr	r2, [pc, #304]	@ (8001628 <GPIO_pinMode+0x158>)
 80014f6:	f043 0304 	orr.w	r3, r3, #4
 80014fa:	6193      	str	r3, [r2, #24]
 80014fc:	e014      	b.n	8001528 <GPIO_pinMode+0x58>
    } else if (GPIOX == GPIOB) {
 80014fe:	687b      	ldr	r3, [r7, #4]
 8001500:	4a4a      	ldr	r2, [pc, #296]	@ (800162c <GPIO_pinMode+0x15c>)
 8001502:	4293      	cmp	r3, r2
 8001504:	d106      	bne.n	8001514 <GPIO_pinMode+0x44>
		SET_BIT(RCC->APB2ENR, 3);
 8001506:	4b48      	ldr	r3, [pc, #288]	@ (8001628 <GPIO_pinMode+0x158>)
 8001508:	699b      	ldr	r3, [r3, #24]
 800150a:	4a47      	ldr	r2, [pc, #284]	@ (8001628 <GPIO_pinMode+0x158>)
 800150c:	f043 0308 	orr.w	r3, r3, #8
 8001510:	6193      	str	r3, [r2, #24]
 8001512:	e009      	b.n	8001528 <GPIO_pinMode+0x58>
    } else if (GPIOX == GPIOC) {
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	4a46      	ldr	r2, [pc, #280]	@ (8001630 <GPIO_pinMode+0x160>)
 8001518:	4293      	cmp	r3, r2
 800151a:	d105      	bne.n	8001528 <GPIO_pinMode+0x58>
		SET_BIT(RCC->APB2ENR, 4);
 800151c:	4b42      	ldr	r3, [pc, #264]	@ (8001628 <GPIO_pinMode+0x158>)
 800151e:	699b      	ldr	r3, [r3, #24]
 8001520:	4a41      	ldr	r2, [pc, #260]	@ (8001628 <GPIO_pinMode+0x158>)
 8001522:	f043 0310 	orr.w	r3, r3, #16
 8001526:	6193      	str	r3, [r2, #24]
    }
	volatile uint8_t pinIndex = pinNumber % 8;
 8001528:	78fb      	ldrb	r3, [r7, #3]
 800152a:	f003 0307 	and.w	r3, r3, #7
 800152e:	b2db      	uxtb	r3, r3
 8001530:	72fb      	strb	r3, [r7, #11]

	volatile uint32_t *CRX;
	if (pinNumber < 8 && pinNumber >= 0){
 8001532:	78fb      	ldrb	r3, [r7, #3]
 8001534:	2b07      	cmp	r3, #7
 8001536:	d802      	bhi.n	800153e <GPIO_pinMode+0x6e>
		CRX = &GPIOX->CRL;
 8001538:	687b      	ldr	r3, [r7, #4]
 800153a:	60fb      	str	r3, [r7, #12]
 800153c:	e008      	b.n	8001550 <GPIO_pinMode+0x80>
	}else if(pinNumber >= 8 && pinNumber < 16){
 800153e:	78fb      	ldrb	r3, [r7, #3]
 8001540:	2b07      	cmp	r3, #7
 8001542:	d905      	bls.n	8001550 <GPIO_pinMode+0x80>
 8001544:	78fb      	ldrb	r3, [r7, #3]
 8001546:	2b0f      	cmp	r3, #15
 8001548:	d802      	bhi.n	8001550 <GPIO_pinMode+0x80>
		CRX = &GPIOX->CRH;
 800154a:	687b      	ldr	r3, [r7, #4]
 800154c:	3304      	adds	r3, #4
 800154e:	60fb      	str	r3, [r7, #12]
	}
	// Zero the CRX register's specific pin mode not the whole register
	*CRX &= ~(0xF << (4*(pinIndex)));
 8001550:	7afb      	ldrb	r3, [r7, #11]
 8001552:	b2db      	uxtb	r3, r3
 8001554:	009b      	lsls	r3, r3, #2
 8001556:	220f      	movs	r2, #15
 8001558:	fa02 f303 	lsl.w	r3, r2, r3
 800155c:	43da      	mvns	r2, r3
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	401a      	ands	r2, r3
 8001564:	68fb      	ldr	r3, [r7, #12]
 8001566:	601a      	str	r2, [r3, #0]
	if (mode == OUTPUT){
 8001568:	78bb      	ldrb	r3, [r7, #2]
 800156a:	2b03      	cmp	r3, #3
 800156c:	d10a      	bne.n	8001584 <GPIO_pinMode+0xb4>
		*CRX |= (0x2 << (4*(pinIndex)));
 800156e:	7afb      	ldrb	r3, [r7, #11]
 8001570:	b2db      	uxtb	r3, r3
 8001572:	009b      	lsls	r3, r3, #2
 8001574:	2202      	movs	r2, #2
 8001576:	409a      	lsls	r2, r3
 8001578:	68fb      	ldr	r3, [r7, #12]
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	431a      	orrs	r2, r3
 800157e:	68fb      	ldr	r3, [r7, #12]
 8001580:	601a      	str	r2, [r3, #0]
 8001582:	e04b      	b.n	800161c <GPIO_pinMode+0x14c>
	}else if (mode == INPUT_FLOAT){
 8001584:	78bb      	ldrb	r3, [r7, #2]
 8001586:	2b02      	cmp	r3, #2
 8001588:	d10a      	bne.n	80015a0 <GPIO_pinMode+0xd0>
		*CRX |= (0x4 << (4*(pinIndex)));
 800158a:	7afb      	ldrb	r3, [r7, #11]
 800158c:	b2db      	uxtb	r3, r3
 800158e:	009b      	lsls	r3, r3, #2
 8001590:	2204      	movs	r2, #4
 8001592:	409a      	lsls	r2, r3
 8001594:	68fb      	ldr	r3, [r7, #12]
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	431a      	orrs	r2, r3
 800159a:	68fb      	ldr	r3, [r7, #12]
 800159c:	601a      	str	r2, [r3, #0]
 800159e:	e03d      	b.n	800161c <GPIO_pinMode+0x14c>
	}else if (mode == INPUT_PULLUP){
 80015a0:	78bb      	ldrb	r3, [r7, #2]
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d113      	bne.n	80015ce <GPIO_pinMode+0xfe>
		*CRX |= (0x8 << (4*(pinIndex)));
 80015a6:	7afb      	ldrb	r3, [r7, #11]
 80015a8:	b2db      	uxtb	r3, r3
 80015aa:	009b      	lsls	r3, r3, #2
 80015ac:	2208      	movs	r2, #8
 80015ae:	409a      	lsls	r2, r3
 80015b0:	68fb      	ldr	r3, [r7, #12]
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	431a      	orrs	r2, r3
 80015b6:	68fb      	ldr	r3, [r7, #12]
 80015b8:	601a      	str	r2, [r3, #0]
		SET_BIT(GPIOX->ODR, pinNumber);
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	68db      	ldr	r3, [r3, #12]
 80015be:	78fa      	ldrb	r2, [r7, #3]
 80015c0:	2101      	movs	r1, #1
 80015c2:	fa01 f202 	lsl.w	r2, r1, r2
 80015c6:	431a      	orrs	r2, r3
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	60da      	str	r2, [r3, #12]
 80015cc:	e026      	b.n	800161c <GPIO_pinMode+0x14c>
	}else if (mode == INPUT_PULLDOWN){
 80015ce:	78bb      	ldrb	r3, [r7, #2]
 80015d0:	2b01      	cmp	r3, #1
 80015d2:	d114      	bne.n	80015fe <GPIO_pinMode+0x12e>
		*CRX |= (0x8 << (4*(pinIndex)));
 80015d4:	7afb      	ldrb	r3, [r7, #11]
 80015d6:	b2db      	uxtb	r3, r3
 80015d8:	009b      	lsls	r3, r3, #2
 80015da:	2208      	movs	r2, #8
 80015dc:	409a      	lsls	r2, r3
 80015de:	68fb      	ldr	r3, [r7, #12]
 80015e0:	681b      	ldr	r3, [r3, #0]
 80015e2:	431a      	orrs	r2, r3
 80015e4:	68fb      	ldr	r3, [r7, #12]
 80015e6:	601a      	str	r2, [r3, #0]
		CLEAR_BIT(GPIOX->ODR, pinNumber);
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	68db      	ldr	r3, [r3, #12]
 80015ec:	78fa      	ldrb	r2, [r7, #3]
 80015ee:	2101      	movs	r1, #1
 80015f0:	fa01 f202 	lsl.w	r2, r1, r2
 80015f4:	43d2      	mvns	r2, r2
 80015f6:	401a      	ands	r2, r3
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	60da      	str	r2, [r3, #12]
 80015fc:	e00e      	b.n	800161c <GPIO_pinMode+0x14c>
	}else if (mode == AF_PP){
 80015fe:	78bb      	ldrb	r3, [r7, #2]
 8001600:	2b04      	cmp	r3, #4
 8001602:	d10b      	bne.n	800161c <GPIO_pinMode+0x14c>
		*CRX |= (0xB << (4*(pinIndex)));
 8001604:	7afb      	ldrb	r3, [r7, #11]
 8001606:	b2db      	uxtb	r3, r3
 8001608:	009b      	lsls	r3, r3, #2
 800160a:	220b      	movs	r2, #11
 800160c:	409a      	lsls	r2, r3
 800160e:	68fb      	ldr	r3, [r7, #12]
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	431a      	orrs	r2, r3
 8001614:	68fb      	ldr	r3, [r7, #12]
 8001616:	601a      	str	r2, [r3, #0]
 8001618:	e000      	b.n	800161c <GPIO_pinMode+0x14c>
		return;
 800161a:	bf00      	nop

	}
}
 800161c:	3714      	adds	r7, #20
 800161e:	46bd      	mov	sp, r7
 8001620:	bc80      	pop	{r7}
 8001622:	4770      	bx	lr
 8001624:	40010800 	.word	0x40010800
 8001628:	40021000 	.word	0x40021000
 800162c:	40010c00 	.word	0x40010c00
 8001630:	40011000 	.word	0x40011000

08001634 <TIM2_IRQHandler>:
		millis = 0;
	}
	return millis;
}

void TIM2_IRQHandler() {
 8001634:	b598      	push	{r3, r4, r7, lr}
 8001636:	af00      	add	r7, sp, #0
	if (TIM2->SR & TIM_SR_CC1IF) {
 8001638:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800163c:	691b      	ldr	r3, [r3, #16]
 800163e:	f003 0302 	and.w	r3, r3, #2
 8001642:	2b00      	cmp	r3, #0
 8001644:	d01a      	beq.n	800167c <TIM2_IRQHandler+0x48>
		TIM2->SR &= ~TIM_SR_CC1IF;
 8001646:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800164a:	691b      	ldr	r3, [r3, #16]
 800164c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001650:	f023 0302 	bic.w	r3, r3, #2
 8001654:	6113      	str	r3, [r2, #16]
		TIM2->CCR1 = TIM2->CNT + trigTime_ms_global;
 8001656:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800165a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800165c:	4a1d      	ldr	r2, [pc, #116]	@ (80016d4 <TIM2_IRQHandler+0xa0>)
 800165e:	8812      	ldrh	r2, [r2, #0]
 8001660:	4614      	mov	r4, r2
 8001662:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001666:	4423      	add	r3, r4
 8001668:	6353      	str	r3, [r2, #52]	@ 0x34
		millis++;
 800166a:	4b1b      	ldr	r3, [pc, #108]	@ (80016d8 <TIM2_IRQHandler+0xa4>)
 800166c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001670:	1c50      	adds	r0, r2, #1
 8001672:	f143 0100 	adc.w	r1, r3, #0
 8001676:	4b18      	ldr	r3, [pc, #96]	@ (80016d8 <TIM2_IRQHandler+0xa4>)
 8001678:	e9c3 0100 	strd	r0, r1, [r3]
//		if (isFirstTime) {
//			isFirstTime = 0;
//			millis = 0;
//		}
	}
	if ((TIM2->SR & (1 << 0)) == 1) { // check the uif flag
 800167c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001680:	691b      	ldr	r3, [r3, #16]
 8001682:	f003 0301 	and.w	r3, r3, #1
 8001686:	2b01      	cmp	r3, #1
 8001688:	d122      	bne.n	80016d0 <TIM2_IRQHandler+0x9c>
		TIM2->SR &= ~(1 << 0); // clear the uif
 800168a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800168e:	691b      	ldr	r3, [r3, #16]
 8001690:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001694:	f023 0301 	bic.w	r3, r3, #1
 8001698:	6113      	str	r3, [r2, #16]
		counter2++;
 800169a:	4b10      	ldr	r3, [pc, #64]	@ (80016dc <TIM2_IRQHandler+0xa8>)
 800169c:	881b      	ldrh	r3, [r3, #0]
 800169e:	b29b      	uxth	r3, r3
 80016a0:	3301      	adds	r3, #1
 80016a2:	b29a      	uxth	r2, r3
 80016a4:	4b0d      	ldr	r3, [pc, #52]	@ (80016dc <TIM2_IRQHandler+0xa8>)
 80016a6:	801a      	strh	r2, [r3, #0]
		if (counter2 == n2) {
 80016a8:	4b0c      	ldr	r3, [pc, #48]	@ (80016dc <TIM2_IRQHandler+0xa8>)
 80016aa:	881b      	ldrh	r3, [r3, #0]
 80016ac:	b29a      	uxth	r2, r3
 80016ae:	4b0c      	ldr	r3, [pc, #48]	@ (80016e0 <TIM2_IRQHandler+0xac>)
 80016b0:	881b      	ldrh	r3, [r3, #0]
 80016b2:	b29b      	uxth	r3, r3
 80016b4:	429a      	cmp	r2, r3
 80016b6:	d10b      	bne.n	80016d0 <TIM2_IRQHandler+0x9c>
			counter2 = 0;
 80016b8:	4b08      	ldr	r3, [pc, #32]	@ (80016dc <TIM2_IRQHandler+0xa8>)
 80016ba:	2200      	movs	r2, #0
 80016bc:	801a      	strh	r2, [r3, #0]
			TIM2->CNT = preload2; // set the preload
 80016be:	4b09      	ldr	r3, [pc, #36]	@ (80016e4 <TIM2_IRQHandler+0xb0>)
 80016c0:	881b      	ldrh	r3, [r3, #0]
 80016c2:	b29a      	uxth	r2, r3
 80016c4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80016c8:	625a      	str	r2, [r3, #36]	@ 0x24
			callback2();
 80016ca:	4b07      	ldr	r3, [pc, #28]	@ (80016e8 <TIM2_IRQHandler+0xb4>)
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	4798      	blx	r3
		}
	}
}
 80016d0:	bf00      	nop
 80016d2:	bd98      	pop	{r3, r4, r7, pc}
 80016d4:	20000220 	.word	0x20000220
 80016d8:	20000218 	.word	0x20000218
 80016dc:	20000204 	.word	0x20000204
 80016e0:	200001fe 	.word	0x200001fe
 80016e4:	200001f8 	.word	0x200001f8
 80016e8:	2000020c 	.word	0x2000020c

080016ec <TIM3_IRQHandler>:

void TIM3_IRQHandler() {
 80016ec:	b598      	push	{r3, r4, r7, lr}
 80016ee:	af00      	add	r7, sp, #0
	if ((TIM3->SR & (1 << 0)) == 1) { // check the uif flag
 80016f0:	4b25      	ldr	r3, [pc, #148]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 80016f2:	691b      	ldr	r3, [r3, #16]
 80016f4:	f003 0301 	and.w	r3, r3, #1
 80016f8:	2b01      	cmp	r3, #1
 80016fa:	d142      	bne.n	8001782 <TIM3_IRQHandler+0x96>
		if (TIM3->SR & TIM_SR_CC1IF) {
 80016fc:	4b22      	ldr	r3, [pc, #136]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 80016fe:	691b      	ldr	r3, [r3, #16]
 8001700:	f003 0302 	and.w	r3, r3, #2
 8001704:	2b00      	cmp	r3, #0
 8001706:	d016      	beq.n	8001736 <TIM3_IRQHandler+0x4a>
			TIM3->SR &= ~TIM_SR_CC1IF;
 8001708:	4b1f      	ldr	r3, [pc, #124]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 800170a:	691b      	ldr	r3, [r3, #16]
 800170c:	4a1e      	ldr	r2, [pc, #120]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 800170e:	f023 0302 	bic.w	r3, r3, #2
 8001712:	6113      	str	r3, [r2, #16]
			TIM3->CCR1 = TIM3->CNT + trigTime_ms_global;
 8001714:	4b1c      	ldr	r3, [pc, #112]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 8001716:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001718:	4a1c      	ldr	r2, [pc, #112]	@ (800178c <TIM3_IRQHandler+0xa0>)
 800171a:	8812      	ldrh	r2, [r2, #0]
 800171c:	4614      	mov	r4, r2
 800171e:	4a1a      	ldr	r2, [pc, #104]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 8001720:	4423      	add	r3, r4
 8001722:	6353      	str	r3, [r2, #52]	@ 0x34
			millis++;
 8001724:	4b1a      	ldr	r3, [pc, #104]	@ (8001790 <TIM3_IRQHandler+0xa4>)
 8001726:	e9d3 2300 	ldrd	r2, r3, [r3]
 800172a:	1c50      	adds	r0, r2, #1
 800172c:	f143 0100 	adc.w	r1, r3, #0
 8001730:	4b17      	ldr	r3, [pc, #92]	@ (8001790 <TIM3_IRQHandler+0xa4>)
 8001732:	e9c3 0100 	strd	r0, r1, [r3]
//			if (isFirstTime) {
//				isFirstTime = 0;
//				millis = 0;
//			}
		}
		if ((TIM3->SR & (1 << 0)) == 1) {
 8001736:	4b14      	ldr	r3, [pc, #80]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 8001738:	691b      	ldr	r3, [r3, #16]
 800173a:	f003 0301 	and.w	r3, r3, #1
 800173e:	2b01      	cmp	r3, #1
 8001740:	d11f      	bne.n	8001782 <TIM3_IRQHandler+0x96>
			TIM3->SR &= ~(1 << 0); // clear the uif
 8001742:	4b11      	ldr	r3, [pc, #68]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 8001744:	691b      	ldr	r3, [r3, #16]
 8001746:	4a10      	ldr	r2, [pc, #64]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 8001748:	f023 0301 	bic.w	r3, r3, #1
 800174c:	6113      	str	r3, [r2, #16]
			counter3++;
 800174e:	4b11      	ldr	r3, [pc, #68]	@ (8001794 <TIM3_IRQHandler+0xa8>)
 8001750:	881b      	ldrh	r3, [r3, #0]
 8001752:	b29b      	uxth	r3, r3
 8001754:	3301      	adds	r3, #1
 8001756:	b29a      	uxth	r2, r3
 8001758:	4b0e      	ldr	r3, [pc, #56]	@ (8001794 <TIM3_IRQHandler+0xa8>)
 800175a:	801a      	strh	r2, [r3, #0]
			if (counter3 == n3) {
 800175c:	4b0d      	ldr	r3, [pc, #52]	@ (8001794 <TIM3_IRQHandler+0xa8>)
 800175e:	881b      	ldrh	r3, [r3, #0]
 8001760:	b29a      	uxth	r2, r3
 8001762:	4b0d      	ldr	r3, [pc, #52]	@ (8001798 <TIM3_IRQHandler+0xac>)
 8001764:	881b      	ldrh	r3, [r3, #0]
 8001766:	b29b      	uxth	r3, r3
 8001768:	429a      	cmp	r2, r3
 800176a:	d10a      	bne.n	8001782 <TIM3_IRQHandler+0x96>
				counter3 = 0;
 800176c:	4b09      	ldr	r3, [pc, #36]	@ (8001794 <TIM3_IRQHandler+0xa8>)
 800176e:	2200      	movs	r2, #0
 8001770:	801a      	strh	r2, [r3, #0]
				TIM3->CNT = preload3; // set the preload
 8001772:	4b0a      	ldr	r3, [pc, #40]	@ (800179c <TIM3_IRQHandler+0xb0>)
 8001774:	881b      	ldrh	r3, [r3, #0]
 8001776:	b29a      	uxth	r2, r3
 8001778:	4b03      	ldr	r3, [pc, #12]	@ (8001788 <TIM3_IRQHandler+0x9c>)
 800177a:	625a      	str	r2, [r3, #36]	@ 0x24
				callback3();
 800177c:	4b08      	ldr	r3, [pc, #32]	@ (80017a0 <TIM3_IRQHandler+0xb4>)
 800177e:	681b      	ldr	r3, [r3, #0]
 8001780:	4798      	blx	r3
			}
		}
	}
}
 8001782:	bf00      	nop
 8001784:	bd98      	pop	{r3, r4, r7, pc}
 8001786:	bf00      	nop
 8001788:	40000400 	.word	0x40000400
 800178c:	20000220 	.word	0x20000220
 8001790:	20000218 	.word	0x20000218
 8001794:	20000206 	.word	0x20000206
 8001798:	20000200 	.word	0x20000200
 800179c:	200001fa 	.word	0x200001fa
 80017a0:	20000210 	.word	0x20000210

080017a4 <TIM4_IRQHandler>:

void TIM4_IRQHandler() {
 80017a4:	b598      	push	{r3, r4, r7, lr}
 80017a6:	af00      	add	r7, sp, #0
	if ((TIM4->SR & (1 << 0)) == 1) { // check the uif flag
 80017a8:	4b25      	ldr	r3, [pc, #148]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 80017aa:	691b      	ldr	r3, [r3, #16]
 80017ac:	f003 0301 	and.w	r3, r3, #1
 80017b0:	2b01      	cmp	r3, #1
 80017b2:	d142      	bne.n	800183a <TIM4_IRQHandler+0x96>
		if (TIM4->SR & TIM_SR_CC1IF) {
 80017b4:	4b22      	ldr	r3, [pc, #136]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 80017b6:	691b      	ldr	r3, [r3, #16]
 80017b8:	f003 0302 	and.w	r3, r3, #2
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d016      	beq.n	80017ee <TIM4_IRQHandler+0x4a>
			TIM4->SR &= ~TIM_SR_CC1IF;
 80017c0:	4b1f      	ldr	r3, [pc, #124]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 80017c2:	691b      	ldr	r3, [r3, #16]
 80017c4:	4a1e      	ldr	r2, [pc, #120]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 80017c6:	f023 0302 	bic.w	r3, r3, #2
 80017ca:	6113      	str	r3, [r2, #16]
			TIM4->CCR1 = TIM4->CNT + trigTime_ms_global;
 80017cc:	4b1c      	ldr	r3, [pc, #112]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 80017ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80017d0:	4a1c      	ldr	r2, [pc, #112]	@ (8001844 <TIM4_IRQHandler+0xa0>)
 80017d2:	8812      	ldrh	r2, [r2, #0]
 80017d4:	4614      	mov	r4, r2
 80017d6:	4a1a      	ldr	r2, [pc, #104]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 80017d8:	4423      	add	r3, r4
 80017da:	6353      	str	r3, [r2, #52]	@ 0x34
			millis++;
 80017dc:	4b1a      	ldr	r3, [pc, #104]	@ (8001848 <TIM4_IRQHandler+0xa4>)
 80017de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017e2:	1c50      	adds	r0, r2, #1
 80017e4:	f143 0100 	adc.w	r1, r3, #0
 80017e8:	4b17      	ldr	r3, [pc, #92]	@ (8001848 <TIM4_IRQHandler+0xa4>)
 80017ea:	e9c3 0100 	strd	r0, r1, [r3]
//			if (isFirstTime) {
//				isFirstTime = 0;
//				millis = 0;
//			}
		}
		if ((TIM4->SR & (1 << 0)) == 1) {
 80017ee:	4b14      	ldr	r3, [pc, #80]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 80017f0:	691b      	ldr	r3, [r3, #16]
 80017f2:	f003 0301 	and.w	r3, r3, #1
 80017f6:	2b01      	cmp	r3, #1
 80017f8:	d11f      	bne.n	800183a <TIM4_IRQHandler+0x96>
			TIM4->SR &= ~(1 << 0); // clear the uif
 80017fa:	4b11      	ldr	r3, [pc, #68]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 80017fc:	691b      	ldr	r3, [r3, #16]
 80017fe:	4a10      	ldr	r2, [pc, #64]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 8001800:	f023 0301 	bic.w	r3, r3, #1
 8001804:	6113      	str	r3, [r2, #16]
			counter4++;
 8001806:	4b11      	ldr	r3, [pc, #68]	@ (800184c <TIM4_IRQHandler+0xa8>)
 8001808:	881b      	ldrh	r3, [r3, #0]
 800180a:	b29b      	uxth	r3, r3
 800180c:	3301      	adds	r3, #1
 800180e:	b29a      	uxth	r2, r3
 8001810:	4b0e      	ldr	r3, [pc, #56]	@ (800184c <TIM4_IRQHandler+0xa8>)
 8001812:	801a      	strh	r2, [r3, #0]
			if (counter4 == n4) {
 8001814:	4b0d      	ldr	r3, [pc, #52]	@ (800184c <TIM4_IRQHandler+0xa8>)
 8001816:	881b      	ldrh	r3, [r3, #0]
 8001818:	b29a      	uxth	r2, r3
 800181a:	4b0d      	ldr	r3, [pc, #52]	@ (8001850 <TIM4_IRQHandler+0xac>)
 800181c:	881b      	ldrh	r3, [r3, #0]
 800181e:	b29b      	uxth	r3, r3
 8001820:	429a      	cmp	r2, r3
 8001822:	d10a      	bne.n	800183a <TIM4_IRQHandler+0x96>
				counter4 = 0;
 8001824:	4b09      	ldr	r3, [pc, #36]	@ (800184c <TIM4_IRQHandler+0xa8>)
 8001826:	2200      	movs	r2, #0
 8001828:	801a      	strh	r2, [r3, #0]
				TIM4->CNT = preload4; // set the preload
 800182a:	4b0a      	ldr	r3, [pc, #40]	@ (8001854 <TIM4_IRQHandler+0xb0>)
 800182c:	881b      	ldrh	r3, [r3, #0]
 800182e:	b29a      	uxth	r2, r3
 8001830:	4b03      	ldr	r3, [pc, #12]	@ (8001840 <TIM4_IRQHandler+0x9c>)
 8001832:	625a      	str	r2, [r3, #36]	@ 0x24
				callback4();
 8001834:	4b08      	ldr	r3, [pc, #32]	@ (8001858 <TIM4_IRQHandler+0xb4>)
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	4798      	blx	r3
			}
		}
	}
}
 800183a:	bf00      	nop
 800183c:	bd98      	pop	{r3, r4, r7, pc}
 800183e:	bf00      	nop
 8001840:	40000800 	.word	0x40000800
 8001844:	20000220 	.word	0x20000220
 8001848:	20000218 	.word	0x20000218
 800184c:	20000208 	.word	0x20000208
 8001850:	20000202 	.word	0x20000202
 8001854:	200001fc 	.word	0x200001fc
 8001858:	20000214 	.word	0x20000214

0800185c <UART_init>:
#include "../GPIO/GPIO_interface.h"

#define RX_BUFFER_LEN 64

void UART_init(int UART_pref_num, int baudrate)
{
 800185c:	b590      	push	{r4, r7, lr}
 800185e:	b087      	sub	sp, #28
 8001860:	af00      	add	r7, sp, #0
 8001862:	6078      	str	r0, [r7, #4]
 8001864:	6039      	str	r1, [r7, #0]
    USART_TypeDef *USARTx;
    uint32_t pclk = 8000000; // 8 MHz clock
 8001866:	4b57      	ldr	r3, [pc, #348]	@ (80019c4 <UART_init+0x168>)
 8001868:	613b      	str	r3, [r7, #16]
    //uint32_t brr_value; //unused var

    switch (UART_pref_num)
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	2b03      	cmp	r3, #3
 800186e:	d03c      	beq.n	80018ea <UART_init+0x8e>
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	2b03      	cmp	r3, #3
 8001874:	f300 80a2 	bgt.w	80019bc <UART_init+0x160>
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	2b01      	cmp	r3, #1
 800187c:	d003      	beq.n	8001886 <UART_init+0x2a>
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	2b02      	cmp	r3, #2
 8001882:	d019      	beq.n	80018b8 <UART_init+0x5c>
        GPIO_pinMode(GPIOB, 11, INPUT_FLOAT); // RX
        USARTx = USART3;
        break;

    default:
        return;
 8001884:	e09a      	b.n	80019bc <UART_init+0x160>
        SET_BIT(RCC->APB2ENR, 14);            // USART1
 8001886:	4b50      	ldr	r3, [pc, #320]	@ (80019c8 <UART_init+0x16c>)
 8001888:	699b      	ldr	r3, [r3, #24]
 800188a:	4a4f      	ldr	r2, [pc, #316]	@ (80019c8 <UART_init+0x16c>)
 800188c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001890:	6193      	str	r3, [r2, #24]
        SET_BIT(RCC->APB2ENR, 2);             // GPIOA
 8001892:	4b4d      	ldr	r3, [pc, #308]	@ (80019c8 <UART_init+0x16c>)
 8001894:	699b      	ldr	r3, [r3, #24]
 8001896:	4a4c      	ldr	r2, [pc, #304]	@ (80019c8 <UART_init+0x16c>)
 8001898:	f043 0304 	orr.w	r3, r3, #4
 800189c:	6193      	str	r3, [r2, #24]
        GPIO_pinMode(GPIOA, 9, AF_PP);        // TX
 800189e:	2204      	movs	r2, #4
 80018a0:	2109      	movs	r1, #9
 80018a2:	484a      	ldr	r0, [pc, #296]	@ (80019cc <UART_init+0x170>)
 80018a4:	f7ff fe14 	bl	80014d0 <GPIO_pinMode>
        GPIO_pinMode(GPIOA, 10, INPUT_FLOAT); // RX
 80018a8:	2202      	movs	r2, #2
 80018aa:	210a      	movs	r1, #10
 80018ac:	4847      	ldr	r0, [pc, #284]	@ (80019cc <UART_init+0x170>)
 80018ae:	f7ff fe0f 	bl	80014d0 <GPIO_pinMode>
        USARTx = USART1;
 80018b2:	4b47      	ldr	r3, [pc, #284]	@ (80019d0 <UART_init+0x174>)
 80018b4:	617b      	str	r3, [r7, #20]
        break;
 80018b6:	e031      	b.n	800191c <UART_init+0xc0>
        SET_BIT(RCC->APB1ENR, 17);           // USART2
 80018b8:	4b43      	ldr	r3, [pc, #268]	@ (80019c8 <UART_init+0x16c>)
 80018ba:	69db      	ldr	r3, [r3, #28]
 80018bc:	4a42      	ldr	r2, [pc, #264]	@ (80019c8 <UART_init+0x16c>)
 80018be:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80018c2:	61d3      	str	r3, [r2, #28]
        SET_BIT(RCC->APB2ENR, 2);            // GPIOA
 80018c4:	4b40      	ldr	r3, [pc, #256]	@ (80019c8 <UART_init+0x16c>)
 80018c6:	699b      	ldr	r3, [r3, #24]
 80018c8:	4a3f      	ldr	r2, [pc, #252]	@ (80019c8 <UART_init+0x16c>)
 80018ca:	f043 0304 	orr.w	r3, r3, #4
 80018ce:	6193      	str	r3, [r2, #24]
        GPIO_pinMode(GPIOA, 2, AF_PP);       // TX
 80018d0:	2204      	movs	r2, #4
 80018d2:	2102      	movs	r1, #2
 80018d4:	483d      	ldr	r0, [pc, #244]	@ (80019cc <UART_init+0x170>)
 80018d6:	f7ff fdfb 	bl	80014d0 <GPIO_pinMode>
        GPIO_pinMode(GPIOA, 3, INPUT_FLOAT); // RX
 80018da:	2202      	movs	r2, #2
 80018dc:	2103      	movs	r1, #3
 80018de:	483b      	ldr	r0, [pc, #236]	@ (80019cc <UART_init+0x170>)
 80018e0:	f7ff fdf6 	bl	80014d0 <GPIO_pinMode>
        USARTx = USART2;
 80018e4:	4b3b      	ldr	r3, [pc, #236]	@ (80019d4 <UART_init+0x178>)
 80018e6:	617b      	str	r3, [r7, #20]
        break;
 80018e8:	e018      	b.n	800191c <UART_init+0xc0>
        SET_BIT(RCC->APB1ENR, 18);            // USART3
 80018ea:	4b37      	ldr	r3, [pc, #220]	@ (80019c8 <UART_init+0x16c>)
 80018ec:	69db      	ldr	r3, [r3, #28]
 80018ee:	4a36      	ldr	r2, [pc, #216]	@ (80019c8 <UART_init+0x16c>)
 80018f0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80018f4:	61d3      	str	r3, [r2, #28]
        SET_BIT(RCC->APB2ENR, 3);             // GPIOB
 80018f6:	4b34      	ldr	r3, [pc, #208]	@ (80019c8 <UART_init+0x16c>)
 80018f8:	699b      	ldr	r3, [r3, #24]
 80018fa:	4a33      	ldr	r2, [pc, #204]	@ (80019c8 <UART_init+0x16c>)
 80018fc:	f043 0308 	orr.w	r3, r3, #8
 8001900:	6193      	str	r3, [r2, #24]
        GPIO_pinMode(GPIOB, 10, AF_PP);       // TX
 8001902:	2204      	movs	r2, #4
 8001904:	210a      	movs	r1, #10
 8001906:	4834      	ldr	r0, [pc, #208]	@ (80019d8 <UART_init+0x17c>)
 8001908:	f7ff fde2 	bl	80014d0 <GPIO_pinMode>
        GPIO_pinMode(GPIOB, 11, INPUT_FLOAT); // RX
 800190c:	2202      	movs	r2, #2
 800190e:	210b      	movs	r1, #11
 8001910:	4831      	ldr	r0, [pc, #196]	@ (80019d8 <UART_init+0x17c>)
 8001912:	f7ff fddd 	bl	80014d0 <GPIO_pinMode>
        USARTx = USART3;
 8001916:	4b31      	ldr	r3, [pc, #196]	@ (80019dc <UART_init+0x180>)
 8001918:	617b      	str	r3, [r7, #20]
        break;
 800191a:	bf00      	nop
    }

    // Baud Rate Calculation for 8 MHz clock
    float usartdiv = (float)pclk / (16.0f * baudrate);
 800191c:	6938      	ldr	r0, [r7, #16]
 800191e:	f7ff f993 	bl	8000c48 <__aeabi_ui2f>
 8001922:	4604      	mov	r4, r0
 8001924:	6838      	ldr	r0, [r7, #0]
 8001926:	f7ff f993 	bl	8000c50 <__aeabi_i2f>
 800192a:	4603      	mov	r3, r0
 800192c:	f04f 4183 	mov.w	r1, #1098907648	@ 0x41800000
 8001930:	4618      	mov	r0, r3
 8001932:	f7ff f9e1 	bl	8000cf8 <__aeabi_fmul>
 8001936:	4603      	mov	r3, r0
 8001938:	4619      	mov	r1, r3
 800193a:	4620      	mov	r0, r4
 800193c:	f7ff fa90 	bl	8000e60 <__aeabi_fdiv>
 8001940:	4603      	mov	r3, r0
 8001942:	60fb      	str	r3, [r7, #12]
    uint16_t mantissa = (uint16_t)usartdiv;
 8001944:	68f8      	ldr	r0, [r7, #12]
 8001946:	f7ff fb9d 	bl	8001084 <__aeabi_f2uiz>
 800194a:	4603      	mov	r3, r0
 800194c:	817b      	strh	r3, [r7, #10]
    uint16_t fraction = (uint16_t)((usartdiv - mantissa) * 16.0f + 0.5f); // rounded
 800194e:	897b      	ldrh	r3, [r7, #10]
 8001950:	4618      	mov	r0, r3
 8001952:	f7ff f97d 	bl	8000c50 <__aeabi_i2f>
 8001956:	4603      	mov	r3, r0
 8001958:	4619      	mov	r1, r3
 800195a:	68f8      	ldr	r0, [r7, #12]
 800195c:	f7ff f8c2 	bl	8000ae4 <__aeabi_fsub>
 8001960:	4603      	mov	r3, r0
 8001962:	f04f 4183 	mov.w	r1, #1098907648	@ 0x41800000
 8001966:	4618      	mov	r0, r3
 8001968:	f7ff f9c6 	bl	8000cf8 <__aeabi_fmul>
 800196c:	4603      	mov	r3, r0
 800196e:	f04f 517c 	mov.w	r1, #1056964608	@ 0x3f000000
 8001972:	4618      	mov	r0, r3
 8001974:	f7ff f8b8 	bl	8000ae8 <__addsf3>
 8001978:	4603      	mov	r3, r0
 800197a:	4618      	mov	r0, r3
 800197c:	f7ff fb82 	bl	8001084 <__aeabi_f2uiz>
 8001980:	4603      	mov	r3, r0
 8001982:	813b      	strh	r3, [r7, #8]

    USARTx->BRR = (mantissa << 4) | (fraction & 0xF);
 8001984:	897b      	ldrh	r3, [r7, #10]
 8001986:	011a      	lsls	r2, r3, #4
 8001988:	893b      	ldrh	r3, [r7, #8]
 800198a:	f003 030f 	and.w	r3, r3, #15
 800198e:	4313      	orrs	r3, r2
 8001990:	461a      	mov	r2, r3
 8001992:	697b      	ldr	r3, [r7, #20]
 8001994:	609a      	str	r2, [r3, #8]

    // Enable USART, TX, RX
    SET_BIT(USARTx->CR1, 13); // UE
 8001996:	697b      	ldr	r3, [r7, #20]
 8001998:	68db      	ldr	r3, [r3, #12]
 800199a:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 800199e:	697b      	ldr	r3, [r7, #20]
 80019a0:	60da      	str	r2, [r3, #12]
    SET_BIT(USARTx->CR1, 3);  // TE
 80019a2:	697b      	ldr	r3, [r7, #20]
 80019a4:	68db      	ldr	r3, [r3, #12]
 80019a6:	f043 0208 	orr.w	r2, r3, #8
 80019aa:	697b      	ldr	r3, [r7, #20]
 80019ac:	60da      	str	r2, [r3, #12]
    SET_BIT(USARTx->CR1, 2);  // RE
 80019ae:	697b      	ldr	r3, [r7, #20]
 80019b0:	68db      	ldr	r3, [r3, #12]
 80019b2:	f043 0204 	orr.w	r2, r3, #4
 80019b6:	697b      	ldr	r3, [r7, #20]
 80019b8:	60da      	str	r2, [r3, #12]
 80019ba:	e000      	b.n	80019be <UART_init+0x162>
        return;
 80019bc:	bf00      	nop
}
 80019be:	371c      	adds	r7, #28
 80019c0:	46bd      	mov	sp, r7
 80019c2:	bd90      	pop	{r4, r7, pc}
 80019c4:	007a1200 	.word	0x007a1200
 80019c8:	40021000 	.word	0x40021000
 80019cc:	40010800 	.word	0x40010800
 80019d0:	40013800 	.word	0x40013800
 80019d4:	40004400 	.word	0x40004400
 80019d8:	40010c00 	.word	0x40010c00
 80019dc:	40004800 	.word	0x40004800

080019e0 <UART_receive_message>:
    while (!(USARTx->SR & (1 << 5)));

    return USARTx->DR & 0xFF;
}

UARTMessage UART_receive_message(int UART_pref_num) {
 80019e0:	b580      	push	{r7, lr}
 80019e2:	b08e      	sub	sp, #56	@ 0x38
 80019e4:	af00      	add	r7, sp, #0
 80019e6:	6078      	str	r0, [r7, #4]
 80019e8:	6039      	str	r1, [r7, #0]
    static char rx_buffer[64];
    static uint8_t rx_index = 0;

    USART_TypeDef *USARTx;

    switch (UART_pref_num) {
 80019ea:	683b      	ldr	r3, [r7, #0]
 80019ec:	2b03      	cmp	r3, #3
 80019ee:	d00f      	beq.n	8001a10 <UART_receive_message+0x30>
 80019f0:	683b      	ldr	r3, [r7, #0]
 80019f2:	2b03      	cmp	r3, #3
 80019f4:	dc0f      	bgt.n	8001a16 <UART_receive_message+0x36>
 80019f6:	683b      	ldr	r3, [r7, #0]
 80019f8:	2b01      	cmp	r3, #1
 80019fa:	d003      	beq.n	8001a04 <UART_receive_message+0x24>
 80019fc:	683b      	ldr	r3, [r7, #0]
 80019fe:	2b02      	cmp	r3, #2
 8001a00:	d003      	beq.n	8001a0a <UART_receive_message+0x2a>
 8001a02:	e008      	b.n	8001a16 <UART_receive_message+0x36>
        case 1: USARTx = USART1; break;
 8001a04:	4b2c      	ldr	r3, [pc, #176]	@ (8001ab8 <UART_receive_message+0xd8>)
 8001a06:	637b      	str	r3, [r7, #52]	@ 0x34
 8001a08:	e00b      	b.n	8001a22 <UART_receive_message+0x42>
        case 2: USARTx = USART2; break;
 8001a0a:	4b2c      	ldr	r3, [pc, #176]	@ (8001abc <UART_receive_message+0xdc>)
 8001a0c:	637b      	str	r3, [r7, #52]	@ 0x34
 8001a0e:	e008      	b.n	8001a22 <UART_receive_message+0x42>
        case 3: USARTx = USART3; break;
 8001a10:	4b2b      	ldr	r3, [pc, #172]	@ (8001ac0 <UART_receive_message+0xe0>)
 8001a12:	637b      	str	r3, [r7, #52]	@ 0x34
 8001a14:	e005      	b.n	8001a22 <UART_receive_message+0x42>
        default: return (UARTMessage){ .type = MSG_NONE };
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	461a      	mov	r2, r3
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	6013      	str	r3, [r2, #0]
 8001a1e:	6053      	str	r3, [r2, #4]
    } else {
        rx_index = 0; // overflow
    }

    return (UARTMessage){ .type = MSG_NONE };
}
 8001a20:	e046      	b.n	8001ab0 <UART_receive_message+0xd0>
    if (!(USARTx->SR & USART_SR_RXNE)) return (UARTMessage){ .type = MSG_NONE };
 8001a22:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	f003 0320 	and.w	r3, r3, #32
 8001a2a:	2b00      	cmp	r3, #0
 8001a2c:	d105      	bne.n	8001a3a <UART_receive_message+0x5a>
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	461a      	mov	r2, r3
 8001a32:	2300      	movs	r3, #0
 8001a34:	6013      	str	r3, [r2, #0]
 8001a36:	6053      	str	r3, [r2, #4]
 8001a38:	e03a      	b.n	8001ab0 <UART_receive_message+0xd0>
    char c = USARTx->DR & 0xFF;
 8001a3a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001a3c:	685b      	ldr	r3, [r3, #4]
 8001a3e:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
    if (c == '\n') {
 8001a42:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8001a46:	2b0a      	cmp	r3, #10
 8001a48:	d11a      	bne.n	8001a80 <UART_receive_message+0xa0>
        rx_buffer[rx_index] = '\0';
 8001a4a:	4b1e      	ldr	r3, [pc, #120]	@ (8001ac4 <UART_receive_message+0xe4>)
 8001a4c:	781b      	ldrb	r3, [r3, #0]
 8001a4e:	461a      	mov	r2, r3
 8001a50:	4b1d      	ldr	r3, [pc, #116]	@ (8001ac8 <UART_receive_message+0xe8>)
 8001a52:	2100      	movs	r1, #0
 8001a54:	5499      	strb	r1, [r3, r2]
        rx_index = 0;
 8001a56:	4b1b      	ldr	r3, [pc, #108]	@ (8001ac4 <UART_receive_message+0xe4>)
 8001a58:	2200      	movs	r2, #0
 8001a5a:	701a      	strb	r2, [r3, #0]
        float value = atof(rx_buffer);
 8001a5c:	481a      	ldr	r0, [pc, #104]	@ (8001ac8 <UART_receive_message+0xe8>)
 8001a5e:	f000 f835 	bl	8001acc <atof>
 8001a62:	4602      	mov	r2, r0
 8001a64:	460b      	mov	r3, r1
 8001a66:	4610      	mov	r0, r2
 8001a68:	4619      	mov	r1, r3
 8001a6a:	f7fe ffe7 	bl	8000a3c <__aeabi_d2f>
 8001a6e:	4603      	mov	r3, r0
 8001a70:	62fb      	str	r3, [r7, #44]	@ 0x2c
        return (UARTMessage){ .type = MSG_DISTANCE, .distance = value };
 8001a72:	687b      	ldr	r3, [r7, #4]
 8001a74:	2201      	movs	r2, #1
 8001a76:	701a      	strb	r2, [r3, #0]
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001a7c:	605a      	str	r2, [r3, #4]
}
 8001a7e:	e017      	b.n	8001ab0 <UART_receive_message+0xd0>
    } else if (rx_index < sizeof(rx_buffer) - 1) {
 8001a80:	4b10      	ldr	r3, [pc, #64]	@ (8001ac4 <UART_receive_message+0xe4>)
 8001a82:	781b      	ldrb	r3, [r3, #0]
 8001a84:	2b3e      	cmp	r3, #62	@ 0x3e
 8001a86:	d80b      	bhi.n	8001aa0 <UART_receive_message+0xc0>
        rx_buffer[rx_index++] = c;
 8001a88:	4b0e      	ldr	r3, [pc, #56]	@ (8001ac4 <UART_receive_message+0xe4>)
 8001a8a:	781b      	ldrb	r3, [r3, #0]
 8001a8c:	1c5a      	adds	r2, r3, #1
 8001a8e:	b2d1      	uxtb	r1, r2
 8001a90:	4a0c      	ldr	r2, [pc, #48]	@ (8001ac4 <UART_receive_message+0xe4>)
 8001a92:	7011      	strb	r1, [r2, #0]
 8001a94:	4619      	mov	r1, r3
 8001a96:	4a0c      	ldr	r2, [pc, #48]	@ (8001ac8 <UART_receive_message+0xe8>)
 8001a98:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8001a9c:	5453      	strb	r3, [r2, r1]
 8001a9e:	e002      	b.n	8001aa6 <UART_receive_message+0xc6>
        rx_index = 0; // overflow
 8001aa0:	4b08      	ldr	r3, [pc, #32]	@ (8001ac4 <UART_receive_message+0xe4>)
 8001aa2:	2200      	movs	r2, #0
 8001aa4:	701a      	strb	r2, [r3, #0]
    return (UARTMessage){ .type = MSG_NONE };
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	461a      	mov	r2, r3
 8001aaa:	2300      	movs	r3, #0
 8001aac:	6013      	str	r3, [r2, #0]
 8001aae:	6053      	str	r3, [r2, #4]
}
 8001ab0:	6878      	ldr	r0, [r7, #4]
 8001ab2:	3738      	adds	r7, #56	@ 0x38
 8001ab4:	46bd      	mov	sp, r7
 8001ab6:	bd80      	pop	{r7, pc}
 8001ab8:	40013800 	.word	0x40013800
 8001abc:	40004400 	.word	0x40004400
 8001ac0:	40004800 	.word	0x40004800
 8001ac4:	20000222 	.word	0x20000222
 8001ac8:	20000224 	.word	0x20000224

08001acc <atof>:
 8001acc:	2100      	movs	r1, #0
 8001ace:	f000 bdfb 	b.w	80026c8 <strtod>

08001ad2 <sulp>:
 8001ad2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ad6:	460f      	mov	r7, r1
 8001ad8:	4690      	mov	r8, r2
 8001ada:	f001 ff57 	bl	800398c <__ulp>
 8001ade:	4604      	mov	r4, r0
 8001ae0:	460d      	mov	r5, r1
 8001ae2:	f1b8 0f00 	cmp.w	r8, #0
 8001ae6:	d011      	beq.n	8001b0c <sulp+0x3a>
 8001ae8:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8001aec:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	dd0b      	ble.n	8001b0c <sulp+0x3a>
 8001af4:	2400      	movs	r4, #0
 8001af6:	051b      	lsls	r3, r3, #20
 8001af8:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8001afc:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8001b00:	4622      	mov	r2, r4
 8001b02:	462b      	mov	r3, r5
 8001b04:	f7fe fce0 	bl	80004c8 <__aeabi_dmul>
 8001b08:	4604      	mov	r4, r0
 8001b0a:	460d      	mov	r5, r1
 8001b0c:	4620      	mov	r0, r4
 8001b0e:	4629      	mov	r1, r5
 8001b10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b14:	0000      	movs	r0, r0
	...

08001b18 <_strtod_l>:
 8001b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b1c:	b09f      	sub	sp, #124	@ 0x7c
 8001b1e:	9217      	str	r2, [sp, #92]	@ 0x5c
 8001b20:	2200      	movs	r2, #0
 8001b22:	460c      	mov	r4, r1
 8001b24:	921a      	str	r2, [sp, #104]	@ 0x68
 8001b26:	f04f 0a00 	mov.w	sl, #0
 8001b2a:	f04f 0b00 	mov.w	fp, #0
 8001b2e:	460a      	mov	r2, r1
 8001b30:	9005      	str	r0, [sp, #20]
 8001b32:	9219      	str	r2, [sp, #100]	@ 0x64
 8001b34:	7811      	ldrb	r1, [r2, #0]
 8001b36:	292b      	cmp	r1, #43	@ 0x2b
 8001b38:	d048      	beq.n	8001bcc <_strtod_l+0xb4>
 8001b3a:	d836      	bhi.n	8001baa <_strtod_l+0x92>
 8001b3c:	290d      	cmp	r1, #13
 8001b3e:	d830      	bhi.n	8001ba2 <_strtod_l+0x8a>
 8001b40:	2908      	cmp	r1, #8
 8001b42:	d830      	bhi.n	8001ba6 <_strtod_l+0x8e>
 8001b44:	2900      	cmp	r1, #0
 8001b46:	d039      	beq.n	8001bbc <_strtod_l+0xa4>
 8001b48:	2200      	movs	r2, #0
 8001b4a:	920e      	str	r2, [sp, #56]	@ 0x38
 8001b4c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8001b4e:	782a      	ldrb	r2, [r5, #0]
 8001b50:	2a30      	cmp	r2, #48	@ 0x30
 8001b52:	f040 80b0 	bne.w	8001cb6 <_strtod_l+0x19e>
 8001b56:	786a      	ldrb	r2, [r5, #1]
 8001b58:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8001b5c:	2a58      	cmp	r2, #88	@ 0x58
 8001b5e:	d16c      	bne.n	8001c3a <_strtod_l+0x122>
 8001b60:	9302      	str	r3, [sp, #8]
 8001b62:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8001b64:	4a8f      	ldr	r2, [pc, #572]	@ (8001da4 <_strtod_l+0x28c>)
 8001b66:	9301      	str	r3, [sp, #4]
 8001b68:	ab1a      	add	r3, sp, #104	@ 0x68
 8001b6a:	9300      	str	r3, [sp, #0]
 8001b6c:	9805      	ldr	r0, [sp, #20]
 8001b6e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8001b70:	a919      	add	r1, sp, #100	@ 0x64
 8001b72:	f001 f80d 	bl	8002b90 <__gethex>
 8001b76:	f010 060f 	ands.w	r6, r0, #15
 8001b7a:	4604      	mov	r4, r0
 8001b7c:	d005      	beq.n	8001b8a <_strtod_l+0x72>
 8001b7e:	2e06      	cmp	r6, #6
 8001b80:	d126      	bne.n	8001bd0 <_strtod_l+0xb8>
 8001b82:	2300      	movs	r3, #0
 8001b84:	3501      	adds	r5, #1
 8001b86:	9519      	str	r5, [sp, #100]	@ 0x64
 8001b88:	930e      	str	r3, [sp, #56]	@ 0x38
 8001b8a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	f040 8582 	bne.w	8002696 <_strtod_l+0xb7e>
 8001b92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8001b94:	b1bb      	cbz	r3, 8001bc6 <_strtod_l+0xae>
 8001b96:	4650      	mov	r0, sl
 8001b98:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 8001b9c:	b01f      	add	sp, #124	@ 0x7c
 8001b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001ba2:	2920      	cmp	r1, #32
 8001ba4:	d1d0      	bne.n	8001b48 <_strtod_l+0x30>
 8001ba6:	3201      	adds	r2, #1
 8001ba8:	e7c3      	b.n	8001b32 <_strtod_l+0x1a>
 8001baa:	292d      	cmp	r1, #45	@ 0x2d
 8001bac:	d1cc      	bne.n	8001b48 <_strtod_l+0x30>
 8001bae:	2101      	movs	r1, #1
 8001bb0:	910e      	str	r1, [sp, #56]	@ 0x38
 8001bb2:	1c51      	adds	r1, r2, #1
 8001bb4:	9119      	str	r1, [sp, #100]	@ 0x64
 8001bb6:	7852      	ldrb	r2, [r2, #1]
 8001bb8:	2a00      	cmp	r2, #0
 8001bba:	d1c7      	bne.n	8001b4c <_strtod_l+0x34>
 8001bbc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8001bbe:	9419      	str	r4, [sp, #100]	@ 0x64
 8001bc0:	2b00      	cmp	r3, #0
 8001bc2:	f040 8566 	bne.w	8002692 <_strtod_l+0xb7a>
 8001bc6:	4650      	mov	r0, sl
 8001bc8:	4659      	mov	r1, fp
 8001bca:	e7e7      	b.n	8001b9c <_strtod_l+0x84>
 8001bcc:	2100      	movs	r1, #0
 8001bce:	e7ef      	b.n	8001bb0 <_strtod_l+0x98>
 8001bd0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8001bd2:	b13a      	cbz	r2, 8001be4 <_strtod_l+0xcc>
 8001bd4:	2135      	movs	r1, #53	@ 0x35
 8001bd6:	a81c      	add	r0, sp, #112	@ 0x70
 8001bd8:	f001 ffc8 	bl	8003b6c <__copybits>
 8001bdc:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8001bde:	9805      	ldr	r0, [sp, #20]
 8001be0:	f001 fba8 	bl	8003334 <_Bfree>
 8001be4:	3e01      	subs	r6, #1
 8001be6:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8001be8:	2e04      	cmp	r6, #4
 8001bea:	d806      	bhi.n	8001bfa <_strtod_l+0xe2>
 8001bec:	e8df f006 	tbb	[pc, r6]
 8001bf0:	201d0314 	.word	0x201d0314
 8001bf4:	14          	.byte	0x14
 8001bf5:	00          	.byte	0x00
 8001bf6:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8001bfa:	05e1      	lsls	r1, r4, #23
 8001bfc:	bf48      	it	mi
 8001bfe:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8001c02:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8001c06:	0d1b      	lsrs	r3, r3, #20
 8001c08:	051b      	lsls	r3, r3, #20
 8001c0a:	2b00      	cmp	r3, #0
 8001c0c:	d1bd      	bne.n	8001b8a <_strtod_l+0x72>
 8001c0e:	f000 fecd 	bl	80029ac <__errno>
 8001c12:	2322      	movs	r3, #34	@ 0x22
 8001c14:	6003      	str	r3, [r0, #0]
 8001c16:	e7b8      	b.n	8001b8a <_strtod_l+0x72>
 8001c18:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8001c1c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8001c20:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8001c24:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8001c28:	e7e7      	b.n	8001bfa <_strtod_l+0xe2>
 8001c2a:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 8001da8 <_strtod_l+0x290>
 8001c2e:	e7e4      	b.n	8001bfa <_strtod_l+0xe2>
 8001c30:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8001c34:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8001c38:	e7df      	b.n	8001bfa <_strtod_l+0xe2>
 8001c3a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8001c3c:	1c5a      	adds	r2, r3, #1
 8001c3e:	9219      	str	r2, [sp, #100]	@ 0x64
 8001c40:	785b      	ldrb	r3, [r3, #1]
 8001c42:	2b30      	cmp	r3, #48	@ 0x30
 8001c44:	d0f9      	beq.n	8001c3a <_strtod_l+0x122>
 8001c46:	2b00      	cmp	r3, #0
 8001c48:	d09f      	beq.n	8001b8a <_strtod_l+0x72>
 8001c4a:	2301      	movs	r3, #1
 8001c4c:	2700      	movs	r7, #0
 8001c4e:	220a      	movs	r2, #10
 8001c50:	46b9      	mov	r9, r7
 8001c52:	9308      	str	r3, [sp, #32]
 8001c54:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8001c56:	970b      	str	r7, [sp, #44]	@ 0x2c
 8001c58:	930c      	str	r3, [sp, #48]	@ 0x30
 8001c5a:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8001c5c:	7805      	ldrb	r5, [r0, #0]
 8001c5e:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8001c62:	b2d9      	uxtb	r1, r3
 8001c64:	2909      	cmp	r1, #9
 8001c66:	d928      	bls.n	8001cba <_strtod_l+0x1a2>
 8001c68:	2201      	movs	r2, #1
 8001c6a:	4950      	ldr	r1, [pc, #320]	@ (8001dac <_strtod_l+0x294>)
 8001c6c:	f000 fe45 	bl	80028fa <strncmp>
 8001c70:	2800      	cmp	r0, #0
 8001c72:	d032      	beq.n	8001cda <_strtod_l+0x1c2>
 8001c74:	2000      	movs	r0, #0
 8001c76:	462a      	mov	r2, r5
 8001c78:	4603      	mov	r3, r0
 8001c7a:	464d      	mov	r5, r9
 8001c7c:	900a      	str	r0, [sp, #40]	@ 0x28
 8001c7e:	2a65      	cmp	r2, #101	@ 0x65
 8001c80:	d001      	beq.n	8001c86 <_strtod_l+0x16e>
 8001c82:	2a45      	cmp	r2, #69	@ 0x45
 8001c84:	d114      	bne.n	8001cb0 <_strtod_l+0x198>
 8001c86:	b91d      	cbnz	r5, 8001c90 <_strtod_l+0x178>
 8001c88:	9a08      	ldr	r2, [sp, #32]
 8001c8a:	4302      	orrs	r2, r0
 8001c8c:	d096      	beq.n	8001bbc <_strtod_l+0xa4>
 8001c8e:	2500      	movs	r5, #0
 8001c90:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8001c92:	1c62      	adds	r2, r4, #1
 8001c94:	9219      	str	r2, [sp, #100]	@ 0x64
 8001c96:	7862      	ldrb	r2, [r4, #1]
 8001c98:	2a2b      	cmp	r2, #43	@ 0x2b
 8001c9a:	d07a      	beq.n	8001d92 <_strtod_l+0x27a>
 8001c9c:	2a2d      	cmp	r2, #45	@ 0x2d
 8001c9e:	d07e      	beq.n	8001d9e <_strtod_l+0x286>
 8001ca0:	f04f 0c00 	mov.w	ip, #0
 8001ca4:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8001ca8:	2909      	cmp	r1, #9
 8001caa:	f240 8085 	bls.w	8001db8 <_strtod_l+0x2a0>
 8001cae:	9419      	str	r4, [sp, #100]	@ 0x64
 8001cb0:	f04f 0800 	mov.w	r8, #0
 8001cb4:	e0a5      	b.n	8001e02 <_strtod_l+0x2ea>
 8001cb6:	2300      	movs	r3, #0
 8001cb8:	e7c8      	b.n	8001c4c <_strtod_l+0x134>
 8001cba:	f1b9 0f08 	cmp.w	r9, #8
 8001cbe:	bfd8      	it	le
 8001cc0:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8001cc2:	f100 0001 	add.w	r0, r0, #1
 8001cc6:	bfd6      	itet	le
 8001cc8:	fb02 3301 	mlale	r3, r2, r1, r3
 8001ccc:	fb02 3707 	mlagt	r7, r2, r7, r3
 8001cd0:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8001cd2:	f109 0901 	add.w	r9, r9, #1
 8001cd6:	9019      	str	r0, [sp, #100]	@ 0x64
 8001cd8:	e7bf      	b.n	8001c5a <_strtod_l+0x142>
 8001cda:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8001cdc:	1c5a      	adds	r2, r3, #1
 8001cde:	9219      	str	r2, [sp, #100]	@ 0x64
 8001ce0:	785a      	ldrb	r2, [r3, #1]
 8001ce2:	f1b9 0f00 	cmp.w	r9, #0
 8001ce6:	d03b      	beq.n	8001d60 <_strtod_l+0x248>
 8001ce8:	464d      	mov	r5, r9
 8001cea:	900a      	str	r0, [sp, #40]	@ 0x28
 8001cec:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8001cf0:	2b09      	cmp	r3, #9
 8001cf2:	d912      	bls.n	8001d1a <_strtod_l+0x202>
 8001cf4:	2301      	movs	r3, #1
 8001cf6:	e7c2      	b.n	8001c7e <_strtod_l+0x166>
 8001cf8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8001cfa:	3001      	adds	r0, #1
 8001cfc:	1c5a      	adds	r2, r3, #1
 8001cfe:	9219      	str	r2, [sp, #100]	@ 0x64
 8001d00:	785a      	ldrb	r2, [r3, #1]
 8001d02:	2a30      	cmp	r2, #48	@ 0x30
 8001d04:	d0f8      	beq.n	8001cf8 <_strtod_l+0x1e0>
 8001d06:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8001d0a:	2b08      	cmp	r3, #8
 8001d0c:	f200 84c8 	bhi.w	80026a0 <_strtod_l+0xb88>
 8001d10:	900a      	str	r0, [sp, #40]	@ 0x28
 8001d12:	2000      	movs	r0, #0
 8001d14:	4605      	mov	r5, r0
 8001d16:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8001d18:	930c      	str	r3, [sp, #48]	@ 0x30
 8001d1a:	3a30      	subs	r2, #48	@ 0x30
 8001d1c:	f100 0301 	add.w	r3, r0, #1
 8001d20:	d018      	beq.n	8001d54 <_strtod_l+0x23c>
 8001d22:	462e      	mov	r6, r5
 8001d24:	f04f 0e0a 	mov.w	lr, #10
 8001d28:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8001d2a:	4419      	add	r1, r3
 8001d2c:	910a      	str	r1, [sp, #40]	@ 0x28
 8001d2e:	1c71      	adds	r1, r6, #1
 8001d30:	eba1 0c05 	sub.w	ip, r1, r5
 8001d34:	4563      	cmp	r3, ip
 8001d36:	dc15      	bgt.n	8001d64 <_strtod_l+0x24c>
 8001d38:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8001d3c:	182b      	adds	r3, r5, r0
 8001d3e:	2b08      	cmp	r3, #8
 8001d40:	f105 0501 	add.w	r5, r5, #1
 8001d44:	4405      	add	r5, r0
 8001d46:	dc1a      	bgt.n	8001d7e <_strtod_l+0x266>
 8001d48:	230a      	movs	r3, #10
 8001d4a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001d4c:	fb03 2301 	mla	r3, r3, r1, r2
 8001d50:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001d52:	2300      	movs	r3, #0
 8001d54:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8001d56:	4618      	mov	r0, r3
 8001d58:	1c51      	adds	r1, r2, #1
 8001d5a:	9119      	str	r1, [sp, #100]	@ 0x64
 8001d5c:	7852      	ldrb	r2, [r2, #1]
 8001d5e:	e7c5      	b.n	8001cec <_strtod_l+0x1d4>
 8001d60:	4648      	mov	r0, r9
 8001d62:	e7ce      	b.n	8001d02 <_strtod_l+0x1ea>
 8001d64:	2e08      	cmp	r6, #8
 8001d66:	dc05      	bgt.n	8001d74 <_strtod_l+0x25c>
 8001d68:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8001d6a:	fb0e f606 	mul.w	r6, lr, r6
 8001d6e:	960b      	str	r6, [sp, #44]	@ 0x2c
 8001d70:	460e      	mov	r6, r1
 8001d72:	e7dc      	b.n	8001d2e <_strtod_l+0x216>
 8001d74:	2910      	cmp	r1, #16
 8001d76:	bfd8      	it	le
 8001d78:	fb0e f707 	mulle.w	r7, lr, r7
 8001d7c:	e7f8      	b.n	8001d70 <_strtod_l+0x258>
 8001d7e:	2b0f      	cmp	r3, #15
 8001d80:	bfdc      	itt	le
 8001d82:	230a      	movle	r3, #10
 8001d84:	fb03 2707 	mlale	r7, r3, r7, r2
 8001d88:	e7e3      	b.n	8001d52 <_strtod_l+0x23a>
 8001d8a:	2300      	movs	r3, #0
 8001d8c:	930a      	str	r3, [sp, #40]	@ 0x28
 8001d8e:	2301      	movs	r3, #1
 8001d90:	e77a      	b.n	8001c88 <_strtod_l+0x170>
 8001d92:	f04f 0c00 	mov.w	ip, #0
 8001d96:	1ca2      	adds	r2, r4, #2
 8001d98:	9219      	str	r2, [sp, #100]	@ 0x64
 8001d9a:	78a2      	ldrb	r2, [r4, #2]
 8001d9c:	e782      	b.n	8001ca4 <_strtod_l+0x18c>
 8001d9e:	f04f 0c01 	mov.w	ip, #1
 8001da2:	e7f8      	b.n	8001d96 <_strtod_l+0x27e>
 8001da4:	0800482c 	.word	0x0800482c
 8001da8:	7ff00000 	.word	0x7ff00000
 8001dac:	080046b0 	.word	0x080046b0
 8001db0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8001db2:	1c51      	adds	r1, r2, #1
 8001db4:	9119      	str	r1, [sp, #100]	@ 0x64
 8001db6:	7852      	ldrb	r2, [r2, #1]
 8001db8:	2a30      	cmp	r2, #48	@ 0x30
 8001dba:	d0f9      	beq.n	8001db0 <_strtod_l+0x298>
 8001dbc:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8001dc0:	2908      	cmp	r1, #8
 8001dc2:	f63f af75 	bhi.w	8001cb0 <_strtod_l+0x198>
 8001dc6:	f04f 080a 	mov.w	r8, #10
 8001dca:	3a30      	subs	r2, #48	@ 0x30
 8001dcc:	9209      	str	r2, [sp, #36]	@ 0x24
 8001dce:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8001dd0:	920f      	str	r2, [sp, #60]	@ 0x3c
 8001dd2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8001dd4:	1c56      	adds	r6, r2, #1
 8001dd6:	9619      	str	r6, [sp, #100]	@ 0x64
 8001dd8:	7852      	ldrb	r2, [r2, #1]
 8001dda:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8001dde:	f1be 0f09 	cmp.w	lr, #9
 8001de2:	d939      	bls.n	8001e58 <_strtod_l+0x340>
 8001de4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8001de6:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8001dea:	1a76      	subs	r6, r6, r1
 8001dec:	2e08      	cmp	r6, #8
 8001dee:	dc03      	bgt.n	8001df8 <_strtod_l+0x2e0>
 8001df0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001df2:	4588      	cmp	r8, r1
 8001df4:	bfa8      	it	ge
 8001df6:	4688      	movge	r8, r1
 8001df8:	f1bc 0f00 	cmp.w	ip, #0
 8001dfc:	d001      	beq.n	8001e02 <_strtod_l+0x2ea>
 8001dfe:	f1c8 0800 	rsb	r8, r8, #0
 8001e02:	2d00      	cmp	r5, #0
 8001e04:	d14e      	bne.n	8001ea4 <_strtod_l+0x38c>
 8001e06:	9908      	ldr	r1, [sp, #32]
 8001e08:	4308      	orrs	r0, r1
 8001e0a:	f47f aebe 	bne.w	8001b8a <_strtod_l+0x72>
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	f47f aed4 	bne.w	8001bbc <_strtod_l+0xa4>
 8001e14:	2a69      	cmp	r2, #105	@ 0x69
 8001e16:	d028      	beq.n	8001e6a <_strtod_l+0x352>
 8001e18:	dc25      	bgt.n	8001e66 <_strtod_l+0x34e>
 8001e1a:	2a49      	cmp	r2, #73	@ 0x49
 8001e1c:	d025      	beq.n	8001e6a <_strtod_l+0x352>
 8001e1e:	2a4e      	cmp	r2, #78	@ 0x4e
 8001e20:	f47f aecc 	bne.w	8001bbc <_strtod_l+0xa4>
 8001e24:	4999      	ldr	r1, [pc, #612]	@ (800208c <_strtod_l+0x574>)
 8001e26:	a819      	add	r0, sp, #100	@ 0x64
 8001e28:	f001 f8d4 	bl	8002fd4 <__match>
 8001e2c:	2800      	cmp	r0, #0
 8001e2e:	f43f aec5 	beq.w	8001bbc <_strtod_l+0xa4>
 8001e32:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8001e34:	781b      	ldrb	r3, [r3, #0]
 8001e36:	2b28      	cmp	r3, #40	@ 0x28
 8001e38:	d12e      	bne.n	8001e98 <_strtod_l+0x380>
 8001e3a:	4995      	ldr	r1, [pc, #596]	@ (8002090 <_strtod_l+0x578>)
 8001e3c:	aa1c      	add	r2, sp, #112	@ 0x70
 8001e3e:	a819      	add	r0, sp, #100	@ 0x64
 8001e40:	f001 f8dc 	bl	8002ffc <__hexnan>
 8001e44:	2805      	cmp	r0, #5
 8001e46:	d127      	bne.n	8001e98 <_strtod_l+0x380>
 8001e48:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8001e4a:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8001e4e:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8001e52:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8001e56:	e698      	b.n	8001b8a <_strtod_l+0x72>
 8001e58:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001e5a:	fb08 2101 	mla	r1, r8, r1, r2
 8001e5e:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8001e62:	9209      	str	r2, [sp, #36]	@ 0x24
 8001e64:	e7b5      	b.n	8001dd2 <_strtod_l+0x2ba>
 8001e66:	2a6e      	cmp	r2, #110	@ 0x6e
 8001e68:	e7da      	b.n	8001e20 <_strtod_l+0x308>
 8001e6a:	498a      	ldr	r1, [pc, #552]	@ (8002094 <_strtod_l+0x57c>)
 8001e6c:	a819      	add	r0, sp, #100	@ 0x64
 8001e6e:	f001 f8b1 	bl	8002fd4 <__match>
 8001e72:	2800      	cmp	r0, #0
 8001e74:	f43f aea2 	beq.w	8001bbc <_strtod_l+0xa4>
 8001e78:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8001e7a:	4987      	ldr	r1, [pc, #540]	@ (8002098 <_strtod_l+0x580>)
 8001e7c:	3b01      	subs	r3, #1
 8001e7e:	a819      	add	r0, sp, #100	@ 0x64
 8001e80:	9319      	str	r3, [sp, #100]	@ 0x64
 8001e82:	f001 f8a7 	bl	8002fd4 <__match>
 8001e86:	b910      	cbnz	r0, 8001e8e <_strtod_l+0x376>
 8001e88:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8001e8a:	3301      	adds	r3, #1
 8001e8c:	9319      	str	r3, [sp, #100]	@ 0x64
 8001e8e:	f04f 0a00 	mov.w	sl, #0
 8001e92:	f8df b208 	ldr.w	fp, [pc, #520]	@ 800209c <_strtod_l+0x584>
 8001e96:	e678      	b.n	8001b8a <_strtod_l+0x72>
 8001e98:	4881      	ldr	r0, [pc, #516]	@ (80020a0 <_strtod_l+0x588>)
 8001e9a:	f000 fdc3 	bl	8002a24 <nan>
 8001e9e:	4682      	mov	sl, r0
 8001ea0:	468b      	mov	fp, r1
 8001ea2:	e672      	b.n	8001b8a <_strtod_l+0x72>
 8001ea4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001ea6:	f1b9 0f00 	cmp.w	r9, #0
 8001eaa:	bf08      	it	eq
 8001eac:	46a9      	moveq	r9, r5
 8001eae:	eba8 0303 	sub.w	r3, r8, r3
 8001eb2:	2d10      	cmp	r5, #16
 8001eb4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8001eb6:	462c      	mov	r4, r5
 8001eb8:	9309      	str	r3, [sp, #36]	@ 0x24
 8001eba:	bfa8      	it	ge
 8001ebc:	2410      	movge	r4, #16
 8001ebe:	f7fe fa89 	bl	80003d4 <__aeabi_ui2d>
 8001ec2:	2d09      	cmp	r5, #9
 8001ec4:	4682      	mov	sl, r0
 8001ec6:	468b      	mov	fp, r1
 8001ec8:	dc11      	bgt.n	8001eee <_strtod_l+0x3d6>
 8001eca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001ecc:	2b00      	cmp	r3, #0
 8001ece:	f43f ae5c 	beq.w	8001b8a <_strtod_l+0x72>
 8001ed2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001ed4:	dd76      	ble.n	8001fc4 <_strtod_l+0x4ac>
 8001ed6:	2b16      	cmp	r3, #22
 8001ed8:	dc5d      	bgt.n	8001f96 <_strtod_l+0x47e>
 8001eda:	4972      	ldr	r1, [pc, #456]	@ (80020a4 <_strtod_l+0x58c>)
 8001edc:	4652      	mov	r2, sl
 8001ede:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8001ee2:	465b      	mov	r3, fp
 8001ee4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001ee8:	f7fe faee 	bl	80004c8 <__aeabi_dmul>
 8001eec:	e7d7      	b.n	8001e9e <_strtod_l+0x386>
 8001eee:	4b6d      	ldr	r3, [pc, #436]	@ (80020a4 <_strtod_l+0x58c>)
 8001ef0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8001ef4:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8001ef8:	f7fe fae6 	bl	80004c8 <__aeabi_dmul>
 8001efc:	4682      	mov	sl, r0
 8001efe:	4638      	mov	r0, r7
 8001f00:	468b      	mov	fp, r1
 8001f02:	f7fe fa67 	bl	80003d4 <__aeabi_ui2d>
 8001f06:	4602      	mov	r2, r0
 8001f08:	460b      	mov	r3, r1
 8001f0a:	4650      	mov	r0, sl
 8001f0c:	4659      	mov	r1, fp
 8001f0e:	f7fe f925 	bl	800015c <__adddf3>
 8001f12:	2d0f      	cmp	r5, #15
 8001f14:	4682      	mov	sl, r0
 8001f16:	468b      	mov	fp, r1
 8001f18:	ddd7      	ble.n	8001eca <_strtod_l+0x3b2>
 8001f1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001f1c:	1b2c      	subs	r4, r5, r4
 8001f1e:	441c      	add	r4, r3
 8001f20:	2c00      	cmp	r4, #0
 8001f22:	f340 8093 	ble.w	800204c <_strtod_l+0x534>
 8001f26:	f014 030f 	ands.w	r3, r4, #15
 8001f2a:	d00a      	beq.n	8001f42 <_strtod_l+0x42a>
 8001f2c:	495d      	ldr	r1, [pc, #372]	@ (80020a4 <_strtod_l+0x58c>)
 8001f2e:	4652      	mov	r2, sl
 8001f30:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8001f34:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001f38:	465b      	mov	r3, fp
 8001f3a:	f7fe fac5 	bl	80004c8 <__aeabi_dmul>
 8001f3e:	4682      	mov	sl, r0
 8001f40:	468b      	mov	fp, r1
 8001f42:	f034 040f 	bics.w	r4, r4, #15
 8001f46:	d073      	beq.n	8002030 <_strtod_l+0x518>
 8001f48:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8001f4c:	dd49      	ble.n	8001fe2 <_strtod_l+0x4ca>
 8001f4e:	2400      	movs	r4, #0
 8001f50:	46a0      	mov	r8, r4
 8001f52:	46a1      	mov	r9, r4
 8001f54:	940b      	str	r4, [sp, #44]	@ 0x2c
 8001f56:	2322      	movs	r3, #34	@ 0x22
 8001f58:	f04f 0a00 	mov.w	sl, #0
 8001f5c:	9a05      	ldr	r2, [sp, #20]
 8001f5e:	f8df b13c 	ldr.w	fp, [pc, #316]	@ 800209c <_strtod_l+0x584>
 8001f62:	6013      	str	r3, [r2, #0]
 8001f64:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001f66:	2b00      	cmp	r3, #0
 8001f68:	f43f ae0f 	beq.w	8001b8a <_strtod_l+0x72>
 8001f6c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8001f6e:	9805      	ldr	r0, [sp, #20]
 8001f70:	f001 f9e0 	bl	8003334 <_Bfree>
 8001f74:	4649      	mov	r1, r9
 8001f76:	9805      	ldr	r0, [sp, #20]
 8001f78:	f001 f9dc 	bl	8003334 <_Bfree>
 8001f7c:	4641      	mov	r1, r8
 8001f7e:	9805      	ldr	r0, [sp, #20]
 8001f80:	f001 f9d8 	bl	8003334 <_Bfree>
 8001f84:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001f86:	9805      	ldr	r0, [sp, #20]
 8001f88:	f001 f9d4 	bl	8003334 <_Bfree>
 8001f8c:	4621      	mov	r1, r4
 8001f8e:	9805      	ldr	r0, [sp, #20]
 8001f90:	f001 f9d0 	bl	8003334 <_Bfree>
 8001f94:	e5f9      	b.n	8001b8a <_strtod_l+0x72>
 8001f96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8001f98:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8001f9c:	4293      	cmp	r3, r2
 8001f9e:	dbbc      	blt.n	8001f1a <_strtod_l+0x402>
 8001fa0:	4c40      	ldr	r4, [pc, #256]	@ (80020a4 <_strtod_l+0x58c>)
 8001fa2:	f1c5 050f 	rsb	r5, r5, #15
 8001fa6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8001faa:	4652      	mov	r2, sl
 8001fac:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001fb0:	465b      	mov	r3, fp
 8001fb2:	f7fe fa89 	bl	80004c8 <__aeabi_dmul>
 8001fb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001fb8:	1b5d      	subs	r5, r3, r5
 8001fba:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8001fbe:	e9d4 2300 	ldrd	r2, r3, [r4]
 8001fc2:	e791      	b.n	8001ee8 <_strtod_l+0x3d0>
 8001fc4:	3316      	adds	r3, #22
 8001fc6:	dba8      	blt.n	8001f1a <_strtod_l+0x402>
 8001fc8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001fca:	4650      	mov	r0, sl
 8001fcc:	eba3 0808 	sub.w	r8, r3, r8
 8001fd0:	4b34      	ldr	r3, [pc, #208]	@ (80020a4 <_strtod_l+0x58c>)
 8001fd2:	4659      	mov	r1, fp
 8001fd4:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8001fd8:	e9d8 2300 	ldrd	r2, r3, [r8]
 8001fdc:	f7fe fb9e 	bl	800071c <__aeabi_ddiv>
 8001fe0:	e75d      	b.n	8001e9e <_strtod_l+0x386>
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	4650      	mov	r0, sl
 8001fe6:	4659      	mov	r1, fp
 8001fe8:	461e      	mov	r6, r3
 8001fea:	4f2f      	ldr	r7, [pc, #188]	@ (80020a8 <_strtod_l+0x590>)
 8001fec:	1124      	asrs	r4, r4, #4
 8001fee:	2c01      	cmp	r4, #1
 8001ff0:	dc21      	bgt.n	8002036 <_strtod_l+0x51e>
 8001ff2:	b10b      	cbz	r3, 8001ff8 <_strtod_l+0x4e0>
 8001ff4:	4682      	mov	sl, r0
 8001ff6:	468b      	mov	fp, r1
 8001ff8:	492b      	ldr	r1, [pc, #172]	@ (80020a8 <_strtod_l+0x590>)
 8001ffa:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8001ffe:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8002002:	4652      	mov	r2, sl
 8002004:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002008:	465b      	mov	r3, fp
 800200a:	f7fe fa5d 	bl	80004c8 <__aeabi_dmul>
 800200e:	4b23      	ldr	r3, [pc, #140]	@ (800209c <_strtod_l+0x584>)
 8002010:	460a      	mov	r2, r1
 8002012:	400b      	ands	r3, r1
 8002014:	4925      	ldr	r1, [pc, #148]	@ (80020ac <_strtod_l+0x594>)
 8002016:	4682      	mov	sl, r0
 8002018:	428b      	cmp	r3, r1
 800201a:	d898      	bhi.n	8001f4e <_strtod_l+0x436>
 800201c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8002020:	428b      	cmp	r3, r1
 8002022:	bf86      	itte	hi
 8002024:	f04f 3aff 	movhi.w	sl, #4294967295	@ 0xffffffff
 8002028:	f8df b084 	ldrhi.w	fp, [pc, #132]	@ 80020b0 <_strtod_l+0x598>
 800202c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8002030:	2300      	movs	r3, #0
 8002032:	9308      	str	r3, [sp, #32]
 8002034:	e076      	b.n	8002124 <_strtod_l+0x60c>
 8002036:	07e2      	lsls	r2, r4, #31
 8002038:	d504      	bpl.n	8002044 <_strtod_l+0x52c>
 800203a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800203e:	f7fe fa43 	bl	80004c8 <__aeabi_dmul>
 8002042:	2301      	movs	r3, #1
 8002044:	3601      	adds	r6, #1
 8002046:	1064      	asrs	r4, r4, #1
 8002048:	3708      	adds	r7, #8
 800204a:	e7d0      	b.n	8001fee <_strtod_l+0x4d6>
 800204c:	d0f0      	beq.n	8002030 <_strtod_l+0x518>
 800204e:	4264      	negs	r4, r4
 8002050:	f014 020f 	ands.w	r2, r4, #15
 8002054:	d00a      	beq.n	800206c <_strtod_l+0x554>
 8002056:	4b13      	ldr	r3, [pc, #76]	@ (80020a4 <_strtod_l+0x58c>)
 8002058:	4650      	mov	r0, sl
 800205a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800205e:	4659      	mov	r1, fp
 8002060:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002064:	f7fe fb5a 	bl	800071c <__aeabi_ddiv>
 8002068:	4682      	mov	sl, r0
 800206a:	468b      	mov	fp, r1
 800206c:	1124      	asrs	r4, r4, #4
 800206e:	d0df      	beq.n	8002030 <_strtod_l+0x518>
 8002070:	2c1f      	cmp	r4, #31
 8002072:	dd1f      	ble.n	80020b4 <_strtod_l+0x59c>
 8002074:	2400      	movs	r4, #0
 8002076:	46a0      	mov	r8, r4
 8002078:	46a1      	mov	r9, r4
 800207a:	940b      	str	r4, [sp, #44]	@ 0x2c
 800207c:	2322      	movs	r3, #34	@ 0x22
 800207e:	9a05      	ldr	r2, [sp, #20]
 8002080:	f04f 0a00 	mov.w	sl, #0
 8002084:	f04f 0b00 	mov.w	fp, #0
 8002088:	6013      	str	r3, [r2, #0]
 800208a:	e76b      	b.n	8001f64 <_strtod_l+0x44c>
 800208c:	080046bb 	.word	0x080046bb
 8002090:	08004818 	.word	0x08004818
 8002094:	080046b2 	.word	0x080046b2
 8002098:	080046b5 	.word	0x080046b5
 800209c:	7ff00000 	.word	0x7ff00000
 80020a0:	080047e2 	.word	0x080047e2
 80020a4:	080048a0 	.word	0x080048a0
 80020a8:	08004878 	.word	0x08004878
 80020ac:	7ca00000 	.word	0x7ca00000
 80020b0:	7fefffff 	.word	0x7fefffff
 80020b4:	f014 0310 	ands.w	r3, r4, #16
 80020b8:	bf18      	it	ne
 80020ba:	236a      	movne	r3, #106	@ 0x6a
 80020bc:	4650      	mov	r0, sl
 80020be:	9308      	str	r3, [sp, #32]
 80020c0:	4659      	mov	r1, fp
 80020c2:	2300      	movs	r3, #0
 80020c4:	4e77      	ldr	r6, [pc, #476]	@ (80022a4 <_strtod_l+0x78c>)
 80020c6:	07e7      	lsls	r7, r4, #31
 80020c8:	d504      	bpl.n	80020d4 <_strtod_l+0x5bc>
 80020ca:	e9d6 2300 	ldrd	r2, r3, [r6]
 80020ce:	f7fe f9fb 	bl	80004c8 <__aeabi_dmul>
 80020d2:	2301      	movs	r3, #1
 80020d4:	1064      	asrs	r4, r4, #1
 80020d6:	f106 0608 	add.w	r6, r6, #8
 80020da:	d1f4      	bne.n	80020c6 <_strtod_l+0x5ae>
 80020dc:	b10b      	cbz	r3, 80020e2 <_strtod_l+0x5ca>
 80020de:	4682      	mov	sl, r0
 80020e0:	468b      	mov	fp, r1
 80020e2:	9b08      	ldr	r3, [sp, #32]
 80020e4:	b1b3      	cbz	r3, 8002114 <_strtod_l+0x5fc>
 80020e6:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80020ea:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	4659      	mov	r1, fp
 80020f2:	dd0f      	ble.n	8002114 <_strtod_l+0x5fc>
 80020f4:	2b1f      	cmp	r3, #31
 80020f6:	dd58      	ble.n	80021aa <_strtod_l+0x692>
 80020f8:	2b34      	cmp	r3, #52	@ 0x34
 80020fa:	bfd8      	it	le
 80020fc:	f04f 33ff 	movle.w	r3, #4294967295	@ 0xffffffff
 8002100:	f04f 0a00 	mov.w	sl, #0
 8002104:	bfcf      	iteee	gt
 8002106:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800210a:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800210e:	4093      	lslle	r3, r2
 8002110:	ea03 0b01 	andle.w	fp, r3, r1
 8002114:	2200      	movs	r2, #0
 8002116:	2300      	movs	r3, #0
 8002118:	4650      	mov	r0, sl
 800211a:	4659      	mov	r1, fp
 800211c:	f7fe fc3c 	bl	8000998 <__aeabi_dcmpeq>
 8002120:	2800      	cmp	r0, #0
 8002122:	d1a7      	bne.n	8002074 <_strtod_l+0x55c>
 8002124:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002126:	464a      	mov	r2, r9
 8002128:	9300      	str	r3, [sp, #0]
 800212a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800212c:	462b      	mov	r3, r5
 800212e:	9805      	ldr	r0, [sp, #20]
 8002130:	f001 f968 	bl	8003404 <__s2b>
 8002134:	900b      	str	r0, [sp, #44]	@ 0x2c
 8002136:	2800      	cmp	r0, #0
 8002138:	f43f af09 	beq.w	8001f4e <_strtod_l+0x436>
 800213c:	2400      	movs	r4, #0
 800213e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002140:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002142:	2a00      	cmp	r2, #0
 8002144:	eba3 0308 	sub.w	r3, r3, r8
 8002148:	bfa8      	it	ge
 800214a:	2300      	movge	r3, #0
 800214c:	46a0      	mov	r8, r4
 800214e:	9312      	str	r3, [sp, #72]	@ 0x48
 8002150:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8002154:	9316      	str	r3, [sp, #88]	@ 0x58
 8002156:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002158:	9805      	ldr	r0, [sp, #20]
 800215a:	6859      	ldr	r1, [r3, #4]
 800215c:	f001 f8aa 	bl	80032b4 <_Balloc>
 8002160:	4681      	mov	r9, r0
 8002162:	2800      	cmp	r0, #0
 8002164:	f43f aef7 	beq.w	8001f56 <_strtod_l+0x43e>
 8002168:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800216a:	300c      	adds	r0, #12
 800216c:	691a      	ldr	r2, [r3, #16]
 800216e:	f103 010c 	add.w	r1, r3, #12
 8002172:	3202      	adds	r2, #2
 8002174:	0092      	lsls	r2, r2, #2
 8002176:	f000 fc46 	bl	8002a06 <memcpy>
 800217a:	ab1c      	add	r3, sp, #112	@ 0x70
 800217c:	9301      	str	r3, [sp, #4]
 800217e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8002180:	9300      	str	r3, [sp, #0]
 8002182:	4652      	mov	r2, sl
 8002184:	465b      	mov	r3, fp
 8002186:	9805      	ldr	r0, [sp, #20]
 8002188:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800218c:	f001 fc66 	bl	8003a5c <__d2b>
 8002190:	901a      	str	r0, [sp, #104]	@ 0x68
 8002192:	2800      	cmp	r0, #0
 8002194:	f43f aedf 	beq.w	8001f56 <_strtod_l+0x43e>
 8002198:	2101      	movs	r1, #1
 800219a:	9805      	ldr	r0, [sp, #20]
 800219c:	f001 f9c8 	bl	8003530 <__i2b>
 80021a0:	4680      	mov	r8, r0
 80021a2:	b948      	cbnz	r0, 80021b8 <_strtod_l+0x6a0>
 80021a4:	f04f 0800 	mov.w	r8, #0
 80021a8:	e6d5      	b.n	8001f56 <_strtod_l+0x43e>
 80021aa:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80021ae:	fa02 f303 	lsl.w	r3, r2, r3
 80021b2:	ea03 0a0a 	and.w	sl, r3, sl
 80021b6:	e7ad      	b.n	8002114 <_strtod_l+0x5fc>
 80021b8:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 80021ba:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80021bc:	2d00      	cmp	r5, #0
 80021be:	bfab      	itete	ge
 80021c0:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80021c2:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80021c4:	18ef      	addge	r7, r5, r3
 80021c6:	1b5e      	sublt	r6, r3, r5
 80021c8:	9b08      	ldr	r3, [sp, #32]
 80021ca:	bfa8      	it	ge
 80021cc:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80021ce:	eba5 0503 	sub.w	r5, r5, r3
 80021d2:	4415      	add	r5, r2
 80021d4:	4b34      	ldr	r3, [pc, #208]	@ (80022a8 <_strtod_l+0x790>)
 80021d6:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
 80021da:	bfb8      	it	lt
 80021dc:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80021de:	429d      	cmp	r5, r3
 80021e0:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80021e4:	da50      	bge.n	8002288 <_strtod_l+0x770>
 80021e6:	1b5b      	subs	r3, r3, r5
 80021e8:	2b1f      	cmp	r3, #31
 80021ea:	f04f 0101 	mov.w	r1, #1
 80021ee:	eba2 0203 	sub.w	r2, r2, r3
 80021f2:	dc3d      	bgt.n	8002270 <_strtod_l+0x758>
 80021f4:	fa01 f303 	lsl.w	r3, r1, r3
 80021f8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80021fa:	2300      	movs	r3, #0
 80021fc:	9310      	str	r3, [sp, #64]	@ 0x40
 80021fe:	18bd      	adds	r5, r7, r2
 8002200:	9b08      	ldr	r3, [sp, #32]
 8002202:	42af      	cmp	r7, r5
 8002204:	4416      	add	r6, r2
 8002206:	441e      	add	r6, r3
 8002208:	463b      	mov	r3, r7
 800220a:	bfa8      	it	ge
 800220c:	462b      	movge	r3, r5
 800220e:	42b3      	cmp	r3, r6
 8002210:	bfa8      	it	ge
 8002212:	4633      	movge	r3, r6
 8002214:	2b00      	cmp	r3, #0
 8002216:	bfc2      	ittt	gt
 8002218:	1aed      	subgt	r5, r5, r3
 800221a:	1af6      	subgt	r6, r6, r3
 800221c:	1aff      	subgt	r7, r7, r3
 800221e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002220:	2b00      	cmp	r3, #0
 8002222:	dd16      	ble.n	8002252 <_strtod_l+0x73a>
 8002224:	4641      	mov	r1, r8
 8002226:	461a      	mov	r2, r3
 8002228:	9805      	ldr	r0, [sp, #20]
 800222a:	f001 fa39 	bl	80036a0 <__pow5mult>
 800222e:	4680      	mov	r8, r0
 8002230:	2800      	cmp	r0, #0
 8002232:	d0b7      	beq.n	80021a4 <_strtod_l+0x68c>
 8002234:	4601      	mov	r1, r0
 8002236:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8002238:	9805      	ldr	r0, [sp, #20]
 800223a:	f001 f98f 	bl	800355c <__multiply>
 800223e:	900a      	str	r0, [sp, #40]	@ 0x28
 8002240:	2800      	cmp	r0, #0
 8002242:	f43f ae88 	beq.w	8001f56 <_strtod_l+0x43e>
 8002246:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8002248:	9805      	ldr	r0, [sp, #20]
 800224a:	f001 f873 	bl	8003334 <_Bfree>
 800224e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002250:	931a      	str	r3, [sp, #104]	@ 0x68
 8002252:	2d00      	cmp	r5, #0
 8002254:	dc1d      	bgt.n	8002292 <_strtod_l+0x77a>
 8002256:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002258:	2b00      	cmp	r3, #0
 800225a:	dd27      	ble.n	80022ac <_strtod_l+0x794>
 800225c:	4649      	mov	r1, r9
 800225e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8002260:	9805      	ldr	r0, [sp, #20]
 8002262:	f001 fa1d 	bl	80036a0 <__pow5mult>
 8002266:	4681      	mov	r9, r0
 8002268:	bb00      	cbnz	r0, 80022ac <_strtod_l+0x794>
 800226a:	f04f 0900 	mov.w	r9, #0
 800226e:	e672      	b.n	8001f56 <_strtod_l+0x43e>
 8002270:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8002274:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8002278:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 800227c:	35e2      	adds	r5, #226	@ 0xe2
 800227e:	fa01 f305 	lsl.w	r3, r1, r5
 8002282:	9310      	str	r3, [sp, #64]	@ 0x40
 8002284:	9113      	str	r1, [sp, #76]	@ 0x4c
 8002286:	e7ba      	b.n	80021fe <_strtod_l+0x6e6>
 8002288:	2300      	movs	r3, #0
 800228a:	9310      	str	r3, [sp, #64]	@ 0x40
 800228c:	2301      	movs	r3, #1
 800228e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002290:	e7b5      	b.n	80021fe <_strtod_l+0x6e6>
 8002292:	462a      	mov	r2, r5
 8002294:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8002296:	9805      	ldr	r0, [sp, #20]
 8002298:	f001 fa5c 	bl	8003754 <__lshift>
 800229c:	901a      	str	r0, [sp, #104]	@ 0x68
 800229e:	2800      	cmp	r0, #0
 80022a0:	d1d9      	bne.n	8002256 <_strtod_l+0x73e>
 80022a2:	e658      	b.n	8001f56 <_strtod_l+0x43e>
 80022a4:	08004840 	.word	0x08004840
 80022a8:	fffffc02 	.word	0xfffffc02
 80022ac:	2e00      	cmp	r6, #0
 80022ae:	dd07      	ble.n	80022c0 <_strtod_l+0x7a8>
 80022b0:	4649      	mov	r1, r9
 80022b2:	4632      	mov	r2, r6
 80022b4:	9805      	ldr	r0, [sp, #20]
 80022b6:	f001 fa4d 	bl	8003754 <__lshift>
 80022ba:	4681      	mov	r9, r0
 80022bc:	2800      	cmp	r0, #0
 80022be:	d0d4      	beq.n	800226a <_strtod_l+0x752>
 80022c0:	2f00      	cmp	r7, #0
 80022c2:	dd08      	ble.n	80022d6 <_strtod_l+0x7be>
 80022c4:	4641      	mov	r1, r8
 80022c6:	463a      	mov	r2, r7
 80022c8:	9805      	ldr	r0, [sp, #20]
 80022ca:	f001 fa43 	bl	8003754 <__lshift>
 80022ce:	4680      	mov	r8, r0
 80022d0:	2800      	cmp	r0, #0
 80022d2:	f43f ae40 	beq.w	8001f56 <_strtod_l+0x43e>
 80022d6:	464a      	mov	r2, r9
 80022d8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80022da:	9805      	ldr	r0, [sp, #20]
 80022dc:	f001 fac2 	bl	8003864 <__mdiff>
 80022e0:	4604      	mov	r4, r0
 80022e2:	2800      	cmp	r0, #0
 80022e4:	f43f ae37 	beq.w	8001f56 <_strtod_l+0x43e>
 80022e8:	68c3      	ldr	r3, [r0, #12]
 80022ea:	4641      	mov	r1, r8
 80022ec:	930f      	str	r3, [sp, #60]	@ 0x3c
 80022ee:	2300      	movs	r3, #0
 80022f0:	60c3      	str	r3, [r0, #12]
 80022f2:	f001 fa9b 	bl	800382c <__mcmp>
 80022f6:	2800      	cmp	r0, #0
 80022f8:	da3d      	bge.n	8002376 <_strtod_l+0x85e>
 80022fa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80022fc:	ea53 030a 	orrs.w	r3, r3, sl
 8002300:	d163      	bne.n	80023ca <_strtod_l+0x8b2>
 8002302:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8002306:	2b00      	cmp	r3, #0
 8002308:	d15f      	bne.n	80023ca <_strtod_l+0x8b2>
 800230a:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800230e:	0d1b      	lsrs	r3, r3, #20
 8002310:	051b      	lsls	r3, r3, #20
 8002312:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8002316:	d958      	bls.n	80023ca <_strtod_l+0x8b2>
 8002318:	6963      	ldr	r3, [r4, #20]
 800231a:	b913      	cbnz	r3, 8002322 <_strtod_l+0x80a>
 800231c:	6923      	ldr	r3, [r4, #16]
 800231e:	2b01      	cmp	r3, #1
 8002320:	dd53      	ble.n	80023ca <_strtod_l+0x8b2>
 8002322:	4621      	mov	r1, r4
 8002324:	2201      	movs	r2, #1
 8002326:	9805      	ldr	r0, [sp, #20]
 8002328:	f001 fa14 	bl	8003754 <__lshift>
 800232c:	4641      	mov	r1, r8
 800232e:	4604      	mov	r4, r0
 8002330:	f001 fa7c 	bl	800382c <__mcmp>
 8002334:	2800      	cmp	r0, #0
 8002336:	dd48      	ble.n	80023ca <_strtod_l+0x8b2>
 8002338:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800233c:	9a08      	ldr	r2, [sp, #32]
 800233e:	0d1b      	lsrs	r3, r3, #20
 8002340:	051b      	lsls	r3, r3, #20
 8002342:	2a00      	cmp	r2, #0
 8002344:	d062      	beq.n	800240c <_strtod_l+0x8f4>
 8002346:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800234a:	d85f      	bhi.n	800240c <_strtod_l+0x8f4>
 800234c:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8002350:	f67f ae94 	bls.w	800207c <_strtod_l+0x564>
 8002354:	4650      	mov	r0, sl
 8002356:	4659      	mov	r1, fp
 8002358:	4ba3      	ldr	r3, [pc, #652]	@ (80025e8 <_strtod_l+0xad0>)
 800235a:	2200      	movs	r2, #0
 800235c:	f7fe f8b4 	bl	80004c8 <__aeabi_dmul>
 8002360:	4ba2      	ldr	r3, [pc, #648]	@ (80025ec <_strtod_l+0xad4>)
 8002362:	4682      	mov	sl, r0
 8002364:	400b      	ands	r3, r1
 8002366:	468b      	mov	fp, r1
 8002368:	2b00      	cmp	r3, #0
 800236a:	f47f adff 	bne.w	8001f6c <_strtod_l+0x454>
 800236e:	2322      	movs	r3, #34	@ 0x22
 8002370:	9a05      	ldr	r2, [sp, #20]
 8002372:	6013      	str	r3, [r2, #0]
 8002374:	e5fa      	b.n	8001f6c <_strtod_l+0x454>
 8002376:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 800237a:	d165      	bne.n	8002448 <_strtod_l+0x930>
 800237c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800237e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8002382:	b35a      	cbz	r2, 80023dc <_strtod_l+0x8c4>
 8002384:	4a9a      	ldr	r2, [pc, #616]	@ (80025f0 <_strtod_l+0xad8>)
 8002386:	4293      	cmp	r3, r2
 8002388:	d12b      	bne.n	80023e2 <_strtod_l+0x8ca>
 800238a:	9b08      	ldr	r3, [sp, #32]
 800238c:	4651      	mov	r1, sl
 800238e:	b303      	cbz	r3, 80023d2 <_strtod_l+0x8ba>
 8002390:	465a      	mov	r2, fp
 8002392:	4b96      	ldr	r3, [pc, #600]	@ (80025ec <_strtod_l+0xad4>)
 8002394:	4013      	ands	r3, r2
 8002396:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800239a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800239e:	d81b      	bhi.n	80023d8 <_strtod_l+0x8c0>
 80023a0:	0d1b      	lsrs	r3, r3, #20
 80023a2:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80023a6:	fa02 f303 	lsl.w	r3, r2, r3
 80023aa:	4299      	cmp	r1, r3
 80023ac:	d119      	bne.n	80023e2 <_strtod_l+0x8ca>
 80023ae:	4b91      	ldr	r3, [pc, #580]	@ (80025f4 <_strtod_l+0xadc>)
 80023b0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80023b2:	429a      	cmp	r2, r3
 80023b4:	d102      	bne.n	80023bc <_strtod_l+0x8a4>
 80023b6:	3101      	adds	r1, #1
 80023b8:	f43f adcd 	beq.w	8001f56 <_strtod_l+0x43e>
 80023bc:	f04f 0a00 	mov.w	sl, #0
 80023c0:	4b8a      	ldr	r3, [pc, #552]	@ (80025ec <_strtod_l+0xad4>)
 80023c2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80023c4:	401a      	ands	r2, r3
 80023c6:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80023ca:	9b08      	ldr	r3, [sp, #32]
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d1c1      	bne.n	8002354 <_strtod_l+0x83c>
 80023d0:	e5cc      	b.n	8001f6c <_strtod_l+0x454>
 80023d2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80023d6:	e7e8      	b.n	80023aa <_strtod_l+0x892>
 80023d8:	4613      	mov	r3, r2
 80023da:	e7e6      	b.n	80023aa <_strtod_l+0x892>
 80023dc:	ea53 030a 	orrs.w	r3, r3, sl
 80023e0:	d0aa      	beq.n	8002338 <_strtod_l+0x820>
 80023e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80023e4:	b1db      	cbz	r3, 800241e <_strtod_l+0x906>
 80023e6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80023e8:	4213      	tst	r3, r2
 80023ea:	d0ee      	beq.n	80023ca <_strtod_l+0x8b2>
 80023ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80023ee:	4650      	mov	r0, sl
 80023f0:	4659      	mov	r1, fp
 80023f2:	9a08      	ldr	r2, [sp, #32]
 80023f4:	b1bb      	cbz	r3, 8002426 <_strtod_l+0x90e>
 80023f6:	f7ff fb6c 	bl	8001ad2 <sulp>
 80023fa:	4602      	mov	r2, r0
 80023fc:	460b      	mov	r3, r1
 80023fe:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002402:	f7fd feab 	bl	800015c <__adddf3>
 8002406:	4682      	mov	sl, r0
 8002408:	468b      	mov	fp, r1
 800240a:	e7de      	b.n	80023ca <_strtod_l+0x8b2>
 800240c:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8002410:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8002414:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8002418:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800241c:	e7d5      	b.n	80023ca <_strtod_l+0x8b2>
 800241e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8002420:	ea13 0f0a 	tst.w	r3, sl
 8002424:	e7e1      	b.n	80023ea <_strtod_l+0x8d2>
 8002426:	f7ff fb54 	bl	8001ad2 <sulp>
 800242a:	4602      	mov	r2, r0
 800242c:	460b      	mov	r3, r1
 800242e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002432:	f7fd fe91 	bl	8000158 <__aeabi_dsub>
 8002436:	2200      	movs	r2, #0
 8002438:	2300      	movs	r3, #0
 800243a:	4682      	mov	sl, r0
 800243c:	468b      	mov	fp, r1
 800243e:	f7fe faab 	bl	8000998 <__aeabi_dcmpeq>
 8002442:	2800      	cmp	r0, #0
 8002444:	d0c1      	beq.n	80023ca <_strtod_l+0x8b2>
 8002446:	e619      	b.n	800207c <_strtod_l+0x564>
 8002448:	4641      	mov	r1, r8
 800244a:	4620      	mov	r0, r4
 800244c:	f001 fb5e 	bl	8003b0c <__ratio>
 8002450:	2200      	movs	r2, #0
 8002452:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002456:	4606      	mov	r6, r0
 8002458:	460f      	mov	r7, r1
 800245a:	f7fe fab1 	bl	80009c0 <__aeabi_dcmple>
 800245e:	2800      	cmp	r0, #0
 8002460:	d06d      	beq.n	800253e <_strtod_l+0xa26>
 8002462:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002464:	2b00      	cmp	r3, #0
 8002466:	d178      	bne.n	800255a <_strtod_l+0xa42>
 8002468:	f1ba 0f00 	cmp.w	sl, #0
 800246c:	d156      	bne.n	800251c <_strtod_l+0xa04>
 800246e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002470:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002474:	2b00      	cmp	r3, #0
 8002476:	d158      	bne.n	800252a <_strtod_l+0xa12>
 8002478:	2200      	movs	r2, #0
 800247a:	4630      	mov	r0, r6
 800247c:	4639      	mov	r1, r7
 800247e:	4b5e      	ldr	r3, [pc, #376]	@ (80025f8 <_strtod_l+0xae0>)
 8002480:	f7fe fa94 	bl	80009ac <__aeabi_dcmplt>
 8002484:	2800      	cmp	r0, #0
 8002486:	d157      	bne.n	8002538 <_strtod_l+0xa20>
 8002488:	4630      	mov	r0, r6
 800248a:	4639      	mov	r1, r7
 800248c:	2200      	movs	r2, #0
 800248e:	4b5b      	ldr	r3, [pc, #364]	@ (80025fc <_strtod_l+0xae4>)
 8002490:	f7fe f81a 	bl	80004c8 <__aeabi_dmul>
 8002494:	4606      	mov	r6, r0
 8002496:	460f      	mov	r7, r1
 8002498:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800249c:	9606      	str	r6, [sp, #24]
 800249e:	9307      	str	r3, [sp, #28]
 80024a0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80024a4:	4d51      	ldr	r5, [pc, #324]	@ (80025ec <_strtod_l+0xad4>)
 80024a6:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80024aa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80024ac:	401d      	ands	r5, r3
 80024ae:	4b54      	ldr	r3, [pc, #336]	@ (8002600 <_strtod_l+0xae8>)
 80024b0:	429d      	cmp	r5, r3
 80024b2:	f040 80ab 	bne.w	800260c <_strtod_l+0xaf4>
 80024b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80024b8:	4650      	mov	r0, sl
 80024ba:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80024be:	4659      	mov	r1, fp
 80024c0:	f001 fa64 	bl	800398c <__ulp>
 80024c4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80024c8:	f7fd fffe 	bl	80004c8 <__aeabi_dmul>
 80024cc:	4652      	mov	r2, sl
 80024ce:	465b      	mov	r3, fp
 80024d0:	f7fd fe44 	bl	800015c <__adddf3>
 80024d4:	460b      	mov	r3, r1
 80024d6:	4945      	ldr	r1, [pc, #276]	@ (80025ec <_strtod_l+0xad4>)
 80024d8:	4a4a      	ldr	r2, [pc, #296]	@ (8002604 <_strtod_l+0xaec>)
 80024da:	4019      	ands	r1, r3
 80024dc:	4291      	cmp	r1, r2
 80024de:	4682      	mov	sl, r0
 80024e0:	d942      	bls.n	8002568 <_strtod_l+0xa50>
 80024e2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80024e4:	4b43      	ldr	r3, [pc, #268]	@ (80025f4 <_strtod_l+0xadc>)
 80024e6:	429a      	cmp	r2, r3
 80024e8:	d103      	bne.n	80024f2 <_strtod_l+0x9da>
 80024ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80024ec:	3301      	adds	r3, #1
 80024ee:	f43f ad32 	beq.w	8001f56 <_strtod_l+0x43e>
 80024f2:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 80024f6:	f8df b0fc 	ldr.w	fp, [pc, #252]	@ 80025f4 <_strtod_l+0xadc>
 80024fa:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80024fc:	9805      	ldr	r0, [sp, #20]
 80024fe:	f000 ff19 	bl	8003334 <_Bfree>
 8002502:	4649      	mov	r1, r9
 8002504:	9805      	ldr	r0, [sp, #20]
 8002506:	f000 ff15 	bl	8003334 <_Bfree>
 800250a:	4641      	mov	r1, r8
 800250c:	9805      	ldr	r0, [sp, #20]
 800250e:	f000 ff11 	bl	8003334 <_Bfree>
 8002512:	4621      	mov	r1, r4
 8002514:	9805      	ldr	r0, [sp, #20]
 8002516:	f000 ff0d 	bl	8003334 <_Bfree>
 800251a:	e61c      	b.n	8002156 <_strtod_l+0x63e>
 800251c:	f1ba 0f01 	cmp.w	sl, #1
 8002520:	d103      	bne.n	800252a <_strtod_l+0xa12>
 8002522:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002524:	2b00      	cmp	r3, #0
 8002526:	f43f ada9 	beq.w	800207c <_strtod_l+0x564>
 800252a:	2200      	movs	r2, #0
 800252c:	4b36      	ldr	r3, [pc, #216]	@ (8002608 <_strtod_l+0xaf0>)
 800252e:	2600      	movs	r6, #0
 8002530:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8002534:	4f30      	ldr	r7, [pc, #192]	@ (80025f8 <_strtod_l+0xae0>)
 8002536:	e7b3      	b.n	80024a0 <_strtod_l+0x988>
 8002538:	2600      	movs	r6, #0
 800253a:	4f30      	ldr	r7, [pc, #192]	@ (80025fc <_strtod_l+0xae4>)
 800253c:	e7ac      	b.n	8002498 <_strtod_l+0x980>
 800253e:	4630      	mov	r0, r6
 8002540:	4639      	mov	r1, r7
 8002542:	4b2e      	ldr	r3, [pc, #184]	@ (80025fc <_strtod_l+0xae4>)
 8002544:	2200      	movs	r2, #0
 8002546:	f7fd ffbf 	bl	80004c8 <__aeabi_dmul>
 800254a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800254c:	4606      	mov	r6, r0
 800254e:	460f      	mov	r7, r1
 8002550:	2b00      	cmp	r3, #0
 8002552:	d0a1      	beq.n	8002498 <_strtod_l+0x980>
 8002554:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8002558:	e7a2      	b.n	80024a0 <_strtod_l+0x988>
 800255a:	2200      	movs	r2, #0
 800255c:	4b26      	ldr	r3, [pc, #152]	@ (80025f8 <_strtod_l+0xae0>)
 800255e:	4616      	mov	r6, r2
 8002560:	461f      	mov	r7, r3
 8002562:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8002566:	e79b      	b.n	80024a0 <_strtod_l+0x988>
 8002568:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800256c:	9b08      	ldr	r3, [sp, #32]
 800256e:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8002572:	2b00      	cmp	r3, #0
 8002574:	d1c1      	bne.n	80024fa <_strtod_l+0x9e2>
 8002576:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800257a:	0d1b      	lsrs	r3, r3, #20
 800257c:	051b      	lsls	r3, r3, #20
 800257e:	429d      	cmp	r5, r3
 8002580:	d1bb      	bne.n	80024fa <_strtod_l+0x9e2>
 8002582:	4630      	mov	r0, r6
 8002584:	4639      	mov	r1, r7
 8002586:	f7fe fd9d 	bl	80010c4 <__aeabi_d2lz>
 800258a:	f7fd ff6f 	bl	800046c <__aeabi_l2d>
 800258e:	4602      	mov	r2, r0
 8002590:	460b      	mov	r3, r1
 8002592:	4630      	mov	r0, r6
 8002594:	4639      	mov	r1, r7
 8002596:	f7fd fddf 	bl	8000158 <__aeabi_dsub>
 800259a:	460b      	mov	r3, r1
 800259c:	4602      	mov	r2, r0
 800259e:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80025a2:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80025a6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80025a8:	ea46 060a 	orr.w	r6, r6, sl
 80025ac:	431e      	orrs	r6, r3
 80025ae:	d06a      	beq.n	8002686 <_strtod_l+0xb6e>
 80025b0:	a309      	add	r3, pc, #36	@ (adr r3, 80025d8 <_strtod_l+0xac0>)
 80025b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025b6:	f7fe f9f9 	bl	80009ac <__aeabi_dcmplt>
 80025ba:	2800      	cmp	r0, #0
 80025bc:	f47f acd6 	bne.w	8001f6c <_strtod_l+0x454>
 80025c0:	a307      	add	r3, pc, #28	@ (adr r3, 80025e0 <_strtod_l+0xac8>)
 80025c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025c6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80025ca:	f7fe fa0d 	bl	80009e8 <__aeabi_dcmpgt>
 80025ce:	2800      	cmp	r0, #0
 80025d0:	d093      	beq.n	80024fa <_strtod_l+0x9e2>
 80025d2:	e4cb      	b.n	8001f6c <_strtod_l+0x454>
 80025d4:	f3af 8000 	nop.w
 80025d8:	94a03595 	.word	0x94a03595
 80025dc:	3fdfffff 	.word	0x3fdfffff
 80025e0:	35afe535 	.word	0x35afe535
 80025e4:	3fe00000 	.word	0x3fe00000
 80025e8:	39500000 	.word	0x39500000
 80025ec:	7ff00000 	.word	0x7ff00000
 80025f0:	000fffff 	.word	0x000fffff
 80025f4:	7fefffff 	.word	0x7fefffff
 80025f8:	3ff00000 	.word	0x3ff00000
 80025fc:	3fe00000 	.word	0x3fe00000
 8002600:	7fe00000 	.word	0x7fe00000
 8002604:	7c9fffff 	.word	0x7c9fffff
 8002608:	bff00000 	.word	0xbff00000
 800260c:	9b08      	ldr	r3, [sp, #32]
 800260e:	b323      	cbz	r3, 800265a <_strtod_l+0xb42>
 8002610:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8002614:	d821      	bhi.n	800265a <_strtod_l+0xb42>
 8002616:	a328      	add	r3, pc, #160	@ (adr r3, 80026b8 <_strtod_l+0xba0>)
 8002618:	e9d3 2300 	ldrd	r2, r3, [r3]
 800261c:	4630      	mov	r0, r6
 800261e:	4639      	mov	r1, r7
 8002620:	f7fe f9ce 	bl	80009c0 <__aeabi_dcmple>
 8002624:	b1a0      	cbz	r0, 8002650 <_strtod_l+0xb38>
 8002626:	4639      	mov	r1, r7
 8002628:	4630      	mov	r0, r6
 800262a:	f7fe f9e7 	bl	80009fc <__aeabi_d2uiz>
 800262e:	2801      	cmp	r0, #1
 8002630:	bf38      	it	cc
 8002632:	2001      	movcc	r0, #1
 8002634:	f7fd fece 	bl	80003d4 <__aeabi_ui2d>
 8002638:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800263a:	4606      	mov	r6, r0
 800263c:	460f      	mov	r7, r1
 800263e:	b9fb      	cbnz	r3, 8002680 <_strtod_l+0xb68>
 8002640:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8002644:	9014      	str	r0, [sp, #80]	@ 0x50
 8002646:	9315      	str	r3, [sp, #84]	@ 0x54
 8002648:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800264c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8002650:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8002652:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8002656:	1b5b      	subs	r3, r3, r5
 8002658:	9311      	str	r3, [sp, #68]	@ 0x44
 800265a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800265e:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8002662:	f001 f993 	bl	800398c <__ulp>
 8002666:	4602      	mov	r2, r0
 8002668:	460b      	mov	r3, r1
 800266a:	4650      	mov	r0, sl
 800266c:	4659      	mov	r1, fp
 800266e:	f7fd ff2b 	bl	80004c8 <__aeabi_dmul>
 8002672:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8002676:	f7fd fd71 	bl	800015c <__adddf3>
 800267a:	4682      	mov	sl, r0
 800267c:	468b      	mov	fp, r1
 800267e:	e775      	b.n	800256c <_strtod_l+0xa54>
 8002680:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8002684:	e7e0      	b.n	8002648 <_strtod_l+0xb30>
 8002686:	a30e      	add	r3, pc, #56	@ (adr r3, 80026c0 <_strtod_l+0xba8>)
 8002688:	e9d3 2300 	ldrd	r2, r3, [r3]
 800268c:	f7fe f98e 	bl	80009ac <__aeabi_dcmplt>
 8002690:	e79d      	b.n	80025ce <_strtod_l+0xab6>
 8002692:	2300      	movs	r3, #0
 8002694:	930e      	str	r3, [sp, #56]	@ 0x38
 8002696:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002698:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800269a:	6013      	str	r3, [r2, #0]
 800269c:	f7ff ba79 	b.w	8001b92 <_strtod_l+0x7a>
 80026a0:	2a65      	cmp	r2, #101	@ 0x65
 80026a2:	f43f ab72 	beq.w	8001d8a <_strtod_l+0x272>
 80026a6:	2a45      	cmp	r2, #69	@ 0x45
 80026a8:	f43f ab6f 	beq.w	8001d8a <_strtod_l+0x272>
 80026ac:	2301      	movs	r3, #1
 80026ae:	f7ff bbaa 	b.w	8001e06 <_strtod_l+0x2ee>
 80026b2:	bf00      	nop
 80026b4:	f3af 8000 	nop.w
 80026b8:	ffc00000 	.word	0xffc00000
 80026bc:	41dfffff 	.word	0x41dfffff
 80026c0:	94a03595 	.word	0x94a03595
 80026c4:	3fcfffff 	.word	0x3fcfffff

080026c8 <strtod>:
 80026c8:	460a      	mov	r2, r1
 80026ca:	4601      	mov	r1, r0
 80026cc:	4802      	ldr	r0, [pc, #8]	@ (80026d8 <strtod+0x10>)
 80026ce:	4b03      	ldr	r3, [pc, #12]	@ (80026dc <strtod+0x14>)
 80026d0:	6800      	ldr	r0, [r0, #0]
 80026d2:	f7ff ba21 	b.w	8001b18 <_strtod_l>
 80026d6:	bf00      	nop
 80026d8:	2000017c 	.word	0x2000017c
 80026dc:	20000010 	.word	0x20000010

080026e0 <std>:
 80026e0:	2300      	movs	r3, #0
 80026e2:	b510      	push	{r4, lr}
 80026e4:	4604      	mov	r4, r0
 80026e6:	e9c0 3300 	strd	r3, r3, [r0]
 80026ea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80026ee:	6083      	str	r3, [r0, #8]
 80026f0:	8181      	strh	r1, [r0, #12]
 80026f2:	6643      	str	r3, [r0, #100]	@ 0x64
 80026f4:	81c2      	strh	r2, [r0, #14]
 80026f6:	6183      	str	r3, [r0, #24]
 80026f8:	4619      	mov	r1, r3
 80026fa:	2208      	movs	r2, #8
 80026fc:	305c      	adds	r0, #92	@ 0x5c
 80026fe:	f000 f8f4 	bl	80028ea <memset>
 8002702:	4b0d      	ldr	r3, [pc, #52]	@ (8002738 <std+0x58>)
 8002704:	6224      	str	r4, [r4, #32]
 8002706:	6263      	str	r3, [r4, #36]	@ 0x24
 8002708:	4b0c      	ldr	r3, [pc, #48]	@ (800273c <std+0x5c>)
 800270a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800270c:	4b0c      	ldr	r3, [pc, #48]	@ (8002740 <std+0x60>)
 800270e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002710:	4b0c      	ldr	r3, [pc, #48]	@ (8002744 <std+0x64>)
 8002712:	6323      	str	r3, [r4, #48]	@ 0x30
 8002714:	4b0c      	ldr	r3, [pc, #48]	@ (8002748 <std+0x68>)
 8002716:	429c      	cmp	r4, r3
 8002718:	d006      	beq.n	8002728 <std+0x48>
 800271a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800271e:	4294      	cmp	r4, r2
 8002720:	d002      	beq.n	8002728 <std+0x48>
 8002722:	33d0      	adds	r3, #208	@ 0xd0
 8002724:	429c      	cmp	r4, r3
 8002726:	d105      	bne.n	8002734 <std+0x54>
 8002728:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800272c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002730:	f000 b966 	b.w	8002a00 <__retarget_lock_init_recursive>
 8002734:	bd10      	pop	{r4, pc}
 8002736:	bf00      	nop
 8002738:	08002865 	.word	0x08002865
 800273c:	08002887 	.word	0x08002887
 8002740:	080028bf 	.word	0x080028bf
 8002744:	080028e3 	.word	0x080028e3
 8002748:	20000264 	.word	0x20000264

0800274c <stdio_exit_handler>:
 800274c:	4a02      	ldr	r2, [pc, #8]	@ (8002758 <stdio_exit_handler+0xc>)
 800274e:	4903      	ldr	r1, [pc, #12]	@ (800275c <stdio_exit_handler+0x10>)
 8002750:	4803      	ldr	r0, [pc, #12]	@ (8002760 <stdio_exit_handler+0x14>)
 8002752:	f000 b869 	b.w	8002828 <_fwalk_sglue>
 8002756:	bf00      	nop
 8002758:	20000004 	.word	0x20000004
 800275c:	08003d11 	.word	0x08003d11
 8002760:	20000180 	.word	0x20000180

08002764 <cleanup_stdio>:
 8002764:	6841      	ldr	r1, [r0, #4]
 8002766:	4b0c      	ldr	r3, [pc, #48]	@ (8002798 <cleanup_stdio+0x34>)
 8002768:	b510      	push	{r4, lr}
 800276a:	4299      	cmp	r1, r3
 800276c:	4604      	mov	r4, r0
 800276e:	d001      	beq.n	8002774 <cleanup_stdio+0x10>
 8002770:	f001 face 	bl	8003d10 <_fflush_r>
 8002774:	68a1      	ldr	r1, [r4, #8]
 8002776:	4b09      	ldr	r3, [pc, #36]	@ (800279c <cleanup_stdio+0x38>)
 8002778:	4299      	cmp	r1, r3
 800277a:	d002      	beq.n	8002782 <cleanup_stdio+0x1e>
 800277c:	4620      	mov	r0, r4
 800277e:	f001 fac7 	bl	8003d10 <_fflush_r>
 8002782:	68e1      	ldr	r1, [r4, #12]
 8002784:	4b06      	ldr	r3, [pc, #24]	@ (80027a0 <cleanup_stdio+0x3c>)
 8002786:	4299      	cmp	r1, r3
 8002788:	d004      	beq.n	8002794 <cleanup_stdio+0x30>
 800278a:	4620      	mov	r0, r4
 800278c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002790:	f001 babe 	b.w	8003d10 <_fflush_r>
 8002794:	bd10      	pop	{r4, pc}
 8002796:	bf00      	nop
 8002798:	20000264 	.word	0x20000264
 800279c:	200002cc 	.word	0x200002cc
 80027a0:	20000334 	.word	0x20000334

080027a4 <global_stdio_init.part.0>:
 80027a4:	b510      	push	{r4, lr}
 80027a6:	4b0b      	ldr	r3, [pc, #44]	@ (80027d4 <global_stdio_init.part.0+0x30>)
 80027a8:	4c0b      	ldr	r4, [pc, #44]	@ (80027d8 <global_stdio_init.part.0+0x34>)
 80027aa:	4a0c      	ldr	r2, [pc, #48]	@ (80027dc <global_stdio_init.part.0+0x38>)
 80027ac:	4620      	mov	r0, r4
 80027ae:	601a      	str	r2, [r3, #0]
 80027b0:	2104      	movs	r1, #4
 80027b2:	2200      	movs	r2, #0
 80027b4:	f7ff ff94 	bl	80026e0 <std>
 80027b8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80027bc:	2201      	movs	r2, #1
 80027be:	2109      	movs	r1, #9
 80027c0:	f7ff ff8e 	bl	80026e0 <std>
 80027c4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80027c8:	2202      	movs	r2, #2
 80027ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80027ce:	2112      	movs	r1, #18
 80027d0:	f7ff bf86 	b.w	80026e0 <std>
 80027d4:	2000039c 	.word	0x2000039c
 80027d8:	20000264 	.word	0x20000264
 80027dc:	0800274d 	.word	0x0800274d

080027e0 <__sfp_lock_acquire>:
 80027e0:	4801      	ldr	r0, [pc, #4]	@ (80027e8 <__sfp_lock_acquire+0x8>)
 80027e2:	f000 b90e 	b.w	8002a02 <__retarget_lock_acquire_recursive>
 80027e6:	bf00      	nop
 80027e8:	200003a5 	.word	0x200003a5

080027ec <__sfp_lock_release>:
 80027ec:	4801      	ldr	r0, [pc, #4]	@ (80027f4 <__sfp_lock_release+0x8>)
 80027ee:	f000 b909 	b.w	8002a04 <__retarget_lock_release_recursive>
 80027f2:	bf00      	nop
 80027f4:	200003a5 	.word	0x200003a5

080027f8 <__sinit>:
 80027f8:	b510      	push	{r4, lr}
 80027fa:	4604      	mov	r4, r0
 80027fc:	f7ff fff0 	bl	80027e0 <__sfp_lock_acquire>
 8002800:	6a23      	ldr	r3, [r4, #32]
 8002802:	b11b      	cbz	r3, 800280c <__sinit+0x14>
 8002804:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002808:	f7ff bff0 	b.w	80027ec <__sfp_lock_release>
 800280c:	4b04      	ldr	r3, [pc, #16]	@ (8002820 <__sinit+0x28>)
 800280e:	6223      	str	r3, [r4, #32]
 8002810:	4b04      	ldr	r3, [pc, #16]	@ (8002824 <__sinit+0x2c>)
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	2b00      	cmp	r3, #0
 8002816:	d1f5      	bne.n	8002804 <__sinit+0xc>
 8002818:	f7ff ffc4 	bl	80027a4 <global_stdio_init.part.0>
 800281c:	e7f2      	b.n	8002804 <__sinit+0xc>
 800281e:	bf00      	nop
 8002820:	08002765 	.word	0x08002765
 8002824:	2000039c 	.word	0x2000039c

08002828 <_fwalk_sglue>:
 8002828:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800282c:	4607      	mov	r7, r0
 800282e:	4688      	mov	r8, r1
 8002830:	4614      	mov	r4, r2
 8002832:	2600      	movs	r6, #0
 8002834:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002838:	f1b9 0901 	subs.w	r9, r9, #1
 800283c:	d505      	bpl.n	800284a <_fwalk_sglue+0x22>
 800283e:	6824      	ldr	r4, [r4, #0]
 8002840:	2c00      	cmp	r4, #0
 8002842:	d1f7      	bne.n	8002834 <_fwalk_sglue+0xc>
 8002844:	4630      	mov	r0, r6
 8002846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800284a:	89ab      	ldrh	r3, [r5, #12]
 800284c:	2b01      	cmp	r3, #1
 800284e:	d907      	bls.n	8002860 <_fwalk_sglue+0x38>
 8002850:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002854:	3301      	adds	r3, #1
 8002856:	d003      	beq.n	8002860 <_fwalk_sglue+0x38>
 8002858:	4629      	mov	r1, r5
 800285a:	4638      	mov	r0, r7
 800285c:	47c0      	blx	r8
 800285e:	4306      	orrs	r6, r0
 8002860:	3568      	adds	r5, #104	@ 0x68
 8002862:	e7e9      	b.n	8002838 <_fwalk_sglue+0x10>

08002864 <__sread>:
 8002864:	b510      	push	{r4, lr}
 8002866:	460c      	mov	r4, r1
 8002868:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800286c:	f000 f87a 	bl	8002964 <_read_r>
 8002870:	2800      	cmp	r0, #0
 8002872:	bfab      	itete	ge
 8002874:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002876:	89a3      	ldrhlt	r3, [r4, #12]
 8002878:	181b      	addge	r3, r3, r0
 800287a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800287e:	bfac      	ite	ge
 8002880:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002882:	81a3      	strhlt	r3, [r4, #12]
 8002884:	bd10      	pop	{r4, pc}

08002886 <__swrite>:
 8002886:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800288a:	461f      	mov	r7, r3
 800288c:	898b      	ldrh	r3, [r1, #12]
 800288e:	4605      	mov	r5, r0
 8002890:	05db      	lsls	r3, r3, #23
 8002892:	460c      	mov	r4, r1
 8002894:	4616      	mov	r6, r2
 8002896:	d505      	bpl.n	80028a4 <__swrite+0x1e>
 8002898:	2302      	movs	r3, #2
 800289a:	2200      	movs	r2, #0
 800289c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80028a0:	f000 f84e 	bl	8002940 <_lseek_r>
 80028a4:	89a3      	ldrh	r3, [r4, #12]
 80028a6:	4632      	mov	r2, r6
 80028a8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80028ac:	81a3      	strh	r3, [r4, #12]
 80028ae:	4628      	mov	r0, r5
 80028b0:	463b      	mov	r3, r7
 80028b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80028b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80028ba:	f000 b865 	b.w	8002988 <_write_r>

080028be <__sseek>:
 80028be:	b510      	push	{r4, lr}
 80028c0:	460c      	mov	r4, r1
 80028c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80028c6:	f000 f83b 	bl	8002940 <_lseek_r>
 80028ca:	1c43      	adds	r3, r0, #1
 80028cc:	89a3      	ldrh	r3, [r4, #12]
 80028ce:	bf15      	itete	ne
 80028d0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80028d2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80028d6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80028da:	81a3      	strheq	r3, [r4, #12]
 80028dc:	bf18      	it	ne
 80028de:	81a3      	strhne	r3, [r4, #12]
 80028e0:	bd10      	pop	{r4, pc}

080028e2 <__sclose>:
 80028e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80028e6:	f000 b81b 	b.w	8002920 <_close_r>

080028ea <memset>:
 80028ea:	4603      	mov	r3, r0
 80028ec:	4402      	add	r2, r0
 80028ee:	4293      	cmp	r3, r2
 80028f0:	d100      	bne.n	80028f4 <memset+0xa>
 80028f2:	4770      	bx	lr
 80028f4:	f803 1b01 	strb.w	r1, [r3], #1
 80028f8:	e7f9      	b.n	80028ee <memset+0x4>

080028fa <strncmp>:
 80028fa:	b510      	push	{r4, lr}
 80028fc:	b16a      	cbz	r2, 800291a <strncmp+0x20>
 80028fe:	3901      	subs	r1, #1
 8002900:	1884      	adds	r4, r0, r2
 8002902:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002906:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800290a:	429a      	cmp	r2, r3
 800290c:	d103      	bne.n	8002916 <strncmp+0x1c>
 800290e:	42a0      	cmp	r0, r4
 8002910:	d001      	beq.n	8002916 <strncmp+0x1c>
 8002912:	2a00      	cmp	r2, #0
 8002914:	d1f5      	bne.n	8002902 <strncmp+0x8>
 8002916:	1ad0      	subs	r0, r2, r3
 8002918:	bd10      	pop	{r4, pc}
 800291a:	4610      	mov	r0, r2
 800291c:	e7fc      	b.n	8002918 <strncmp+0x1e>
	...

08002920 <_close_r>:
 8002920:	b538      	push	{r3, r4, r5, lr}
 8002922:	2300      	movs	r3, #0
 8002924:	4d05      	ldr	r5, [pc, #20]	@ (800293c <_close_r+0x1c>)
 8002926:	4604      	mov	r4, r0
 8002928:	4608      	mov	r0, r1
 800292a:	602b      	str	r3, [r5, #0]
 800292c:	f7fe fd2b 	bl	8001386 <_close>
 8002930:	1c43      	adds	r3, r0, #1
 8002932:	d102      	bne.n	800293a <_close_r+0x1a>
 8002934:	682b      	ldr	r3, [r5, #0]
 8002936:	b103      	cbz	r3, 800293a <_close_r+0x1a>
 8002938:	6023      	str	r3, [r4, #0]
 800293a:	bd38      	pop	{r3, r4, r5, pc}
 800293c:	200003a0 	.word	0x200003a0

08002940 <_lseek_r>:
 8002940:	b538      	push	{r3, r4, r5, lr}
 8002942:	4604      	mov	r4, r0
 8002944:	4608      	mov	r0, r1
 8002946:	4611      	mov	r1, r2
 8002948:	2200      	movs	r2, #0
 800294a:	4d05      	ldr	r5, [pc, #20]	@ (8002960 <_lseek_r+0x20>)
 800294c:	602a      	str	r2, [r5, #0]
 800294e:	461a      	mov	r2, r3
 8002950:	f7fe fd3d 	bl	80013ce <_lseek>
 8002954:	1c43      	adds	r3, r0, #1
 8002956:	d102      	bne.n	800295e <_lseek_r+0x1e>
 8002958:	682b      	ldr	r3, [r5, #0]
 800295a:	b103      	cbz	r3, 800295e <_lseek_r+0x1e>
 800295c:	6023      	str	r3, [r4, #0]
 800295e:	bd38      	pop	{r3, r4, r5, pc}
 8002960:	200003a0 	.word	0x200003a0

08002964 <_read_r>:
 8002964:	b538      	push	{r3, r4, r5, lr}
 8002966:	4604      	mov	r4, r0
 8002968:	4608      	mov	r0, r1
 800296a:	4611      	mov	r1, r2
 800296c:	2200      	movs	r2, #0
 800296e:	4d05      	ldr	r5, [pc, #20]	@ (8002984 <_read_r+0x20>)
 8002970:	602a      	str	r2, [r5, #0]
 8002972:	461a      	mov	r2, r3
 8002974:	f7fe fcce 	bl	8001314 <_read>
 8002978:	1c43      	adds	r3, r0, #1
 800297a:	d102      	bne.n	8002982 <_read_r+0x1e>
 800297c:	682b      	ldr	r3, [r5, #0]
 800297e:	b103      	cbz	r3, 8002982 <_read_r+0x1e>
 8002980:	6023      	str	r3, [r4, #0]
 8002982:	bd38      	pop	{r3, r4, r5, pc}
 8002984:	200003a0 	.word	0x200003a0

08002988 <_write_r>:
 8002988:	b538      	push	{r3, r4, r5, lr}
 800298a:	4604      	mov	r4, r0
 800298c:	4608      	mov	r0, r1
 800298e:	4611      	mov	r1, r2
 8002990:	2200      	movs	r2, #0
 8002992:	4d05      	ldr	r5, [pc, #20]	@ (80029a8 <_write_r+0x20>)
 8002994:	602a      	str	r2, [r5, #0]
 8002996:	461a      	mov	r2, r3
 8002998:	f7fe fcd9 	bl	800134e <_write>
 800299c:	1c43      	adds	r3, r0, #1
 800299e:	d102      	bne.n	80029a6 <_write_r+0x1e>
 80029a0:	682b      	ldr	r3, [r5, #0]
 80029a2:	b103      	cbz	r3, 80029a6 <_write_r+0x1e>
 80029a4:	6023      	str	r3, [r4, #0]
 80029a6:	bd38      	pop	{r3, r4, r5, pc}
 80029a8:	200003a0 	.word	0x200003a0

080029ac <__errno>:
 80029ac:	4b01      	ldr	r3, [pc, #4]	@ (80029b4 <__errno+0x8>)
 80029ae:	6818      	ldr	r0, [r3, #0]
 80029b0:	4770      	bx	lr
 80029b2:	bf00      	nop
 80029b4:	2000017c 	.word	0x2000017c

080029b8 <__libc_init_array>:
 80029b8:	b570      	push	{r4, r5, r6, lr}
 80029ba:	2600      	movs	r6, #0
 80029bc:	4d0c      	ldr	r5, [pc, #48]	@ (80029f0 <__libc_init_array+0x38>)
 80029be:	4c0d      	ldr	r4, [pc, #52]	@ (80029f4 <__libc_init_array+0x3c>)
 80029c0:	1b64      	subs	r4, r4, r5
 80029c2:	10a4      	asrs	r4, r4, #2
 80029c4:	42a6      	cmp	r6, r4
 80029c6:	d109      	bne.n	80029dc <__libc_init_array+0x24>
 80029c8:	f001 fe66 	bl	8004698 <_init>
 80029cc:	2600      	movs	r6, #0
 80029ce:	4d0a      	ldr	r5, [pc, #40]	@ (80029f8 <__libc_init_array+0x40>)
 80029d0:	4c0a      	ldr	r4, [pc, #40]	@ (80029fc <__libc_init_array+0x44>)
 80029d2:	1b64      	subs	r4, r4, r5
 80029d4:	10a4      	asrs	r4, r4, #2
 80029d6:	42a6      	cmp	r6, r4
 80029d8:	d105      	bne.n	80029e6 <__libc_init_array+0x2e>
 80029da:	bd70      	pop	{r4, r5, r6, pc}
 80029dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80029e0:	4798      	blx	r3
 80029e2:	3601      	adds	r6, #1
 80029e4:	e7ee      	b.n	80029c4 <__libc_init_array+0xc>
 80029e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80029ea:	4798      	blx	r3
 80029ec:	3601      	adds	r6, #1
 80029ee:	e7f2      	b.n	80029d6 <__libc_init_array+0x1e>
 80029f0:	08004a6c 	.word	0x08004a6c
 80029f4:	08004a6c 	.word	0x08004a6c
 80029f8:	08004a6c 	.word	0x08004a6c
 80029fc:	08004a70 	.word	0x08004a70

08002a00 <__retarget_lock_init_recursive>:
 8002a00:	4770      	bx	lr

08002a02 <__retarget_lock_acquire_recursive>:
 8002a02:	4770      	bx	lr

08002a04 <__retarget_lock_release_recursive>:
 8002a04:	4770      	bx	lr

08002a06 <memcpy>:
 8002a06:	440a      	add	r2, r1
 8002a08:	4291      	cmp	r1, r2
 8002a0a:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8002a0e:	d100      	bne.n	8002a12 <memcpy+0xc>
 8002a10:	4770      	bx	lr
 8002a12:	b510      	push	{r4, lr}
 8002a14:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002a18:	4291      	cmp	r1, r2
 8002a1a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002a1e:	d1f9      	bne.n	8002a14 <memcpy+0xe>
 8002a20:	bd10      	pop	{r4, pc}
	...

08002a24 <nan>:
 8002a24:	2000      	movs	r0, #0
 8002a26:	4901      	ldr	r1, [pc, #4]	@ (8002a2c <nan+0x8>)
 8002a28:	4770      	bx	lr
 8002a2a:	bf00      	nop
 8002a2c:	7ff80000 	.word	0x7ff80000

08002a30 <_free_r>:
 8002a30:	b538      	push	{r3, r4, r5, lr}
 8002a32:	4605      	mov	r5, r0
 8002a34:	2900      	cmp	r1, #0
 8002a36:	d040      	beq.n	8002aba <_free_r+0x8a>
 8002a38:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002a3c:	1f0c      	subs	r4, r1, #4
 8002a3e:	2b00      	cmp	r3, #0
 8002a40:	bfb8      	it	lt
 8002a42:	18e4      	addlt	r4, r4, r3
 8002a44:	f000 fc2a 	bl	800329c <__malloc_lock>
 8002a48:	4a1c      	ldr	r2, [pc, #112]	@ (8002abc <_free_r+0x8c>)
 8002a4a:	6813      	ldr	r3, [r2, #0]
 8002a4c:	b933      	cbnz	r3, 8002a5c <_free_r+0x2c>
 8002a4e:	6063      	str	r3, [r4, #4]
 8002a50:	6014      	str	r4, [r2, #0]
 8002a52:	4628      	mov	r0, r5
 8002a54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002a58:	f000 bc26 	b.w	80032a8 <__malloc_unlock>
 8002a5c:	42a3      	cmp	r3, r4
 8002a5e:	d908      	bls.n	8002a72 <_free_r+0x42>
 8002a60:	6820      	ldr	r0, [r4, #0]
 8002a62:	1821      	adds	r1, r4, r0
 8002a64:	428b      	cmp	r3, r1
 8002a66:	bf01      	itttt	eq
 8002a68:	6819      	ldreq	r1, [r3, #0]
 8002a6a:	685b      	ldreq	r3, [r3, #4]
 8002a6c:	1809      	addeq	r1, r1, r0
 8002a6e:	6021      	streq	r1, [r4, #0]
 8002a70:	e7ed      	b.n	8002a4e <_free_r+0x1e>
 8002a72:	461a      	mov	r2, r3
 8002a74:	685b      	ldr	r3, [r3, #4]
 8002a76:	b10b      	cbz	r3, 8002a7c <_free_r+0x4c>
 8002a78:	42a3      	cmp	r3, r4
 8002a7a:	d9fa      	bls.n	8002a72 <_free_r+0x42>
 8002a7c:	6811      	ldr	r1, [r2, #0]
 8002a7e:	1850      	adds	r0, r2, r1
 8002a80:	42a0      	cmp	r0, r4
 8002a82:	d10b      	bne.n	8002a9c <_free_r+0x6c>
 8002a84:	6820      	ldr	r0, [r4, #0]
 8002a86:	4401      	add	r1, r0
 8002a88:	1850      	adds	r0, r2, r1
 8002a8a:	4283      	cmp	r3, r0
 8002a8c:	6011      	str	r1, [r2, #0]
 8002a8e:	d1e0      	bne.n	8002a52 <_free_r+0x22>
 8002a90:	6818      	ldr	r0, [r3, #0]
 8002a92:	685b      	ldr	r3, [r3, #4]
 8002a94:	4408      	add	r0, r1
 8002a96:	6010      	str	r0, [r2, #0]
 8002a98:	6053      	str	r3, [r2, #4]
 8002a9a:	e7da      	b.n	8002a52 <_free_r+0x22>
 8002a9c:	d902      	bls.n	8002aa4 <_free_r+0x74>
 8002a9e:	230c      	movs	r3, #12
 8002aa0:	602b      	str	r3, [r5, #0]
 8002aa2:	e7d6      	b.n	8002a52 <_free_r+0x22>
 8002aa4:	6820      	ldr	r0, [r4, #0]
 8002aa6:	1821      	adds	r1, r4, r0
 8002aa8:	428b      	cmp	r3, r1
 8002aaa:	bf01      	itttt	eq
 8002aac:	6819      	ldreq	r1, [r3, #0]
 8002aae:	685b      	ldreq	r3, [r3, #4]
 8002ab0:	1809      	addeq	r1, r1, r0
 8002ab2:	6021      	streq	r1, [r4, #0]
 8002ab4:	6063      	str	r3, [r4, #4]
 8002ab6:	6054      	str	r4, [r2, #4]
 8002ab8:	e7cb      	b.n	8002a52 <_free_r+0x22>
 8002aba:	bd38      	pop	{r3, r4, r5, pc}
 8002abc:	200003ac 	.word	0x200003ac

08002ac0 <rshift>:
 8002ac0:	6903      	ldr	r3, [r0, #16]
 8002ac2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002ac6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8002aca:	f100 0414 	add.w	r4, r0, #20
 8002ace:	ea4f 1261 	mov.w	r2, r1, asr #5
 8002ad2:	dd46      	ble.n	8002b62 <rshift+0xa2>
 8002ad4:	f011 011f 	ands.w	r1, r1, #31
 8002ad8:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8002adc:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8002ae0:	d10c      	bne.n	8002afc <rshift+0x3c>
 8002ae2:	4629      	mov	r1, r5
 8002ae4:	f100 0710 	add.w	r7, r0, #16
 8002ae8:	42b1      	cmp	r1, r6
 8002aea:	d335      	bcc.n	8002b58 <rshift+0x98>
 8002aec:	1a9b      	subs	r3, r3, r2
 8002aee:	009b      	lsls	r3, r3, #2
 8002af0:	1eea      	subs	r2, r5, #3
 8002af2:	4296      	cmp	r6, r2
 8002af4:	bf38      	it	cc
 8002af6:	2300      	movcc	r3, #0
 8002af8:	4423      	add	r3, r4
 8002afa:	e015      	b.n	8002b28 <rshift+0x68>
 8002afc:	46a1      	mov	r9, r4
 8002afe:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8002b02:	f1c1 0820 	rsb	r8, r1, #32
 8002b06:	40cf      	lsrs	r7, r1
 8002b08:	f105 0e04 	add.w	lr, r5, #4
 8002b0c:	4576      	cmp	r6, lr
 8002b0e:	46f4      	mov	ip, lr
 8002b10:	d816      	bhi.n	8002b40 <rshift+0x80>
 8002b12:	1a9a      	subs	r2, r3, r2
 8002b14:	0092      	lsls	r2, r2, #2
 8002b16:	3a04      	subs	r2, #4
 8002b18:	3501      	adds	r5, #1
 8002b1a:	42ae      	cmp	r6, r5
 8002b1c:	bf38      	it	cc
 8002b1e:	2200      	movcc	r2, #0
 8002b20:	18a3      	adds	r3, r4, r2
 8002b22:	50a7      	str	r7, [r4, r2]
 8002b24:	b107      	cbz	r7, 8002b28 <rshift+0x68>
 8002b26:	3304      	adds	r3, #4
 8002b28:	42a3      	cmp	r3, r4
 8002b2a:	eba3 0204 	sub.w	r2, r3, r4
 8002b2e:	bf08      	it	eq
 8002b30:	2300      	moveq	r3, #0
 8002b32:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8002b36:	6102      	str	r2, [r0, #16]
 8002b38:	bf08      	it	eq
 8002b3a:	6143      	streq	r3, [r0, #20]
 8002b3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002b40:	f8dc c000 	ldr.w	ip, [ip]
 8002b44:	fa0c fc08 	lsl.w	ip, ip, r8
 8002b48:	ea4c 0707 	orr.w	r7, ip, r7
 8002b4c:	f849 7b04 	str.w	r7, [r9], #4
 8002b50:	f85e 7b04 	ldr.w	r7, [lr], #4
 8002b54:	40cf      	lsrs	r7, r1
 8002b56:	e7d9      	b.n	8002b0c <rshift+0x4c>
 8002b58:	f851 cb04 	ldr.w	ip, [r1], #4
 8002b5c:	f847 cf04 	str.w	ip, [r7, #4]!
 8002b60:	e7c2      	b.n	8002ae8 <rshift+0x28>
 8002b62:	4623      	mov	r3, r4
 8002b64:	e7e0      	b.n	8002b28 <rshift+0x68>

08002b66 <__hexdig_fun>:
 8002b66:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8002b6a:	2b09      	cmp	r3, #9
 8002b6c:	d802      	bhi.n	8002b74 <__hexdig_fun+0xe>
 8002b6e:	3820      	subs	r0, #32
 8002b70:	b2c0      	uxtb	r0, r0
 8002b72:	4770      	bx	lr
 8002b74:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8002b78:	2b05      	cmp	r3, #5
 8002b7a:	d801      	bhi.n	8002b80 <__hexdig_fun+0x1a>
 8002b7c:	3847      	subs	r0, #71	@ 0x47
 8002b7e:	e7f7      	b.n	8002b70 <__hexdig_fun+0xa>
 8002b80:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8002b84:	2b05      	cmp	r3, #5
 8002b86:	d801      	bhi.n	8002b8c <__hexdig_fun+0x26>
 8002b88:	3827      	subs	r0, #39	@ 0x27
 8002b8a:	e7f1      	b.n	8002b70 <__hexdig_fun+0xa>
 8002b8c:	2000      	movs	r0, #0
 8002b8e:	4770      	bx	lr

08002b90 <__gethex>:
 8002b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b94:	468a      	mov	sl, r1
 8002b96:	4690      	mov	r8, r2
 8002b98:	b085      	sub	sp, #20
 8002b9a:	9302      	str	r3, [sp, #8]
 8002b9c:	680b      	ldr	r3, [r1, #0]
 8002b9e:	9001      	str	r0, [sp, #4]
 8002ba0:	1c9c      	adds	r4, r3, #2
 8002ba2:	46a1      	mov	r9, r4
 8002ba4:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002ba8:	2830      	cmp	r0, #48	@ 0x30
 8002baa:	d0fa      	beq.n	8002ba2 <__gethex+0x12>
 8002bac:	eba9 0303 	sub.w	r3, r9, r3
 8002bb0:	f1a3 0b02 	sub.w	fp, r3, #2
 8002bb4:	f7ff ffd7 	bl	8002b66 <__hexdig_fun>
 8002bb8:	4605      	mov	r5, r0
 8002bba:	2800      	cmp	r0, #0
 8002bbc:	d168      	bne.n	8002c90 <__gethex+0x100>
 8002bbe:	2201      	movs	r2, #1
 8002bc0:	4648      	mov	r0, r9
 8002bc2:	499f      	ldr	r1, [pc, #636]	@ (8002e40 <__gethex+0x2b0>)
 8002bc4:	f7ff fe99 	bl	80028fa <strncmp>
 8002bc8:	4607      	mov	r7, r0
 8002bca:	2800      	cmp	r0, #0
 8002bcc:	d167      	bne.n	8002c9e <__gethex+0x10e>
 8002bce:	f899 0001 	ldrb.w	r0, [r9, #1]
 8002bd2:	4626      	mov	r6, r4
 8002bd4:	f7ff ffc7 	bl	8002b66 <__hexdig_fun>
 8002bd8:	2800      	cmp	r0, #0
 8002bda:	d062      	beq.n	8002ca2 <__gethex+0x112>
 8002bdc:	4623      	mov	r3, r4
 8002bde:	7818      	ldrb	r0, [r3, #0]
 8002be0:	4699      	mov	r9, r3
 8002be2:	2830      	cmp	r0, #48	@ 0x30
 8002be4:	f103 0301 	add.w	r3, r3, #1
 8002be8:	d0f9      	beq.n	8002bde <__gethex+0x4e>
 8002bea:	f7ff ffbc 	bl	8002b66 <__hexdig_fun>
 8002bee:	fab0 f580 	clz	r5, r0
 8002bf2:	f04f 0b01 	mov.w	fp, #1
 8002bf6:	096d      	lsrs	r5, r5, #5
 8002bf8:	464a      	mov	r2, r9
 8002bfa:	4616      	mov	r6, r2
 8002bfc:	7830      	ldrb	r0, [r6, #0]
 8002bfe:	3201      	adds	r2, #1
 8002c00:	f7ff ffb1 	bl	8002b66 <__hexdig_fun>
 8002c04:	2800      	cmp	r0, #0
 8002c06:	d1f8      	bne.n	8002bfa <__gethex+0x6a>
 8002c08:	2201      	movs	r2, #1
 8002c0a:	4630      	mov	r0, r6
 8002c0c:	498c      	ldr	r1, [pc, #560]	@ (8002e40 <__gethex+0x2b0>)
 8002c0e:	f7ff fe74 	bl	80028fa <strncmp>
 8002c12:	2800      	cmp	r0, #0
 8002c14:	d13f      	bne.n	8002c96 <__gethex+0x106>
 8002c16:	b944      	cbnz	r4, 8002c2a <__gethex+0x9a>
 8002c18:	1c74      	adds	r4, r6, #1
 8002c1a:	4622      	mov	r2, r4
 8002c1c:	4616      	mov	r6, r2
 8002c1e:	7830      	ldrb	r0, [r6, #0]
 8002c20:	3201      	adds	r2, #1
 8002c22:	f7ff ffa0 	bl	8002b66 <__hexdig_fun>
 8002c26:	2800      	cmp	r0, #0
 8002c28:	d1f8      	bne.n	8002c1c <__gethex+0x8c>
 8002c2a:	1ba4      	subs	r4, r4, r6
 8002c2c:	00a7      	lsls	r7, r4, #2
 8002c2e:	7833      	ldrb	r3, [r6, #0]
 8002c30:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8002c34:	2b50      	cmp	r3, #80	@ 0x50
 8002c36:	d13e      	bne.n	8002cb6 <__gethex+0x126>
 8002c38:	7873      	ldrb	r3, [r6, #1]
 8002c3a:	2b2b      	cmp	r3, #43	@ 0x2b
 8002c3c:	d033      	beq.n	8002ca6 <__gethex+0x116>
 8002c3e:	2b2d      	cmp	r3, #45	@ 0x2d
 8002c40:	d034      	beq.n	8002cac <__gethex+0x11c>
 8002c42:	2400      	movs	r4, #0
 8002c44:	1c71      	adds	r1, r6, #1
 8002c46:	7808      	ldrb	r0, [r1, #0]
 8002c48:	f7ff ff8d 	bl	8002b66 <__hexdig_fun>
 8002c4c:	1e43      	subs	r3, r0, #1
 8002c4e:	b2db      	uxtb	r3, r3
 8002c50:	2b18      	cmp	r3, #24
 8002c52:	d830      	bhi.n	8002cb6 <__gethex+0x126>
 8002c54:	f1a0 0210 	sub.w	r2, r0, #16
 8002c58:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8002c5c:	f7ff ff83 	bl	8002b66 <__hexdig_fun>
 8002c60:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 8002c64:	fa5f fc8c 	uxtb.w	ip, ip
 8002c68:	f1bc 0f18 	cmp.w	ip, #24
 8002c6c:	f04f 030a 	mov.w	r3, #10
 8002c70:	d91e      	bls.n	8002cb0 <__gethex+0x120>
 8002c72:	b104      	cbz	r4, 8002c76 <__gethex+0xe6>
 8002c74:	4252      	negs	r2, r2
 8002c76:	4417      	add	r7, r2
 8002c78:	f8ca 1000 	str.w	r1, [sl]
 8002c7c:	b1ed      	cbz	r5, 8002cba <__gethex+0x12a>
 8002c7e:	f1bb 0f00 	cmp.w	fp, #0
 8002c82:	bf0c      	ite	eq
 8002c84:	2506      	moveq	r5, #6
 8002c86:	2500      	movne	r5, #0
 8002c88:	4628      	mov	r0, r5
 8002c8a:	b005      	add	sp, #20
 8002c8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c90:	2500      	movs	r5, #0
 8002c92:	462c      	mov	r4, r5
 8002c94:	e7b0      	b.n	8002bf8 <__gethex+0x68>
 8002c96:	2c00      	cmp	r4, #0
 8002c98:	d1c7      	bne.n	8002c2a <__gethex+0x9a>
 8002c9a:	4627      	mov	r7, r4
 8002c9c:	e7c7      	b.n	8002c2e <__gethex+0x9e>
 8002c9e:	464e      	mov	r6, r9
 8002ca0:	462f      	mov	r7, r5
 8002ca2:	2501      	movs	r5, #1
 8002ca4:	e7c3      	b.n	8002c2e <__gethex+0x9e>
 8002ca6:	2400      	movs	r4, #0
 8002ca8:	1cb1      	adds	r1, r6, #2
 8002caa:	e7cc      	b.n	8002c46 <__gethex+0xb6>
 8002cac:	2401      	movs	r4, #1
 8002cae:	e7fb      	b.n	8002ca8 <__gethex+0x118>
 8002cb0:	fb03 0002 	mla	r0, r3, r2, r0
 8002cb4:	e7ce      	b.n	8002c54 <__gethex+0xc4>
 8002cb6:	4631      	mov	r1, r6
 8002cb8:	e7de      	b.n	8002c78 <__gethex+0xe8>
 8002cba:	4629      	mov	r1, r5
 8002cbc:	eba6 0309 	sub.w	r3, r6, r9
 8002cc0:	3b01      	subs	r3, #1
 8002cc2:	2b07      	cmp	r3, #7
 8002cc4:	dc0a      	bgt.n	8002cdc <__gethex+0x14c>
 8002cc6:	9801      	ldr	r0, [sp, #4]
 8002cc8:	f000 faf4 	bl	80032b4 <_Balloc>
 8002ccc:	4604      	mov	r4, r0
 8002cce:	b940      	cbnz	r0, 8002ce2 <__gethex+0x152>
 8002cd0:	4602      	mov	r2, r0
 8002cd2:	21e4      	movs	r1, #228	@ 0xe4
 8002cd4:	4b5b      	ldr	r3, [pc, #364]	@ (8002e44 <__gethex+0x2b4>)
 8002cd6:	485c      	ldr	r0, [pc, #368]	@ (8002e48 <__gethex+0x2b8>)
 8002cd8:	f001 f852 	bl	8003d80 <__assert_func>
 8002cdc:	3101      	adds	r1, #1
 8002cde:	105b      	asrs	r3, r3, #1
 8002ce0:	e7ef      	b.n	8002cc2 <__gethex+0x132>
 8002ce2:	2300      	movs	r3, #0
 8002ce4:	f100 0a14 	add.w	sl, r0, #20
 8002ce8:	4655      	mov	r5, sl
 8002cea:	469b      	mov	fp, r3
 8002cec:	45b1      	cmp	r9, r6
 8002cee:	d337      	bcc.n	8002d60 <__gethex+0x1d0>
 8002cf0:	f845 bb04 	str.w	fp, [r5], #4
 8002cf4:	eba5 050a 	sub.w	r5, r5, sl
 8002cf8:	10ad      	asrs	r5, r5, #2
 8002cfa:	6125      	str	r5, [r4, #16]
 8002cfc:	4658      	mov	r0, fp
 8002cfe:	f000 fbcb 	bl	8003498 <__hi0bits>
 8002d02:	016d      	lsls	r5, r5, #5
 8002d04:	f8d8 6000 	ldr.w	r6, [r8]
 8002d08:	1a2d      	subs	r5, r5, r0
 8002d0a:	42b5      	cmp	r5, r6
 8002d0c:	dd54      	ble.n	8002db8 <__gethex+0x228>
 8002d0e:	1bad      	subs	r5, r5, r6
 8002d10:	4629      	mov	r1, r5
 8002d12:	4620      	mov	r0, r4
 8002d14:	f000 ff4d 	bl	8003bb2 <__any_on>
 8002d18:	4681      	mov	r9, r0
 8002d1a:	b178      	cbz	r0, 8002d3c <__gethex+0x1ac>
 8002d1c:	f04f 0901 	mov.w	r9, #1
 8002d20:	1e6b      	subs	r3, r5, #1
 8002d22:	1159      	asrs	r1, r3, #5
 8002d24:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8002d28:	f003 021f 	and.w	r2, r3, #31
 8002d2c:	fa09 f202 	lsl.w	r2, r9, r2
 8002d30:	420a      	tst	r2, r1
 8002d32:	d003      	beq.n	8002d3c <__gethex+0x1ac>
 8002d34:	454b      	cmp	r3, r9
 8002d36:	dc36      	bgt.n	8002da6 <__gethex+0x216>
 8002d38:	f04f 0902 	mov.w	r9, #2
 8002d3c:	4629      	mov	r1, r5
 8002d3e:	4620      	mov	r0, r4
 8002d40:	f7ff febe 	bl	8002ac0 <rshift>
 8002d44:	442f      	add	r7, r5
 8002d46:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8002d4a:	42bb      	cmp	r3, r7
 8002d4c:	da42      	bge.n	8002dd4 <__gethex+0x244>
 8002d4e:	4621      	mov	r1, r4
 8002d50:	9801      	ldr	r0, [sp, #4]
 8002d52:	f000 faef 	bl	8003334 <_Bfree>
 8002d56:	2300      	movs	r3, #0
 8002d58:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8002d5a:	25a3      	movs	r5, #163	@ 0xa3
 8002d5c:	6013      	str	r3, [r2, #0]
 8002d5e:	e793      	b.n	8002c88 <__gethex+0xf8>
 8002d60:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8002d64:	2a2e      	cmp	r2, #46	@ 0x2e
 8002d66:	d012      	beq.n	8002d8e <__gethex+0x1fe>
 8002d68:	2b20      	cmp	r3, #32
 8002d6a:	d104      	bne.n	8002d76 <__gethex+0x1e6>
 8002d6c:	f845 bb04 	str.w	fp, [r5], #4
 8002d70:	f04f 0b00 	mov.w	fp, #0
 8002d74:	465b      	mov	r3, fp
 8002d76:	7830      	ldrb	r0, [r6, #0]
 8002d78:	9303      	str	r3, [sp, #12]
 8002d7a:	f7ff fef4 	bl	8002b66 <__hexdig_fun>
 8002d7e:	9b03      	ldr	r3, [sp, #12]
 8002d80:	f000 000f 	and.w	r0, r0, #15
 8002d84:	4098      	lsls	r0, r3
 8002d86:	ea4b 0b00 	orr.w	fp, fp, r0
 8002d8a:	3304      	adds	r3, #4
 8002d8c:	e7ae      	b.n	8002cec <__gethex+0x15c>
 8002d8e:	45b1      	cmp	r9, r6
 8002d90:	d8ea      	bhi.n	8002d68 <__gethex+0x1d8>
 8002d92:	2201      	movs	r2, #1
 8002d94:	4630      	mov	r0, r6
 8002d96:	492a      	ldr	r1, [pc, #168]	@ (8002e40 <__gethex+0x2b0>)
 8002d98:	9303      	str	r3, [sp, #12]
 8002d9a:	f7ff fdae 	bl	80028fa <strncmp>
 8002d9e:	9b03      	ldr	r3, [sp, #12]
 8002da0:	2800      	cmp	r0, #0
 8002da2:	d1e1      	bne.n	8002d68 <__gethex+0x1d8>
 8002da4:	e7a2      	b.n	8002cec <__gethex+0x15c>
 8002da6:	4620      	mov	r0, r4
 8002da8:	1ea9      	subs	r1, r5, #2
 8002daa:	f000 ff02 	bl	8003bb2 <__any_on>
 8002dae:	2800      	cmp	r0, #0
 8002db0:	d0c2      	beq.n	8002d38 <__gethex+0x1a8>
 8002db2:	f04f 0903 	mov.w	r9, #3
 8002db6:	e7c1      	b.n	8002d3c <__gethex+0x1ac>
 8002db8:	da09      	bge.n	8002dce <__gethex+0x23e>
 8002dba:	1b75      	subs	r5, r6, r5
 8002dbc:	4621      	mov	r1, r4
 8002dbe:	462a      	mov	r2, r5
 8002dc0:	9801      	ldr	r0, [sp, #4]
 8002dc2:	f000 fcc7 	bl	8003754 <__lshift>
 8002dc6:	4604      	mov	r4, r0
 8002dc8:	1b7f      	subs	r7, r7, r5
 8002dca:	f100 0a14 	add.w	sl, r0, #20
 8002dce:	f04f 0900 	mov.w	r9, #0
 8002dd2:	e7b8      	b.n	8002d46 <__gethex+0x1b6>
 8002dd4:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8002dd8:	42bd      	cmp	r5, r7
 8002dda:	dd6f      	ble.n	8002ebc <__gethex+0x32c>
 8002ddc:	1bed      	subs	r5, r5, r7
 8002dde:	42ae      	cmp	r6, r5
 8002de0:	dc34      	bgt.n	8002e4c <__gethex+0x2bc>
 8002de2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8002de6:	2b02      	cmp	r3, #2
 8002de8:	d022      	beq.n	8002e30 <__gethex+0x2a0>
 8002dea:	2b03      	cmp	r3, #3
 8002dec:	d024      	beq.n	8002e38 <__gethex+0x2a8>
 8002dee:	2b01      	cmp	r3, #1
 8002df0:	d115      	bne.n	8002e1e <__gethex+0x28e>
 8002df2:	42ae      	cmp	r6, r5
 8002df4:	d113      	bne.n	8002e1e <__gethex+0x28e>
 8002df6:	2e01      	cmp	r6, #1
 8002df8:	d10b      	bne.n	8002e12 <__gethex+0x282>
 8002dfa:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002dfe:	9a02      	ldr	r2, [sp, #8]
 8002e00:	2562      	movs	r5, #98	@ 0x62
 8002e02:	6013      	str	r3, [r2, #0]
 8002e04:	2301      	movs	r3, #1
 8002e06:	6123      	str	r3, [r4, #16]
 8002e08:	f8ca 3000 	str.w	r3, [sl]
 8002e0c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002e0e:	601c      	str	r4, [r3, #0]
 8002e10:	e73a      	b.n	8002c88 <__gethex+0xf8>
 8002e12:	4620      	mov	r0, r4
 8002e14:	1e71      	subs	r1, r6, #1
 8002e16:	f000 fecc 	bl	8003bb2 <__any_on>
 8002e1a:	2800      	cmp	r0, #0
 8002e1c:	d1ed      	bne.n	8002dfa <__gethex+0x26a>
 8002e1e:	4621      	mov	r1, r4
 8002e20:	9801      	ldr	r0, [sp, #4]
 8002e22:	f000 fa87 	bl	8003334 <_Bfree>
 8002e26:	2300      	movs	r3, #0
 8002e28:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8002e2a:	2550      	movs	r5, #80	@ 0x50
 8002e2c:	6013      	str	r3, [r2, #0]
 8002e2e:	e72b      	b.n	8002c88 <__gethex+0xf8>
 8002e30:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d1f3      	bne.n	8002e1e <__gethex+0x28e>
 8002e36:	e7e0      	b.n	8002dfa <__gethex+0x26a>
 8002e38:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002e3a:	2b00      	cmp	r3, #0
 8002e3c:	d1dd      	bne.n	8002dfa <__gethex+0x26a>
 8002e3e:	e7ee      	b.n	8002e1e <__gethex+0x28e>
 8002e40:	080046b0 	.word	0x080046b0
 8002e44:	080046c6 	.word	0x080046c6
 8002e48:	080046d7 	.word	0x080046d7
 8002e4c:	1e6f      	subs	r7, r5, #1
 8002e4e:	f1b9 0f00 	cmp.w	r9, #0
 8002e52:	d130      	bne.n	8002eb6 <__gethex+0x326>
 8002e54:	b127      	cbz	r7, 8002e60 <__gethex+0x2d0>
 8002e56:	4639      	mov	r1, r7
 8002e58:	4620      	mov	r0, r4
 8002e5a:	f000 feaa 	bl	8003bb2 <__any_on>
 8002e5e:	4681      	mov	r9, r0
 8002e60:	2301      	movs	r3, #1
 8002e62:	4629      	mov	r1, r5
 8002e64:	1b76      	subs	r6, r6, r5
 8002e66:	2502      	movs	r5, #2
 8002e68:	117a      	asrs	r2, r7, #5
 8002e6a:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8002e6e:	f007 071f 	and.w	r7, r7, #31
 8002e72:	40bb      	lsls	r3, r7
 8002e74:	4213      	tst	r3, r2
 8002e76:	4620      	mov	r0, r4
 8002e78:	bf18      	it	ne
 8002e7a:	f049 0902 	orrne.w	r9, r9, #2
 8002e7e:	f7ff fe1f 	bl	8002ac0 <rshift>
 8002e82:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8002e86:	f1b9 0f00 	cmp.w	r9, #0
 8002e8a:	d047      	beq.n	8002f1c <__gethex+0x38c>
 8002e8c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8002e90:	2b02      	cmp	r3, #2
 8002e92:	d015      	beq.n	8002ec0 <__gethex+0x330>
 8002e94:	2b03      	cmp	r3, #3
 8002e96:	d017      	beq.n	8002ec8 <__gethex+0x338>
 8002e98:	2b01      	cmp	r3, #1
 8002e9a:	d109      	bne.n	8002eb0 <__gethex+0x320>
 8002e9c:	f019 0f02 	tst.w	r9, #2
 8002ea0:	d006      	beq.n	8002eb0 <__gethex+0x320>
 8002ea2:	f8da 3000 	ldr.w	r3, [sl]
 8002ea6:	ea49 0903 	orr.w	r9, r9, r3
 8002eaa:	f019 0f01 	tst.w	r9, #1
 8002eae:	d10e      	bne.n	8002ece <__gethex+0x33e>
 8002eb0:	f045 0510 	orr.w	r5, r5, #16
 8002eb4:	e032      	b.n	8002f1c <__gethex+0x38c>
 8002eb6:	f04f 0901 	mov.w	r9, #1
 8002eba:	e7d1      	b.n	8002e60 <__gethex+0x2d0>
 8002ebc:	2501      	movs	r5, #1
 8002ebe:	e7e2      	b.n	8002e86 <__gethex+0x2f6>
 8002ec0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002ec2:	f1c3 0301 	rsb	r3, r3, #1
 8002ec6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002ec8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d0f0      	beq.n	8002eb0 <__gethex+0x320>
 8002ece:	f04f 0c00 	mov.w	ip, #0
 8002ed2:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8002ed6:	f104 0314 	add.w	r3, r4, #20
 8002eda:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8002ede:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8002ee2:	4618      	mov	r0, r3
 8002ee4:	f853 2b04 	ldr.w	r2, [r3], #4
 8002ee8:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
 8002eec:	d01b      	beq.n	8002f26 <__gethex+0x396>
 8002eee:	3201      	adds	r2, #1
 8002ef0:	6002      	str	r2, [r0, #0]
 8002ef2:	2d02      	cmp	r5, #2
 8002ef4:	f104 0314 	add.w	r3, r4, #20
 8002ef8:	d13c      	bne.n	8002f74 <__gethex+0x3e4>
 8002efa:	f8d8 2000 	ldr.w	r2, [r8]
 8002efe:	3a01      	subs	r2, #1
 8002f00:	42b2      	cmp	r2, r6
 8002f02:	d109      	bne.n	8002f18 <__gethex+0x388>
 8002f04:	2201      	movs	r2, #1
 8002f06:	1171      	asrs	r1, r6, #5
 8002f08:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8002f0c:	f006 061f 	and.w	r6, r6, #31
 8002f10:	fa02 f606 	lsl.w	r6, r2, r6
 8002f14:	421e      	tst	r6, r3
 8002f16:	d13a      	bne.n	8002f8e <__gethex+0x3fe>
 8002f18:	f045 0520 	orr.w	r5, r5, #32
 8002f1c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002f1e:	601c      	str	r4, [r3, #0]
 8002f20:	9b02      	ldr	r3, [sp, #8]
 8002f22:	601f      	str	r7, [r3, #0]
 8002f24:	e6b0      	b.n	8002c88 <__gethex+0xf8>
 8002f26:	4299      	cmp	r1, r3
 8002f28:	f843 cc04 	str.w	ip, [r3, #-4]
 8002f2c:	d8d9      	bhi.n	8002ee2 <__gethex+0x352>
 8002f2e:	68a3      	ldr	r3, [r4, #8]
 8002f30:	459b      	cmp	fp, r3
 8002f32:	db17      	blt.n	8002f64 <__gethex+0x3d4>
 8002f34:	6861      	ldr	r1, [r4, #4]
 8002f36:	9801      	ldr	r0, [sp, #4]
 8002f38:	3101      	adds	r1, #1
 8002f3a:	f000 f9bb 	bl	80032b4 <_Balloc>
 8002f3e:	4681      	mov	r9, r0
 8002f40:	b918      	cbnz	r0, 8002f4a <__gethex+0x3ba>
 8002f42:	4602      	mov	r2, r0
 8002f44:	2184      	movs	r1, #132	@ 0x84
 8002f46:	4b19      	ldr	r3, [pc, #100]	@ (8002fac <__gethex+0x41c>)
 8002f48:	e6c5      	b.n	8002cd6 <__gethex+0x146>
 8002f4a:	6922      	ldr	r2, [r4, #16]
 8002f4c:	f104 010c 	add.w	r1, r4, #12
 8002f50:	3202      	adds	r2, #2
 8002f52:	0092      	lsls	r2, r2, #2
 8002f54:	300c      	adds	r0, #12
 8002f56:	f7ff fd56 	bl	8002a06 <memcpy>
 8002f5a:	4621      	mov	r1, r4
 8002f5c:	9801      	ldr	r0, [sp, #4]
 8002f5e:	f000 f9e9 	bl	8003334 <_Bfree>
 8002f62:	464c      	mov	r4, r9
 8002f64:	6923      	ldr	r3, [r4, #16]
 8002f66:	1c5a      	adds	r2, r3, #1
 8002f68:	6122      	str	r2, [r4, #16]
 8002f6a:	2201      	movs	r2, #1
 8002f6c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002f70:	615a      	str	r2, [r3, #20]
 8002f72:	e7be      	b.n	8002ef2 <__gethex+0x362>
 8002f74:	6922      	ldr	r2, [r4, #16]
 8002f76:	455a      	cmp	r2, fp
 8002f78:	dd0b      	ble.n	8002f92 <__gethex+0x402>
 8002f7a:	2101      	movs	r1, #1
 8002f7c:	4620      	mov	r0, r4
 8002f7e:	f7ff fd9f 	bl	8002ac0 <rshift>
 8002f82:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8002f86:	3701      	adds	r7, #1
 8002f88:	42bb      	cmp	r3, r7
 8002f8a:	f6ff aee0 	blt.w	8002d4e <__gethex+0x1be>
 8002f8e:	2501      	movs	r5, #1
 8002f90:	e7c2      	b.n	8002f18 <__gethex+0x388>
 8002f92:	f016 061f 	ands.w	r6, r6, #31
 8002f96:	d0fa      	beq.n	8002f8e <__gethex+0x3fe>
 8002f98:	4453      	add	r3, sl
 8002f9a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8002f9e:	f000 fa7b 	bl	8003498 <__hi0bits>
 8002fa2:	f1c6 0620 	rsb	r6, r6, #32
 8002fa6:	42b0      	cmp	r0, r6
 8002fa8:	dbe7      	blt.n	8002f7a <__gethex+0x3ea>
 8002faa:	e7f0      	b.n	8002f8e <__gethex+0x3fe>
 8002fac:	080046c6 	.word	0x080046c6

08002fb0 <L_shift>:
 8002fb0:	f1c2 0208 	rsb	r2, r2, #8
 8002fb4:	0092      	lsls	r2, r2, #2
 8002fb6:	b570      	push	{r4, r5, r6, lr}
 8002fb8:	f1c2 0620 	rsb	r6, r2, #32
 8002fbc:	6843      	ldr	r3, [r0, #4]
 8002fbe:	6804      	ldr	r4, [r0, #0]
 8002fc0:	fa03 f506 	lsl.w	r5, r3, r6
 8002fc4:	432c      	orrs	r4, r5
 8002fc6:	40d3      	lsrs	r3, r2
 8002fc8:	6004      	str	r4, [r0, #0]
 8002fca:	f840 3f04 	str.w	r3, [r0, #4]!
 8002fce:	4288      	cmp	r0, r1
 8002fd0:	d3f4      	bcc.n	8002fbc <L_shift+0xc>
 8002fd2:	bd70      	pop	{r4, r5, r6, pc}

08002fd4 <__match>:
 8002fd4:	b530      	push	{r4, r5, lr}
 8002fd6:	6803      	ldr	r3, [r0, #0]
 8002fd8:	3301      	adds	r3, #1
 8002fda:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002fde:	b914      	cbnz	r4, 8002fe6 <__match+0x12>
 8002fe0:	6003      	str	r3, [r0, #0]
 8002fe2:	2001      	movs	r0, #1
 8002fe4:	bd30      	pop	{r4, r5, pc}
 8002fe6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002fea:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 8002fee:	2d19      	cmp	r5, #25
 8002ff0:	bf98      	it	ls
 8002ff2:	3220      	addls	r2, #32
 8002ff4:	42a2      	cmp	r2, r4
 8002ff6:	d0f0      	beq.n	8002fda <__match+0x6>
 8002ff8:	2000      	movs	r0, #0
 8002ffa:	e7f3      	b.n	8002fe4 <__match+0x10>

08002ffc <__hexnan>:
 8002ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003000:	2500      	movs	r5, #0
 8003002:	680b      	ldr	r3, [r1, #0]
 8003004:	4682      	mov	sl, r0
 8003006:	115e      	asrs	r6, r3, #5
 8003008:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800300c:	f013 031f 	ands.w	r3, r3, #31
 8003010:	bf18      	it	ne
 8003012:	3604      	addne	r6, #4
 8003014:	1f37      	subs	r7, r6, #4
 8003016:	4690      	mov	r8, r2
 8003018:	46b9      	mov	r9, r7
 800301a:	463c      	mov	r4, r7
 800301c:	46ab      	mov	fp, r5
 800301e:	b087      	sub	sp, #28
 8003020:	6801      	ldr	r1, [r0, #0]
 8003022:	9301      	str	r3, [sp, #4]
 8003024:	f846 5c04 	str.w	r5, [r6, #-4]
 8003028:	9502      	str	r5, [sp, #8]
 800302a:	784a      	ldrb	r2, [r1, #1]
 800302c:	1c4b      	adds	r3, r1, #1
 800302e:	9303      	str	r3, [sp, #12]
 8003030:	b342      	cbz	r2, 8003084 <__hexnan+0x88>
 8003032:	4610      	mov	r0, r2
 8003034:	9105      	str	r1, [sp, #20]
 8003036:	9204      	str	r2, [sp, #16]
 8003038:	f7ff fd95 	bl	8002b66 <__hexdig_fun>
 800303c:	2800      	cmp	r0, #0
 800303e:	d151      	bne.n	80030e4 <__hexnan+0xe8>
 8003040:	9a04      	ldr	r2, [sp, #16]
 8003042:	9905      	ldr	r1, [sp, #20]
 8003044:	2a20      	cmp	r2, #32
 8003046:	d818      	bhi.n	800307a <__hexnan+0x7e>
 8003048:	9b02      	ldr	r3, [sp, #8]
 800304a:	459b      	cmp	fp, r3
 800304c:	dd13      	ble.n	8003076 <__hexnan+0x7a>
 800304e:	454c      	cmp	r4, r9
 8003050:	d206      	bcs.n	8003060 <__hexnan+0x64>
 8003052:	2d07      	cmp	r5, #7
 8003054:	dc04      	bgt.n	8003060 <__hexnan+0x64>
 8003056:	462a      	mov	r2, r5
 8003058:	4649      	mov	r1, r9
 800305a:	4620      	mov	r0, r4
 800305c:	f7ff ffa8 	bl	8002fb0 <L_shift>
 8003060:	4544      	cmp	r4, r8
 8003062:	d952      	bls.n	800310a <__hexnan+0x10e>
 8003064:	2300      	movs	r3, #0
 8003066:	f1a4 0904 	sub.w	r9, r4, #4
 800306a:	f844 3c04 	str.w	r3, [r4, #-4]
 800306e:	461d      	mov	r5, r3
 8003070:	464c      	mov	r4, r9
 8003072:	f8cd b008 	str.w	fp, [sp, #8]
 8003076:	9903      	ldr	r1, [sp, #12]
 8003078:	e7d7      	b.n	800302a <__hexnan+0x2e>
 800307a:	2a29      	cmp	r2, #41	@ 0x29
 800307c:	d157      	bne.n	800312e <__hexnan+0x132>
 800307e:	3102      	adds	r1, #2
 8003080:	f8ca 1000 	str.w	r1, [sl]
 8003084:	f1bb 0f00 	cmp.w	fp, #0
 8003088:	d051      	beq.n	800312e <__hexnan+0x132>
 800308a:	454c      	cmp	r4, r9
 800308c:	d206      	bcs.n	800309c <__hexnan+0xa0>
 800308e:	2d07      	cmp	r5, #7
 8003090:	dc04      	bgt.n	800309c <__hexnan+0xa0>
 8003092:	462a      	mov	r2, r5
 8003094:	4649      	mov	r1, r9
 8003096:	4620      	mov	r0, r4
 8003098:	f7ff ff8a 	bl	8002fb0 <L_shift>
 800309c:	4544      	cmp	r4, r8
 800309e:	d936      	bls.n	800310e <__hexnan+0x112>
 80030a0:	4623      	mov	r3, r4
 80030a2:	f1a8 0204 	sub.w	r2, r8, #4
 80030a6:	f853 1b04 	ldr.w	r1, [r3], #4
 80030aa:	429f      	cmp	r7, r3
 80030ac:	f842 1f04 	str.w	r1, [r2, #4]!
 80030b0:	d2f9      	bcs.n	80030a6 <__hexnan+0xaa>
 80030b2:	1b3b      	subs	r3, r7, r4
 80030b4:	f023 0303 	bic.w	r3, r3, #3
 80030b8:	3304      	adds	r3, #4
 80030ba:	3401      	adds	r4, #1
 80030bc:	3e03      	subs	r6, #3
 80030be:	42b4      	cmp	r4, r6
 80030c0:	bf88      	it	hi
 80030c2:	2304      	movhi	r3, #4
 80030c4:	2200      	movs	r2, #0
 80030c6:	4443      	add	r3, r8
 80030c8:	f843 2b04 	str.w	r2, [r3], #4
 80030cc:	429f      	cmp	r7, r3
 80030ce:	d2fb      	bcs.n	80030c8 <__hexnan+0xcc>
 80030d0:	683b      	ldr	r3, [r7, #0]
 80030d2:	b91b      	cbnz	r3, 80030dc <__hexnan+0xe0>
 80030d4:	4547      	cmp	r7, r8
 80030d6:	d128      	bne.n	800312a <__hexnan+0x12e>
 80030d8:	2301      	movs	r3, #1
 80030da:	603b      	str	r3, [r7, #0]
 80030dc:	2005      	movs	r0, #5
 80030de:	b007      	add	sp, #28
 80030e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030e4:	3501      	adds	r5, #1
 80030e6:	2d08      	cmp	r5, #8
 80030e8:	f10b 0b01 	add.w	fp, fp, #1
 80030ec:	dd06      	ble.n	80030fc <__hexnan+0x100>
 80030ee:	4544      	cmp	r4, r8
 80030f0:	d9c1      	bls.n	8003076 <__hexnan+0x7a>
 80030f2:	2300      	movs	r3, #0
 80030f4:	2501      	movs	r5, #1
 80030f6:	f844 3c04 	str.w	r3, [r4, #-4]
 80030fa:	3c04      	subs	r4, #4
 80030fc:	6822      	ldr	r2, [r4, #0]
 80030fe:	f000 000f 	and.w	r0, r0, #15
 8003102:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8003106:	6020      	str	r0, [r4, #0]
 8003108:	e7b5      	b.n	8003076 <__hexnan+0x7a>
 800310a:	2508      	movs	r5, #8
 800310c:	e7b3      	b.n	8003076 <__hexnan+0x7a>
 800310e:	9b01      	ldr	r3, [sp, #4]
 8003110:	2b00      	cmp	r3, #0
 8003112:	d0dd      	beq.n	80030d0 <__hexnan+0xd4>
 8003114:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003118:	f1c3 0320 	rsb	r3, r3, #32
 800311c:	40da      	lsrs	r2, r3
 800311e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8003122:	4013      	ands	r3, r2
 8003124:	f846 3c04 	str.w	r3, [r6, #-4]
 8003128:	e7d2      	b.n	80030d0 <__hexnan+0xd4>
 800312a:	3f04      	subs	r7, #4
 800312c:	e7d0      	b.n	80030d0 <__hexnan+0xd4>
 800312e:	2004      	movs	r0, #4
 8003130:	e7d5      	b.n	80030de <__hexnan+0xe2>
	...

08003134 <sbrk_aligned>:
 8003134:	b570      	push	{r4, r5, r6, lr}
 8003136:	4e0f      	ldr	r6, [pc, #60]	@ (8003174 <sbrk_aligned+0x40>)
 8003138:	460c      	mov	r4, r1
 800313a:	6831      	ldr	r1, [r6, #0]
 800313c:	4605      	mov	r5, r0
 800313e:	b911      	cbnz	r1, 8003146 <sbrk_aligned+0x12>
 8003140:	f000 fe0e 	bl	8003d60 <_sbrk_r>
 8003144:	6030      	str	r0, [r6, #0]
 8003146:	4621      	mov	r1, r4
 8003148:	4628      	mov	r0, r5
 800314a:	f000 fe09 	bl	8003d60 <_sbrk_r>
 800314e:	1c43      	adds	r3, r0, #1
 8003150:	d103      	bne.n	800315a <sbrk_aligned+0x26>
 8003152:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8003156:	4620      	mov	r0, r4
 8003158:	bd70      	pop	{r4, r5, r6, pc}
 800315a:	1cc4      	adds	r4, r0, #3
 800315c:	f024 0403 	bic.w	r4, r4, #3
 8003160:	42a0      	cmp	r0, r4
 8003162:	d0f8      	beq.n	8003156 <sbrk_aligned+0x22>
 8003164:	1a21      	subs	r1, r4, r0
 8003166:	4628      	mov	r0, r5
 8003168:	f000 fdfa 	bl	8003d60 <_sbrk_r>
 800316c:	3001      	adds	r0, #1
 800316e:	d1f2      	bne.n	8003156 <sbrk_aligned+0x22>
 8003170:	e7ef      	b.n	8003152 <sbrk_aligned+0x1e>
 8003172:	bf00      	nop
 8003174:	200003a8 	.word	0x200003a8

08003178 <_malloc_r>:
 8003178:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800317c:	1ccd      	adds	r5, r1, #3
 800317e:	f025 0503 	bic.w	r5, r5, #3
 8003182:	3508      	adds	r5, #8
 8003184:	2d0c      	cmp	r5, #12
 8003186:	bf38      	it	cc
 8003188:	250c      	movcc	r5, #12
 800318a:	2d00      	cmp	r5, #0
 800318c:	4606      	mov	r6, r0
 800318e:	db01      	blt.n	8003194 <_malloc_r+0x1c>
 8003190:	42a9      	cmp	r1, r5
 8003192:	d904      	bls.n	800319e <_malloc_r+0x26>
 8003194:	230c      	movs	r3, #12
 8003196:	6033      	str	r3, [r6, #0]
 8003198:	2000      	movs	r0, #0
 800319a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800319e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003274 <_malloc_r+0xfc>
 80031a2:	f000 f87b 	bl	800329c <__malloc_lock>
 80031a6:	f8d8 3000 	ldr.w	r3, [r8]
 80031aa:	461c      	mov	r4, r3
 80031ac:	bb44      	cbnz	r4, 8003200 <_malloc_r+0x88>
 80031ae:	4629      	mov	r1, r5
 80031b0:	4630      	mov	r0, r6
 80031b2:	f7ff ffbf 	bl	8003134 <sbrk_aligned>
 80031b6:	1c43      	adds	r3, r0, #1
 80031b8:	4604      	mov	r4, r0
 80031ba:	d158      	bne.n	800326e <_malloc_r+0xf6>
 80031bc:	f8d8 4000 	ldr.w	r4, [r8]
 80031c0:	4627      	mov	r7, r4
 80031c2:	2f00      	cmp	r7, #0
 80031c4:	d143      	bne.n	800324e <_malloc_r+0xd6>
 80031c6:	2c00      	cmp	r4, #0
 80031c8:	d04b      	beq.n	8003262 <_malloc_r+0xea>
 80031ca:	6823      	ldr	r3, [r4, #0]
 80031cc:	4639      	mov	r1, r7
 80031ce:	4630      	mov	r0, r6
 80031d0:	eb04 0903 	add.w	r9, r4, r3
 80031d4:	f000 fdc4 	bl	8003d60 <_sbrk_r>
 80031d8:	4581      	cmp	r9, r0
 80031da:	d142      	bne.n	8003262 <_malloc_r+0xea>
 80031dc:	6821      	ldr	r1, [r4, #0]
 80031de:	4630      	mov	r0, r6
 80031e0:	1a6d      	subs	r5, r5, r1
 80031e2:	4629      	mov	r1, r5
 80031e4:	f7ff ffa6 	bl	8003134 <sbrk_aligned>
 80031e8:	3001      	adds	r0, #1
 80031ea:	d03a      	beq.n	8003262 <_malloc_r+0xea>
 80031ec:	6823      	ldr	r3, [r4, #0]
 80031ee:	442b      	add	r3, r5
 80031f0:	6023      	str	r3, [r4, #0]
 80031f2:	f8d8 3000 	ldr.w	r3, [r8]
 80031f6:	685a      	ldr	r2, [r3, #4]
 80031f8:	bb62      	cbnz	r2, 8003254 <_malloc_r+0xdc>
 80031fa:	f8c8 7000 	str.w	r7, [r8]
 80031fe:	e00f      	b.n	8003220 <_malloc_r+0xa8>
 8003200:	6822      	ldr	r2, [r4, #0]
 8003202:	1b52      	subs	r2, r2, r5
 8003204:	d420      	bmi.n	8003248 <_malloc_r+0xd0>
 8003206:	2a0b      	cmp	r2, #11
 8003208:	d917      	bls.n	800323a <_malloc_r+0xc2>
 800320a:	1961      	adds	r1, r4, r5
 800320c:	42a3      	cmp	r3, r4
 800320e:	6025      	str	r5, [r4, #0]
 8003210:	bf18      	it	ne
 8003212:	6059      	strne	r1, [r3, #4]
 8003214:	6863      	ldr	r3, [r4, #4]
 8003216:	bf08      	it	eq
 8003218:	f8c8 1000 	streq.w	r1, [r8]
 800321c:	5162      	str	r2, [r4, r5]
 800321e:	604b      	str	r3, [r1, #4]
 8003220:	4630      	mov	r0, r6
 8003222:	f000 f841 	bl	80032a8 <__malloc_unlock>
 8003226:	f104 000b 	add.w	r0, r4, #11
 800322a:	1d23      	adds	r3, r4, #4
 800322c:	f020 0007 	bic.w	r0, r0, #7
 8003230:	1ac2      	subs	r2, r0, r3
 8003232:	bf1c      	itt	ne
 8003234:	1a1b      	subne	r3, r3, r0
 8003236:	50a3      	strne	r3, [r4, r2]
 8003238:	e7af      	b.n	800319a <_malloc_r+0x22>
 800323a:	6862      	ldr	r2, [r4, #4]
 800323c:	42a3      	cmp	r3, r4
 800323e:	bf0c      	ite	eq
 8003240:	f8c8 2000 	streq.w	r2, [r8]
 8003244:	605a      	strne	r2, [r3, #4]
 8003246:	e7eb      	b.n	8003220 <_malloc_r+0xa8>
 8003248:	4623      	mov	r3, r4
 800324a:	6864      	ldr	r4, [r4, #4]
 800324c:	e7ae      	b.n	80031ac <_malloc_r+0x34>
 800324e:	463c      	mov	r4, r7
 8003250:	687f      	ldr	r7, [r7, #4]
 8003252:	e7b6      	b.n	80031c2 <_malloc_r+0x4a>
 8003254:	461a      	mov	r2, r3
 8003256:	685b      	ldr	r3, [r3, #4]
 8003258:	42a3      	cmp	r3, r4
 800325a:	d1fb      	bne.n	8003254 <_malloc_r+0xdc>
 800325c:	2300      	movs	r3, #0
 800325e:	6053      	str	r3, [r2, #4]
 8003260:	e7de      	b.n	8003220 <_malloc_r+0xa8>
 8003262:	230c      	movs	r3, #12
 8003264:	4630      	mov	r0, r6
 8003266:	6033      	str	r3, [r6, #0]
 8003268:	f000 f81e 	bl	80032a8 <__malloc_unlock>
 800326c:	e794      	b.n	8003198 <_malloc_r+0x20>
 800326e:	6005      	str	r5, [r0, #0]
 8003270:	e7d6      	b.n	8003220 <_malloc_r+0xa8>
 8003272:	bf00      	nop
 8003274:	200003ac 	.word	0x200003ac

08003278 <__ascii_mbtowc>:
 8003278:	b082      	sub	sp, #8
 800327a:	b901      	cbnz	r1, 800327e <__ascii_mbtowc+0x6>
 800327c:	a901      	add	r1, sp, #4
 800327e:	b142      	cbz	r2, 8003292 <__ascii_mbtowc+0x1a>
 8003280:	b14b      	cbz	r3, 8003296 <__ascii_mbtowc+0x1e>
 8003282:	7813      	ldrb	r3, [r2, #0]
 8003284:	600b      	str	r3, [r1, #0]
 8003286:	7812      	ldrb	r2, [r2, #0]
 8003288:	1e10      	subs	r0, r2, #0
 800328a:	bf18      	it	ne
 800328c:	2001      	movne	r0, #1
 800328e:	b002      	add	sp, #8
 8003290:	4770      	bx	lr
 8003292:	4610      	mov	r0, r2
 8003294:	e7fb      	b.n	800328e <__ascii_mbtowc+0x16>
 8003296:	f06f 0001 	mvn.w	r0, #1
 800329a:	e7f8      	b.n	800328e <__ascii_mbtowc+0x16>

0800329c <__malloc_lock>:
 800329c:	4801      	ldr	r0, [pc, #4]	@ (80032a4 <__malloc_lock+0x8>)
 800329e:	f7ff bbb0 	b.w	8002a02 <__retarget_lock_acquire_recursive>
 80032a2:	bf00      	nop
 80032a4:	200003a4 	.word	0x200003a4

080032a8 <__malloc_unlock>:
 80032a8:	4801      	ldr	r0, [pc, #4]	@ (80032b0 <__malloc_unlock+0x8>)
 80032aa:	f7ff bbab 	b.w	8002a04 <__retarget_lock_release_recursive>
 80032ae:	bf00      	nop
 80032b0:	200003a4 	.word	0x200003a4

080032b4 <_Balloc>:
 80032b4:	b570      	push	{r4, r5, r6, lr}
 80032b6:	69c6      	ldr	r6, [r0, #28]
 80032b8:	4604      	mov	r4, r0
 80032ba:	460d      	mov	r5, r1
 80032bc:	b976      	cbnz	r6, 80032dc <_Balloc+0x28>
 80032be:	2010      	movs	r0, #16
 80032c0:	f000 fd90 	bl	8003de4 <malloc>
 80032c4:	4602      	mov	r2, r0
 80032c6:	61e0      	str	r0, [r4, #28]
 80032c8:	b920      	cbnz	r0, 80032d4 <_Balloc+0x20>
 80032ca:	216b      	movs	r1, #107	@ 0x6b
 80032cc:	4b17      	ldr	r3, [pc, #92]	@ (800332c <_Balloc+0x78>)
 80032ce:	4818      	ldr	r0, [pc, #96]	@ (8003330 <_Balloc+0x7c>)
 80032d0:	f000 fd56 	bl	8003d80 <__assert_func>
 80032d4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80032d8:	6006      	str	r6, [r0, #0]
 80032da:	60c6      	str	r6, [r0, #12]
 80032dc:	69e6      	ldr	r6, [r4, #28]
 80032de:	68f3      	ldr	r3, [r6, #12]
 80032e0:	b183      	cbz	r3, 8003304 <_Balloc+0x50>
 80032e2:	69e3      	ldr	r3, [r4, #28]
 80032e4:	68db      	ldr	r3, [r3, #12]
 80032e6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80032ea:	b9b8      	cbnz	r0, 800331c <_Balloc+0x68>
 80032ec:	2101      	movs	r1, #1
 80032ee:	fa01 f605 	lsl.w	r6, r1, r5
 80032f2:	1d72      	adds	r2, r6, #5
 80032f4:	4620      	mov	r0, r4
 80032f6:	0092      	lsls	r2, r2, #2
 80032f8:	f000 fd60 	bl	8003dbc <_calloc_r>
 80032fc:	b160      	cbz	r0, 8003318 <_Balloc+0x64>
 80032fe:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003302:	e00e      	b.n	8003322 <_Balloc+0x6e>
 8003304:	2221      	movs	r2, #33	@ 0x21
 8003306:	2104      	movs	r1, #4
 8003308:	4620      	mov	r0, r4
 800330a:	f000 fd57 	bl	8003dbc <_calloc_r>
 800330e:	69e3      	ldr	r3, [r4, #28]
 8003310:	60f0      	str	r0, [r6, #12]
 8003312:	68db      	ldr	r3, [r3, #12]
 8003314:	2b00      	cmp	r3, #0
 8003316:	d1e4      	bne.n	80032e2 <_Balloc+0x2e>
 8003318:	2000      	movs	r0, #0
 800331a:	bd70      	pop	{r4, r5, r6, pc}
 800331c:	6802      	ldr	r2, [r0, #0]
 800331e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003322:	2300      	movs	r3, #0
 8003324:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003328:	e7f7      	b.n	800331a <_Balloc+0x66>
 800332a:	bf00      	nop
 800332c:	08004737 	.word	0x08004737
 8003330:	0800474e 	.word	0x0800474e

08003334 <_Bfree>:
 8003334:	b570      	push	{r4, r5, r6, lr}
 8003336:	69c6      	ldr	r6, [r0, #28]
 8003338:	4605      	mov	r5, r0
 800333a:	460c      	mov	r4, r1
 800333c:	b976      	cbnz	r6, 800335c <_Bfree+0x28>
 800333e:	2010      	movs	r0, #16
 8003340:	f000 fd50 	bl	8003de4 <malloc>
 8003344:	4602      	mov	r2, r0
 8003346:	61e8      	str	r0, [r5, #28]
 8003348:	b920      	cbnz	r0, 8003354 <_Bfree+0x20>
 800334a:	218f      	movs	r1, #143	@ 0x8f
 800334c:	4b08      	ldr	r3, [pc, #32]	@ (8003370 <_Bfree+0x3c>)
 800334e:	4809      	ldr	r0, [pc, #36]	@ (8003374 <_Bfree+0x40>)
 8003350:	f000 fd16 	bl	8003d80 <__assert_func>
 8003354:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003358:	6006      	str	r6, [r0, #0]
 800335a:	60c6      	str	r6, [r0, #12]
 800335c:	b13c      	cbz	r4, 800336e <_Bfree+0x3a>
 800335e:	69eb      	ldr	r3, [r5, #28]
 8003360:	6862      	ldr	r2, [r4, #4]
 8003362:	68db      	ldr	r3, [r3, #12]
 8003364:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003368:	6021      	str	r1, [r4, #0]
 800336a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800336e:	bd70      	pop	{r4, r5, r6, pc}
 8003370:	08004737 	.word	0x08004737
 8003374:	0800474e 	.word	0x0800474e

08003378 <__multadd>:
 8003378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800337c:	4607      	mov	r7, r0
 800337e:	460c      	mov	r4, r1
 8003380:	461e      	mov	r6, r3
 8003382:	2000      	movs	r0, #0
 8003384:	690d      	ldr	r5, [r1, #16]
 8003386:	f101 0c14 	add.w	ip, r1, #20
 800338a:	f8dc 3000 	ldr.w	r3, [ip]
 800338e:	3001      	adds	r0, #1
 8003390:	b299      	uxth	r1, r3
 8003392:	fb02 6101 	mla	r1, r2, r1, r6
 8003396:	0c1e      	lsrs	r6, r3, #16
 8003398:	0c0b      	lsrs	r3, r1, #16
 800339a:	fb02 3306 	mla	r3, r2, r6, r3
 800339e:	b289      	uxth	r1, r1
 80033a0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80033a4:	4285      	cmp	r5, r0
 80033a6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80033aa:	f84c 1b04 	str.w	r1, [ip], #4
 80033ae:	dcec      	bgt.n	800338a <__multadd+0x12>
 80033b0:	b30e      	cbz	r6, 80033f6 <__multadd+0x7e>
 80033b2:	68a3      	ldr	r3, [r4, #8]
 80033b4:	42ab      	cmp	r3, r5
 80033b6:	dc19      	bgt.n	80033ec <__multadd+0x74>
 80033b8:	6861      	ldr	r1, [r4, #4]
 80033ba:	4638      	mov	r0, r7
 80033bc:	3101      	adds	r1, #1
 80033be:	f7ff ff79 	bl	80032b4 <_Balloc>
 80033c2:	4680      	mov	r8, r0
 80033c4:	b928      	cbnz	r0, 80033d2 <__multadd+0x5a>
 80033c6:	4602      	mov	r2, r0
 80033c8:	21ba      	movs	r1, #186	@ 0xba
 80033ca:	4b0c      	ldr	r3, [pc, #48]	@ (80033fc <__multadd+0x84>)
 80033cc:	480c      	ldr	r0, [pc, #48]	@ (8003400 <__multadd+0x88>)
 80033ce:	f000 fcd7 	bl	8003d80 <__assert_func>
 80033d2:	6922      	ldr	r2, [r4, #16]
 80033d4:	f104 010c 	add.w	r1, r4, #12
 80033d8:	3202      	adds	r2, #2
 80033da:	0092      	lsls	r2, r2, #2
 80033dc:	300c      	adds	r0, #12
 80033de:	f7ff fb12 	bl	8002a06 <memcpy>
 80033e2:	4621      	mov	r1, r4
 80033e4:	4638      	mov	r0, r7
 80033e6:	f7ff ffa5 	bl	8003334 <_Bfree>
 80033ea:	4644      	mov	r4, r8
 80033ec:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80033f0:	3501      	adds	r5, #1
 80033f2:	615e      	str	r6, [r3, #20]
 80033f4:	6125      	str	r5, [r4, #16]
 80033f6:	4620      	mov	r0, r4
 80033f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80033fc:	080046c6 	.word	0x080046c6
 8003400:	0800474e 	.word	0x0800474e

08003404 <__s2b>:
 8003404:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003408:	4615      	mov	r5, r2
 800340a:	2209      	movs	r2, #9
 800340c:	461f      	mov	r7, r3
 800340e:	3308      	adds	r3, #8
 8003410:	460c      	mov	r4, r1
 8003412:	fb93 f3f2 	sdiv	r3, r3, r2
 8003416:	4606      	mov	r6, r0
 8003418:	2201      	movs	r2, #1
 800341a:	2100      	movs	r1, #0
 800341c:	429a      	cmp	r2, r3
 800341e:	db09      	blt.n	8003434 <__s2b+0x30>
 8003420:	4630      	mov	r0, r6
 8003422:	f7ff ff47 	bl	80032b4 <_Balloc>
 8003426:	b940      	cbnz	r0, 800343a <__s2b+0x36>
 8003428:	4602      	mov	r2, r0
 800342a:	21d3      	movs	r1, #211	@ 0xd3
 800342c:	4b18      	ldr	r3, [pc, #96]	@ (8003490 <__s2b+0x8c>)
 800342e:	4819      	ldr	r0, [pc, #100]	@ (8003494 <__s2b+0x90>)
 8003430:	f000 fca6 	bl	8003d80 <__assert_func>
 8003434:	0052      	lsls	r2, r2, #1
 8003436:	3101      	adds	r1, #1
 8003438:	e7f0      	b.n	800341c <__s2b+0x18>
 800343a:	9b08      	ldr	r3, [sp, #32]
 800343c:	2d09      	cmp	r5, #9
 800343e:	6143      	str	r3, [r0, #20]
 8003440:	f04f 0301 	mov.w	r3, #1
 8003444:	6103      	str	r3, [r0, #16]
 8003446:	dd16      	ble.n	8003476 <__s2b+0x72>
 8003448:	f104 0909 	add.w	r9, r4, #9
 800344c:	46c8      	mov	r8, r9
 800344e:	442c      	add	r4, r5
 8003450:	f818 3b01 	ldrb.w	r3, [r8], #1
 8003454:	4601      	mov	r1, r0
 8003456:	220a      	movs	r2, #10
 8003458:	4630      	mov	r0, r6
 800345a:	3b30      	subs	r3, #48	@ 0x30
 800345c:	f7ff ff8c 	bl	8003378 <__multadd>
 8003460:	45a0      	cmp	r8, r4
 8003462:	d1f5      	bne.n	8003450 <__s2b+0x4c>
 8003464:	f1a5 0408 	sub.w	r4, r5, #8
 8003468:	444c      	add	r4, r9
 800346a:	1b2d      	subs	r5, r5, r4
 800346c:	1963      	adds	r3, r4, r5
 800346e:	42bb      	cmp	r3, r7
 8003470:	db04      	blt.n	800347c <__s2b+0x78>
 8003472:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003476:	2509      	movs	r5, #9
 8003478:	340a      	adds	r4, #10
 800347a:	e7f6      	b.n	800346a <__s2b+0x66>
 800347c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003480:	4601      	mov	r1, r0
 8003482:	220a      	movs	r2, #10
 8003484:	4630      	mov	r0, r6
 8003486:	3b30      	subs	r3, #48	@ 0x30
 8003488:	f7ff ff76 	bl	8003378 <__multadd>
 800348c:	e7ee      	b.n	800346c <__s2b+0x68>
 800348e:	bf00      	nop
 8003490:	080046c6 	.word	0x080046c6
 8003494:	0800474e 	.word	0x0800474e

08003498 <__hi0bits>:
 8003498:	4603      	mov	r3, r0
 800349a:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800349e:	bf3a      	itte	cc
 80034a0:	0403      	lslcc	r3, r0, #16
 80034a2:	2010      	movcc	r0, #16
 80034a4:	2000      	movcs	r0, #0
 80034a6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80034aa:	bf3c      	itt	cc
 80034ac:	021b      	lslcc	r3, r3, #8
 80034ae:	3008      	addcc	r0, #8
 80034b0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80034b4:	bf3c      	itt	cc
 80034b6:	011b      	lslcc	r3, r3, #4
 80034b8:	3004      	addcc	r0, #4
 80034ba:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80034be:	bf3c      	itt	cc
 80034c0:	009b      	lslcc	r3, r3, #2
 80034c2:	3002      	addcc	r0, #2
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	db05      	blt.n	80034d4 <__hi0bits+0x3c>
 80034c8:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80034cc:	f100 0001 	add.w	r0, r0, #1
 80034d0:	bf08      	it	eq
 80034d2:	2020      	moveq	r0, #32
 80034d4:	4770      	bx	lr

080034d6 <__lo0bits>:
 80034d6:	6803      	ldr	r3, [r0, #0]
 80034d8:	4602      	mov	r2, r0
 80034da:	f013 0007 	ands.w	r0, r3, #7
 80034de:	d00b      	beq.n	80034f8 <__lo0bits+0x22>
 80034e0:	07d9      	lsls	r1, r3, #31
 80034e2:	d421      	bmi.n	8003528 <__lo0bits+0x52>
 80034e4:	0798      	lsls	r0, r3, #30
 80034e6:	bf49      	itett	mi
 80034e8:	085b      	lsrmi	r3, r3, #1
 80034ea:	089b      	lsrpl	r3, r3, #2
 80034ec:	2001      	movmi	r0, #1
 80034ee:	6013      	strmi	r3, [r2, #0]
 80034f0:	bf5c      	itt	pl
 80034f2:	2002      	movpl	r0, #2
 80034f4:	6013      	strpl	r3, [r2, #0]
 80034f6:	4770      	bx	lr
 80034f8:	b299      	uxth	r1, r3
 80034fa:	b909      	cbnz	r1, 8003500 <__lo0bits+0x2a>
 80034fc:	2010      	movs	r0, #16
 80034fe:	0c1b      	lsrs	r3, r3, #16
 8003500:	b2d9      	uxtb	r1, r3
 8003502:	b909      	cbnz	r1, 8003508 <__lo0bits+0x32>
 8003504:	3008      	adds	r0, #8
 8003506:	0a1b      	lsrs	r3, r3, #8
 8003508:	0719      	lsls	r1, r3, #28
 800350a:	bf04      	itt	eq
 800350c:	091b      	lsreq	r3, r3, #4
 800350e:	3004      	addeq	r0, #4
 8003510:	0799      	lsls	r1, r3, #30
 8003512:	bf04      	itt	eq
 8003514:	089b      	lsreq	r3, r3, #2
 8003516:	3002      	addeq	r0, #2
 8003518:	07d9      	lsls	r1, r3, #31
 800351a:	d403      	bmi.n	8003524 <__lo0bits+0x4e>
 800351c:	085b      	lsrs	r3, r3, #1
 800351e:	f100 0001 	add.w	r0, r0, #1
 8003522:	d003      	beq.n	800352c <__lo0bits+0x56>
 8003524:	6013      	str	r3, [r2, #0]
 8003526:	4770      	bx	lr
 8003528:	2000      	movs	r0, #0
 800352a:	4770      	bx	lr
 800352c:	2020      	movs	r0, #32
 800352e:	4770      	bx	lr

08003530 <__i2b>:
 8003530:	b510      	push	{r4, lr}
 8003532:	460c      	mov	r4, r1
 8003534:	2101      	movs	r1, #1
 8003536:	f7ff febd 	bl	80032b4 <_Balloc>
 800353a:	4602      	mov	r2, r0
 800353c:	b928      	cbnz	r0, 800354a <__i2b+0x1a>
 800353e:	f240 1145 	movw	r1, #325	@ 0x145
 8003542:	4b04      	ldr	r3, [pc, #16]	@ (8003554 <__i2b+0x24>)
 8003544:	4804      	ldr	r0, [pc, #16]	@ (8003558 <__i2b+0x28>)
 8003546:	f000 fc1b 	bl	8003d80 <__assert_func>
 800354a:	2301      	movs	r3, #1
 800354c:	6144      	str	r4, [r0, #20]
 800354e:	6103      	str	r3, [r0, #16]
 8003550:	bd10      	pop	{r4, pc}
 8003552:	bf00      	nop
 8003554:	080046c6 	.word	0x080046c6
 8003558:	0800474e 	.word	0x0800474e

0800355c <__multiply>:
 800355c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003560:	4617      	mov	r7, r2
 8003562:	690a      	ldr	r2, [r1, #16]
 8003564:	693b      	ldr	r3, [r7, #16]
 8003566:	4689      	mov	r9, r1
 8003568:	429a      	cmp	r2, r3
 800356a:	bfa2      	ittt	ge
 800356c:	463b      	movge	r3, r7
 800356e:	460f      	movge	r7, r1
 8003570:	4699      	movge	r9, r3
 8003572:	693d      	ldr	r5, [r7, #16]
 8003574:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003578:	68bb      	ldr	r3, [r7, #8]
 800357a:	6879      	ldr	r1, [r7, #4]
 800357c:	eb05 060a 	add.w	r6, r5, sl
 8003580:	42b3      	cmp	r3, r6
 8003582:	b085      	sub	sp, #20
 8003584:	bfb8      	it	lt
 8003586:	3101      	addlt	r1, #1
 8003588:	f7ff fe94 	bl	80032b4 <_Balloc>
 800358c:	b930      	cbnz	r0, 800359c <__multiply+0x40>
 800358e:	4602      	mov	r2, r0
 8003590:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003594:	4b40      	ldr	r3, [pc, #256]	@ (8003698 <__multiply+0x13c>)
 8003596:	4841      	ldr	r0, [pc, #260]	@ (800369c <__multiply+0x140>)
 8003598:	f000 fbf2 	bl	8003d80 <__assert_func>
 800359c:	f100 0414 	add.w	r4, r0, #20
 80035a0:	4623      	mov	r3, r4
 80035a2:	2200      	movs	r2, #0
 80035a4:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 80035a8:	4573      	cmp	r3, lr
 80035aa:	d320      	bcc.n	80035ee <__multiply+0x92>
 80035ac:	f107 0814 	add.w	r8, r7, #20
 80035b0:	f109 0114 	add.w	r1, r9, #20
 80035b4:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 80035b8:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 80035bc:	9302      	str	r3, [sp, #8]
 80035be:	1beb      	subs	r3, r5, r7
 80035c0:	3b15      	subs	r3, #21
 80035c2:	f023 0303 	bic.w	r3, r3, #3
 80035c6:	3304      	adds	r3, #4
 80035c8:	3715      	adds	r7, #21
 80035ca:	42bd      	cmp	r5, r7
 80035cc:	bf38      	it	cc
 80035ce:	2304      	movcc	r3, #4
 80035d0:	9301      	str	r3, [sp, #4]
 80035d2:	9b02      	ldr	r3, [sp, #8]
 80035d4:	9103      	str	r1, [sp, #12]
 80035d6:	428b      	cmp	r3, r1
 80035d8:	d80c      	bhi.n	80035f4 <__multiply+0x98>
 80035da:	2e00      	cmp	r6, #0
 80035dc:	dd03      	ble.n	80035e6 <__multiply+0x8a>
 80035de:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	d055      	beq.n	8003692 <__multiply+0x136>
 80035e6:	6106      	str	r6, [r0, #16]
 80035e8:	b005      	add	sp, #20
 80035ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035ee:	f843 2b04 	str.w	r2, [r3], #4
 80035f2:	e7d9      	b.n	80035a8 <__multiply+0x4c>
 80035f4:	f8b1 a000 	ldrh.w	sl, [r1]
 80035f8:	f1ba 0f00 	cmp.w	sl, #0
 80035fc:	d01f      	beq.n	800363e <__multiply+0xe2>
 80035fe:	46c4      	mov	ip, r8
 8003600:	46a1      	mov	r9, r4
 8003602:	2700      	movs	r7, #0
 8003604:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003608:	f8d9 3000 	ldr.w	r3, [r9]
 800360c:	fa1f fb82 	uxth.w	fp, r2
 8003610:	b29b      	uxth	r3, r3
 8003612:	fb0a 330b 	mla	r3, sl, fp, r3
 8003616:	443b      	add	r3, r7
 8003618:	f8d9 7000 	ldr.w	r7, [r9]
 800361c:	0c12      	lsrs	r2, r2, #16
 800361e:	0c3f      	lsrs	r7, r7, #16
 8003620:	fb0a 7202 	mla	r2, sl, r2, r7
 8003624:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8003628:	b29b      	uxth	r3, r3
 800362a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800362e:	4565      	cmp	r5, ip
 8003630:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8003634:	f849 3b04 	str.w	r3, [r9], #4
 8003638:	d8e4      	bhi.n	8003604 <__multiply+0xa8>
 800363a:	9b01      	ldr	r3, [sp, #4]
 800363c:	50e7      	str	r7, [r4, r3]
 800363e:	9b03      	ldr	r3, [sp, #12]
 8003640:	3104      	adds	r1, #4
 8003642:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003646:	f1b9 0f00 	cmp.w	r9, #0
 800364a:	d020      	beq.n	800368e <__multiply+0x132>
 800364c:	4647      	mov	r7, r8
 800364e:	46a4      	mov	ip, r4
 8003650:	f04f 0a00 	mov.w	sl, #0
 8003654:	6823      	ldr	r3, [r4, #0]
 8003656:	f8b7 b000 	ldrh.w	fp, [r7]
 800365a:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800365e:	b29b      	uxth	r3, r3
 8003660:	fb09 220b 	mla	r2, r9, fp, r2
 8003664:	4452      	add	r2, sl
 8003666:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800366a:	f84c 3b04 	str.w	r3, [ip], #4
 800366e:	f857 3b04 	ldr.w	r3, [r7], #4
 8003672:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003676:	f8bc 3000 	ldrh.w	r3, [ip]
 800367a:	42bd      	cmp	r5, r7
 800367c:	fb09 330a 	mla	r3, r9, sl, r3
 8003680:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8003684:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003688:	d8e5      	bhi.n	8003656 <__multiply+0xfa>
 800368a:	9a01      	ldr	r2, [sp, #4]
 800368c:	50a3      	str	r3, [r4, r2]
 800368e:	3404      	adds	r4, #4
 8003690:	e79f      	b.n	80035d2 <__multiply+0x76>
 8003692:	3e01      	subs	r6, #1
 8003694:	e7a1      	b.n	80035da <__multiply+0x7e>
 8003696:	bf00      	nop
 8003698:	080046c6 	.word	0x080046c6
 800369c:	0800474e 	.word	0x0800474e

080036a0 <__pow5mult>:
 80036a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80036a4:	4615      	mov	r5, r2
 80036a6:	f012 0203 	ands.w	r2, r2, #3
 80036aa:	4607      	mov	r7, r0
 80036ac:	460e      	mov	r6, r1
 80036ae:	d007      	beq.n	80036c0 <__pow5mult+0x20>
 80036b0:	4c25      	ldr	r4, [pc, #148]	@ (8003748 <__pow5mult+0xa8>)
 80036b2:	3a01      	subs	r2, #1
 80036b4:	2300      	movs	r3, #0
 80036b6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80036ba:	f7ff fe5d 	bl	8003378 <__multadd>
 80036be:	4606      	mov	r6, r0
 80036c0:	10ad      	asrs	r5, r5, #2
 80036c2:	d03d      	beq.n	8003740 <__pow5mult+0xa0>
 80036c4:	69fc      	ldr	r4, [r7, #28]
 80036c6:	b97c      	cbnz	r4, 80036e8 <__pow5mult+0x48>
 80036c8:	2010      	movs	r0, #16
 80036ca:	f000 fb8b 	bl	8003de4 <malloc>
 80036ce:	4602      	mov	r2, r0
 80036d0:	61f8      	str	r0, [r7, #28]
 80036d2:	b928      	cbnz	r0, 80036e0 <__pow5mult+0x40>
 80036d4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80036d8:	4b1c      	ldr	r3, [pc, #112]	@ (800374c <__pow5mult+0xac>)
 80036da:	481d      	ldr	r0, [pc, #116]	@ (8003750 <__pow5mult+0xb0>)
 80036dc:	f000 fb50 	bl	8003d80 <__assert_func>
 80036e0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80036e4:	6004      	str	r4, [r0, #0]
 80036e6:	60c4      	str	r4, [r0, #12]
 80036e8:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80036ec:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80036f0:	b94c      	cbnz	r4, 8003706 <__pow5mult+0x66>
 80036f2:	f240 2171 	movw	r1, #625	@ 0x271
 80036f6:	4638      	mov	r0, r7
 80036f8:	f7ff ff1a 	bl	8003530 <__i2b>
 80036fc:	2300      	movs	r3, #0
 80036fe:	4604      	mov	r4, r0
 8003700:	f8c8 0008 	str.w	r0, [r8, #8]
 8003704:	6003      	str	r3, [r0, #0]
 8003706:	f04f 0900 	mov.w	r9, #0
 800370a:	07eb      	lsls	r3, r5, #31
 800370c:	d50a      	bpl.n	8003724 <__pow5mult+0x84>
 800370e:	4631      	mov	r1, r6
 8003710:	4622      	mov	r2, r4
 8003712:	4638      	mov	r0, r7
 8003714:	f7ff ff22 	bl	800355c <__multiply>
 8003718:	4680      	mov	r8, r0
 800371a:	4631      	mov	r1, r6
 800371c:	4638      	mov	r0, r7
 800371e:	f7ff fe09 	bl	8003334 <_Bfree>
 8003722:	4646      	mov	r6, r8
 8003724:	106d      	asrs	r5, r5, #1
 8003726:	d00b      	beq.n	8003740 <__pow5mult+0xa0>
 8003728:	6820      	ldr	r0, [r4, #0]
 800372a:	b938      	cbnz	r0, 800373c <__pow5mult+0x9c>
 800372c:	4622      	mov	r2, r4
 800372e:	4621      	mov	r1, r4
 8003730:	4638      	mov	r0, r7
 8003732:	f7ff ff13 	bl	800355c <__multiply>
 8003736:	6020      	str	r0, [r4, #0]
 8003738:	f8c0 9000 	str.w	r9, [r0]
 800373c:	4604      	mov	r4, r0
 800373e:	e7e4      	b.n	800370a <__pow5mult+0x6a>
 8003740:	4630      	mov	r0, r6
 8003742:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003746:	bf00      	nop
 8003748:	08004868 	.word	0x08004868
 800374c:	08004737 	.word	0x08004737
 8003750:	0800474e 	.word	0x0800474e

08003754 <__lshift>:
 8003754:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003758:	460c      	mov	r4, r1
 800375a:	4607      	mov	r7, r0
 800375c:	4691      	mov	r9, r2
 800375e:	6923      	ldr	r3, [r4, #16]
 8003760:	6849      	ldr	r1, [r1, #4]
 8003762:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003766:	68a3      	ldr	r3, [r4, #8]
 8003768:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800376c:	f108 0601 	add.w	r6, r8, #1
 8003770:	42b3      	cmp	r3, r6
 8003772:	db0b      	blt.n	800378c <__lshift+0x38>
 8003774:	4638      	mov	r0, r7
 8003776:	f7ff fd9d 	bl	80032b4 <_Balloc>
 800377a:	4605      	mov	r5, r0
 800377c:	b948      	cbnz	r0, 8003792 <__lshift+0x3e>
 800377e:	4602      	mov	r2, r0
 8003780:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003784:	4b27      	ldr	r3, [pc, #156]	@ (8003824 <__lshift+0xd0>)
 8003786:	4828      	ldr	r0, [pc, #160]	@ (8003828 <__lshift+0xd4>)
 8003788:	f000 fafa 	bl	8003d80 <__assert_func>
 800378c:	3101      	adds	r1, #1
 800378e:	005b      	lsls	r3, r3, #1
 8003790:	e7ee      	b.n	8003770 <__lshift+0x1c>
 8003792:	2300      	movs	r3, #0
 8003794:	f100 0114 	add.w	r1, r0, #20
 8003798:	f100 0210 	add.w	r2, r0, #16
 800379c:	4618      	mov	r0, r3
 800379e:	4553      	cmp	r3, sl
 80037a0:	db33      	blt.n	800380a <__lshift+0xb6>
 80037a2:	6920      	ldr	r0, [r4, #16]
 80037a4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80037a8:	f104 0314 	add.w	r3, r4, #20
 80037ac:	f019 091f 	ands.w	r9, r9, #31
 80037b0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80037b4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80037b8:	d02b      	beq.n	8003812 <__lshift+0xbe>
 80037ba:	468a      	mov	sl, r1
 80037bc:	2200      	movs	r2, #0
 80037be:	f1c9 0e20 	rsb	lr, r9, #32
 80037c2:	6818      	ldr	r0, [r3, #0]
 80037c4:	fa00 f009 	lsl.w	r0, r0, r9
 80037c8:	4310      	orrs	r0, r2
 80037ca:	f84a 0b04 	str.w	r0, [sl], #4
 80037ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80037d2:	459c      	cmp	ip, r3
 80037d4:	fa22 f20e 	lsr.w	r2, r2, lr
 80037d8:	d8f3      	bhi.n	80037c2 <__lshift+0x6e>
 80037da:	ebac 0304 	sub.w	r3, ip, r4
 80037de:	3b15      	subs	r3, #21
 80037e0:	f023 0303 	bic.w	r3, r3, #3
 80037e4:	3304      	adds	r3, #4
 80037e6:	f104 0015 	add.w	r0, r4, #21
 80037ea:	4560      	cmp	r0, ip
 80037ec:	bf88      	it	hi
 80037ee:	2304      	movhi	r3, #4
 80037f0:	50ca      	str	r2, [r1, r3]
 80037f2:	b10a      	cbz	r2, 80037f8 <__lshift+0xa4>
 80037f4:	f108 0602 	add.w	r6, r8, #2
 80037f8:	3e01      	subs	r6, #1
 80037fa:	4638      	mov	r0, r7
 80037fc:	4621      	mov	r1, r4
 80037fe:	612e      	str	r6, [r5, #16]
 8003800:	f7ff fd98 	bl	8003334 <_Bfree>
 8003804:	4628      	mov	r0, r5
 8003806:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800380a:	f842 0f04 	str.w	r0, [r2, #4]!
 800380e:	3301      	adds	r3, #1
 8003810:	e7c5      	b.n	800379e <__lshift+0x4a>
 8003812:	3904      	subs	r1, #4
 8003814:	f853 2b04 	ldr.w	r2, [r3], #4
 8003818:	459c      	cmp	ip, r3
 800381a:	f841 2f04 	str.w	r2, [r1, #4]!
 800381e:	d8f9      	bhi.n	8003814 <__lshift+0xc0>
 8003820:	e7ea      	b.n	80037f8 <__lshift+0xa4>
 8003822:	bf00      	nop
 8003824:	080046c6 	.word	0x080046c6
 8003828:	0800474e 	.word	0x0800474e

0800382c <__mcmp>:
 800382c:	4603      	mov	r3, r0
 800382e:	690a      	ldr	r2, [r1, #16]
 8003830:	6900      	ldr	r0, [r0, #16]
 8003832:	b530      	push	{r4, r5, lr}
 8003834:	1a80      	subs	r0, r0, r2
 8003836:	d10e      	bne.n	8003856 <__mcmp+0x2a>
 8003838:	3314      	adds	r3, #20
 800383a:	3114      	adds	r1, #20
 800383c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003840:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003844:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003848:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800384c:	4295      	cmp	r5, r2
 800384e:	d003      	beq.n	8003858 <__mcmp+0x2c>
 8003850:	d205      	bcs.n	800385e <__mcmp+0x32>
 8003852:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003856:	bd30      	pop	{r4, r5, pc}
 8003858:	42a3      	cmp	r3, r4
 800385a:	d3f3      	bcc.n	8003844 <__mcmp+0x18>
 800385c:	e7fb      	b.n	8003856 <__mcmp+0x2a>
 800385e:	2001      	movs	r0, #1
 8003860:	e7f9      	b.n	8003856 <__mcmp+0x2a>
	...

08003864 <__mdiff>:
 8003864:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003868:	4689      	mov	r9, r1
 800386a:	4606      	mov	r6, r0
 800386c:	4611      	mov	r1, r2
 800386e:	4648      	mov	r0, r9
 8003870:	4614      	mov	r4, r2
 8003872:	f7ff ffdb 	bl	800382c <__mcmp>
 8003876:	1e05      	subs	r5, r0, #0
 8003878:	d112      	bne.n	80038a0 <__mdiff+0x3c>
 800387a:	4629      	mov	r1, r5
 800387c:	4630      	mov	r0, r6
 800387e:	f7ff fd19 	bl	80032b4 <_Balloc>
 8003882:	4602      	mov	r2, r0
 8003884:	b928      	cbnz	r0, 8003892 <__mdiff+0x2e>
 8003886:	f240 2137 	movw	r1, #567	@ 0x237
 800388a:	4b3e      	ldr	r3, [pc, #248]	@ (8003984 <__mdiff+0x120>)
 800388c:	483e      	ldr	r0, [pc, #248]	@ (8003988 <__mdiff+0x124>)
 800388e:	f000 fa77 	bl	8003d80 <__assert_func>
 8003892:	2301      	movs	r3, #1
 8003894:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003898:	4610      	mov	r0, r2
 800389a:	b003      	add	sp, #12
 800389c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80038a0:	bfbc      	itt	lt
 80038a2:	464b      	movlt	r3, r9
 80038a4:	46a1      	movlt	r9, r4
 80038a6:	4630      	mov	r0, r6
 80038a8:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80038ac:	bfba      	itte	lt
 80038ae:	461c      	movlt	r4, r3
 80038b0:	2501      	movlt	r5, #1
 80038b2:	2500      	movge	r5, #0
 80038b4:	f7ff fcfe 	bl	80032b4 <_Balloc>
 80038b8:	4602      	mov	r2, r0
 80038ba:	b918      	cbnz	r0, 80038c4 <__mdiff+0x60>
 80038bc:	f240 2145 	movw	r1, #581	@ 0x245
 80038c0:	4b30      	ldr	r3, [pc, #192]	@ (8003984 <__mdiff+0x120>)
 80038c2:	e7e3      	b.n	800388c <__mdiff+0x28>
 80038c4:	f100 0b14 	add.w	fp, r0, #20
 80038c8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80038cc:	f109 0310 	add.w	r3, r9, #16
 80038d0:	60c5      	str	r5, [r0, #12]
 80038d2:	f04f 0c00 	mov.w	ip, #0
 80038d6:	f109 0514 	add.w	r5, r9, #20
 80038da:	46d9      	mov	r9, fp
 80038dc:	6926      	ldr	r6, [r4, #16]
 80038de:	f104 0e14 	add.w	lr, r4, #20
 80038e2:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80038e6:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80038ea:	9301      	str	r3, [sp, #4]
 80038ec:	9b01      	ldr	r3, [sp, #4]
 80038ee:	f85e 0b04 	ldr.w	r0, [lr], #4
 80038f2:	f853 af04 	ldr.w	sl, [r3, #4]!
 80038f6:	b281      	uxth	r1, r0
 80038f8:	9301      	str	r3, [sp, #4]
 80038fa:	fa1f f38a 	uxth.w	r3, sl
 80038fe:	1a5b      	subs	r3, r3, r1
 8003900:	0c00      	lsrs	r0, r0, #16
 8003902:	4463      	add	r3, ip
 8003904:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003908:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800390c:	b29b      	uxth	r3, r3
 800390e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003912:	4576      	cmp	r6, lr
 8003914:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003918:	f849 3b04 	str.w	r3, [r9], #4
 800391c:	d8e6      	bhi.n	80038ec <__mdiff+0x88>
 800391e:	1b33      	subs	r3, r6, r4
 8003920:	3b15      	subs	r3, #21
 8003922:	f023 0303 	bic.w	r3, r3, #3
 8003926:	3415      	adds	r4, #21
 8003928:	3304      	adds	r3, #4
 800392a:	42a6      	cmp	r6, r4
 800392c:	bf38      	it	cc
 800392e:	2304      	movcc	r3, #4
 8003930:	441d      	add	r5, r3
 8003932:	445b      	add	r3, fp
 8003934:	461e      	mov	r6, r3
 8003936:	462c      	mov	r4, r5
 8003938:	4544      	cmp	r4, r8
 800393a:	d30e      	bcc.n	800395a <__mdiff+0xf6>
 800393c:	f108 0103 	add.w	r1, r8, #3
 8003940:	1b49      	subs	r1, r1, r5
 8003942:	f021 0103 	bic.w	r1, r1, #3
 8003946:	3d03      	subs	r5, #3
 8003948:	45a8      	cmp	r8, r5
 800394a:	bf38      	it	cc
 800394c:	2100      	movcc	r1, #0
 800394e:	440b      	add	r3, r1
 8003950:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003954:	b199      	cbz	r1, 800397e <__mdiff+0x11a>
 8003956:	6117      	str	r7, [r2, #16]
 8003958:	e79e      	b.n	8003898 <__mdiff+0x34>
 800395a:	46e6      	mov	lr, ip
 800395c:	f854 1b04 	ldr.w	r1, [r4], #4
 8003960:	fa1f fc81 	uxth.w	ip, r1
 8003964:	44f4      	add	ip, lr
 8003966:	0c08      	lsrs	r0, r1, #16
 8003968:	4471      	add	r1, lr
 800396a:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800396e:	b289      	uxth	r1, r1
 8003970:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003974:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003978:	f846 1b04 	str.w	r1, [r6], #4
 800397c:	e7dc      	b.n	8003938 <__mdiff+0xd4>
 800397e:	3f01      	subs	r7, #1
 8003980:	e7e6      	b.n	8003950 <__mdiff+0xec>
 8003982:	bf00      	nop
 8003984:	080046c6 	.word	0x080046c6
 8003988:	0800474e 	.word	0x0800474e

0800398c <__ulp>:
 800398c:	4b0e      	ldr	r3, [pc, #56]	@ (80039c8 <__ulp+0x3c>)
 800398e:	400b      	ands	r3, r1
 8003990:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8003994:	2b00      	cmp	r3, #0
 8003996:	dc08      	bgt.n	80039aa <__ulp+0x1e>
 8003998:	425b      	negs	r3, r3
 800399a:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800399e:	ea4f 5223 	mov.w	r2, r3, asr #20
 80039a2:	da04      	bge.n	80039ae <__ulp+0x22>
 80039a4:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 80039a8:	4113      	asrs	r3, r2
 80039aa:	2200      	movs	r2, #0
 80039ac:	e008      	b.n	80039c0 <__ulp+0x34>
 80039ae:	f1a2 0314 	sub.w	r3, r2, #20
 80039b2:	2b1e      	cmp	r3, #30
 80039b4:	bfd6      	itet	le
 80039b6:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 80039ba:	2201      	movgt	r2, #1
 80039bc:	40da      	lsrle	r2, r3
 80039be:	2300      	movs	r3, #0
 80039c0:	4619      	mov	r1, r3
 80039c2:	4610      	mov	r0, r2
 80039c4:	4770      	bx	lr
 80039c6:	bf00      	nop
 80039c8:	7ff00000 	.word	0x7ff00000

080039cc <__b2d>:
 80039cc:	6902      	ldr	r2, [r0, #16]
 80039ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80039d0:	f100 0614 	add.w	r6, r0, #20
 80039d4:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 80039d8:	f852 4c04 	ldr.w	r4, [r2, #-4]
 80039dc:	4f1e      	ldr	r7, [pc, #120]	@ (8003a58 <__b2d+0x8c>)
 80039de:	4620      	mov	r0, r4
 80039e0:	f7ff fd5a 	bl	8003498 <__hi0bits>
 80039e4:	4603      	mov	r3, r0
 80039e6:	f1c0 0020 	rsb	r0, r0, #32
 80039ea:	2b0a      	cmp	r3, #10
 80039ec:	f1a2 0504 	sub.w	r5, r2, #4
 80039f0:	6008      	str	r0, [r1, #0]
 80039f2:	dc12      	bgt.n	8003a1a <__b2d+0x4e>
 80039f4:	42ae      	cmp	r6, r5
 80039f6:	bf2c      	ite	cs
 80039f8:	2200      	movcs	r2, #0
 80039fa:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 80039fe:	f1c3 0c0b 	rsb	ip, r3, #11
 8003a02:	3315      	adds	r3, #21
 8003a04:	fa24 fe0c 	lsr.w	lr, r4, ip
 8003a08:	fa04 f303 	lsl.w	r3, r4, r3
 8003a0c:	fa22 f20c 	lsr.w	r2, r2, ip
 8003a10:	ea4e 0107 	orr.w	r1, lr, r7
 8003a14:	431a      	orrs	r2, r3
 8003a16:	4610      	mov	r0, r2
 8003a18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003a1a:	42ae      	cmp	r6, r5
 8003a1c:	bf36      	itet	cc
 8003a1e:	f1a2 0508 	subcc.w	r5, r2, #8
 8003a22:	2200      	movcs	r2, #0
 8003a24:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8003a28:	3b0b      	subs	r3, #11
 8003a2a:	d012      	beq.n	8003a52 <__b2d+0x86>
 8003a2c:	f1c3 0720 	rsb	r7, r3, #32
 8003a30:	fa22 f107 	lsr.w	r1, r2, r7
 8003a34:	409c      	lsls	r4, r3
 8003a36:	430c      	orrs	r4, r1
 8003a38:	42b5      	cmp	r5, r6
 8003a3a:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 8003a3e:	bf94      	ite	ls
 8003a40:	2400      	movls	r4, #0
 8003a42:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 8003a46:	409a      	lsls	r2, r3
 8003a48:	40fc      	lsrs	r4, r7
 8003a4a:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 8003a4e:	4322      	orrs	r2, r4
 8003a50:	e7e1      	b.n	8003a16 <__b2d+0x4a>
 8003a52:	ea44 0107 	orr.w	r1, r4, r7
 8003a56:	e7de      	b.n	8003a16 <__b2d+0x4a>
 8003a58:	3ff00000 	.word	0x3ff00000

08003a5c <__d2b>:
 8003a5c:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003a60:	2101      	movs	r1, #1
 8003a62:	4690      	mov	r8, r2
 8003a64:	4699      	mov	r9, r3
 8003a66:	9e08      	ldr	r6, [sp, #32]
 8003a68:	f7ff fc24 	bl	80032b4 <_Balloc>
 8003a6c:	4604      	mov	r4, r0
 8003a6e:	b930      	cbnz	r0, 8003a7e <__d2b+0x22>
 8003a70:	4602      	mov	r2, r0
 8003a72:	f240 310f 	movw	r1, #783	@ 0x30f
 8003a76:	4b23      	ldr	r3, [pc, #140]	@ (8003b04 <__d2b+0xa8>)
 8003a78:	4823      	ldr	r0, [pc, #140]	@ (8003b08 <__d2b+0xac>)
 8003a7a:	f000 f981 	bl	8003d80 <__assert_func>
 8003a7e:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003a82:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003a86:	b10d      	cbz	r5, 8003a8c <__d2b+0x30>
 8003a88:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003a8c:	9301      	str	r3, [sp, #4]
 8003a8e:	f1b8 0300 	subs.w	r3, r8, #0
 8003a92:	d024      	beq.n	8003ade <__d2b+0x82>
 8003a94:	4668      	mov	r0, sp
 8003a96:	9300      	str	r3, [sp, #0]
 8003a98:	f7ff fd1d 	bl	80034d6 <__lo0bits>
 8003a9c:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003aa0:	b1d8      	cbz	r0, 8003ada <__d2b+0x7e>
 8003aa2:	f1c0 0320 	rsb	r3, r0, #32
 8003aa6:	fa02 f303 	lsl.w	r3, r2, r3
 8003aaa:	430b      	orrs	r3, r1
 8003aac:	40c2      	lsrs	r2, r0
 8003aae:	6163      	str	r3, [r4, #20]
 8003ab0:	9201      	str	r2, [sp, #4]
 8003ab2:	9b01      	ldr	r3, [sp, #4]
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	bf0c      	ite	eq
 8003ab8:	2201      	moveq	r2, #1
 8003aba:	2202      	movne	r2, #2
 8003abc:	61a3      	str	r3, [r4, #24]
 8003abe:	6122      	str	r2, [r4, #16]
 8003ac0:	b1ad      	cbz	r5, 8003aee <__d2b+0x92>
 8003ac2:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003ac6:	4405      	add	r5, r0
 8003ac8:	6035      	str	r5, [r6, #0]
 8003aca:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003ace:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003ad0:	6018      	str	r0, [r3, #0]
 8003ad2:	4620      	mov	r0, r4
 8003ad4:	b002      	add	sp, #8
 8003ad6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8003ada:	6161      	str	r1, [r4, #20]
 8003adc:	e7e9      	b.n	8003ab2 <__d2b+0x56>
 8003ade:	a801      	add	r0, sp, #4
 8003ae0:	f7ff fcf9 	bl	80034d6 <__lo0bits>
 8003ae4:	9b01      	ldr	r3, [sp, #4]
 8003ae6:	2201      	movs	r2, #1
 8003ae8:	6163      	str	r3, [r4, #20]
 8003aea:	3020      	adds	r0, #32
 8003aec:	e7e7      	b.n	8003abe <__d2b+0x62>
 8003aee:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003af2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003af6:	6030      	str	r0, [r6, #0]
 8003af8:	6918      	ldr	r0, [r3, #16]
 8003afa:	f7ff fccd 	bl	8003498 <__hi0bits>
 8003afe:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003b02:	e7e4      	b.n	8003ace <__d2b+0x72>
 8003b04:	080046c6 	.word	0x080046c6
 8003b08:	0800474e 	.word	0x0800474e

08003b0c <__ratio>:
 8003b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b10:	b085      	sub	sp, #20
 8003b12:	e9cd 1000 	strd	r1, r0, [sp]
 8003b16:	a902      	add	r1, sp, #8
 8003b18:	f7ff ff58 	bl	80039cc <__b2d>
 8003b1c:	468b      	mov	fp, r1
 8003b1e:	4606      	mov	r6, r0
 8003b20:	460f      	mov	r7, r1
 8003b22:	9800      	ldr	r0, [sp, #0]
 8003b24:	a903      	add	r1, sp, #12
 8003b26:	f7ff ff51 	bl	80039cc <__b2d>
 8003b2a:	460d      	mov	r5, r1
 8003b2c:	9b01      	ldr	r3, [sp, #4]
 8003b2e:	4689      	mov	r9, r1
 8003b30:	6919      	ldr	r1, [r3, #16]
 8003b32:	9b00      	ldr	r3, [sp, #0]
 8003b34:	4604      	mov	r4, r0
 8003b36:	691b      	ldr	r3, [r3, #16]
 8003b38:	4630      	mov	r0, r6
 8003b3a:	1ac9      	subs	r1, r1, r3
 8003b3c:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8003b40:	1a9b      	subs	r3, r3, r2
 8003b42:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	bfcd      	iteet	gt
 8003b4a:	463a      	movgt	r2, r7
 8003b4c:	462a      	movle	r2, r5
 8003b4e:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8003b52:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8003b56:	bfd8      	it	le
 8003b58:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8003b5c:	464b      	mov	r3, r9
 8003b5e:	4622      	mov	r2, r4
 8003b60:	4659      	mov	r1, fp
 8003b62:	f7fc fddb 	bl	800071c <__aeabi_ddiv>
 8003b66:	b005      	add	sp, #20
 8003b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003b6c <__copybits>:
 8003b6c:	3901      	subs	r1, #1
 8003b6e:	b570      	push	{r4, r5, r6, lr}
 8003b70:	1149      	asrs	r1, r1, #5
 8003b72:	6914      	ldr	r4, [r2, #16]
 8003b74:	3101      	adds	r1, #1
 8003b76:	f102 0314 	add.w	r3, r2, #20
 8003b7a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8003b7e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8003b82:	1f05      	subs	r5, r0, #4
 8003b84:	42a3      	cmp	r3, r4
 8003b86:	d30c      	bcc.n	8003ba2 <__copybits+0x36>
 8003b88:	1aa3      	subs	r3, r4, r2
 8003b8a:	3b11      	subs	r3, #17
 8003b8c:	f023 0303 	bic.w	r3, r3, #3
 8003b90:	3211      	adds	r2, #17
 8003b92:	42a2      	cmp	r2, r4
 8003b94:	bf88      	it	hi
 8003b96:	2300      	movhi	r3, #0
 8003b98:	4418      	add	r0, r3
 8003b9a:	2300      	movs	r3, #0
 8003b9c:	4288      	cmp	r0, r1
 8003b9e:	d305      	bcc.n	8003bac <__copybits+0x40>
 8003ba0:	bd70      	pop	{r4, r5, r6, pc}
 8003ba2:	f853 6b04 	ldr.w	r6, [r3], #4
 8003ba6:	f845 6f04 	str.w	r6, [r5, #4]!
 8003baa:	e7eb      	b.n	8003b84 <__copybits+0x18>
 8003bac:	f840 3b04 	str.w	r3, [r0], #4
 8003bb0:	e7f4      	b.n	8003b9c <__copybits+0x30>

08003bb2 <__any_on>:
 8003bb2:	f100 0214 	add.w	r2, r0, #20
 8003bb6:	6900      	ldr	r0, [r0, #16]
 8003bb8:	114b      	asrs	r3, r1, #5
 8003bba:	4298      	cmp	r0, r3
 8003bbc:	b510      	push	{r4, lr}
 8003bbe:	db11      	blt.n	8003be4 <__any_on+0x32>
 8003bc0:	dd0a      	ble.n	8003bd8 <__any_on+0x26>
 8003bc2:	f011 011f 	ands.w	r1, r1, #31
 8003bc6:	d007      	beq.n	8003bd8 <__any_on+0x26>
 8003bc8:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8003bcc:	fa24 f001 	lsr.w	r0, r4, r1
 8003bd0:	fa00 f101 	lsl.w	r1, r0, r1
 8003bd4:	428c      	cmp	r4, r1
 8003bd6:	d10b      	bne.n	8003bf0 <__any_on+0x3e>
 8003bd8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8003bdc:	4293      	cmp	r3, r2
 8003bde:	d803      	bhi.n	8003be8 <__any_on+0x36>
 8003be0:	2000      	movs	r0, #0
 8003be2:	bd10      	pop	{r4, pc}
 8003be4:	4603      	mov	r3, r0
 8003be6:	e7f7      	b.n	8003bd8 <__any_on+0x26>
 8003be8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003bec:	2900      	cmp	r1, #0
 8003bee:	d0f5      	beq.n	8003bdc <__any_on+0x2a>
 8003bf0:	2001      	movs	r0, #1
 8003bf2:	e7f6      	b.n	8003be2 <__any_on+0x30>

08003bf4 <__ascii_wctomb>:
 8003bf4:	4603      	mov	r3, r0
 8003bf6:	4608      	mov	r0, r1
 8003bf8:	b141      	cbz	r1, 8003c0c <__ascii_wctomb+0x18>
 8003bfa:	2aff      	cmp	r2, #255	@ 0xff
 8003bfc:	d904      	bls.n	8003c08 <__ascii_wctomb+0x14>
 8003bfe:	228a      	movs	r2, #138	@ 0x8a
 8003c00:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003c04:	601a      	str	r2, [r3, #0]
 8003c06:	4770      	bx	lr
 8003c08:	2001      	movs	r0, #1
 8003c0a:	700a      	strb	r2, [r1, #0]
 8003c0c:	4770      	bx	lr
	...

08003c10 <__sflush_r>:
 8003c10:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003c14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c16:	0716      	lsls	r6, r2, #28
 8003c18:	4605      	mov	r5, r0
 8003c1a:	460c      	mov	r4, r1
 8003c1c:	d454      	bmi.n	8003cc8 <__sflush_r+0xb8>
 8003c1e:	684b      	ldr	r3, [r1, #4]
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	dc02      	bgt.n	8003c2a <__sflush_r+0x1a>
 8003c24:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003c26:	2b00      	cmp	r3, #0
 8003c28:	dd48      	ble.n	8003cbc <__sflush_r+0xac>
 8003c2a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003c2c:	2e00      	cmp	r6, #0
 8003c2e:	d045      	beq.n	8003cbc <__sflush_r+0xac>
 8003c30:	2300      	movs	r3, #0
 8003c32:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003c36:	682f      	ldr	r7, [r5, #0]
 8003c38:	6a21      	ldr	r1, [r4, #32]
 8003c3a:	602b      	str	r3, [r5, #0]
 8003c3c:	d030      	beq.n	8003ca0 <__sflush_r+0x90>
 8003c3e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003c40:	89a3      	ldrh	r3, [r4, #12]
 8003c42:	0759      	lsls	r1, r3, #29
 8003c44:	d505      	bpl.n	8003c52 <__sflush_r+0x42>
 8003c46:	6863      	ldr	r3, [r4, #4]
 8003c48:	1ad2      	subs	r2, r2, r3
 8003c4a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003c4c:	b10b      	cbz	r3, 8003c52 <__sflush_r+0x42>
 8003c4e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003c50:	1ad2      	subs	r2, r2, r3
 8003c52:	2300      	movs	r3, #0
 8003c54:	4628      	mov	r0, r5
 8003c56:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003c58:	6a21      	ldr	r1, [r4, #32]
 8003c5a:	47b0      	blx	r6
 8003c5c:	1c43      	adds	r3, r0, #1
 8003c5e:	89a3      	ldrh	r3, [r4, #12]
 8003c60:	d106      	bne.n	8003c70 <__sflush_r+0x60>
 8003c62:	6829      	ldr	r1, [r5, #0]
 8003c64:	291d      	cmp	r1, #29
 8003c66:	d82b      	bhi.n	8003cc0 <__sflush_r+0xb0>
 8003c68:	4a28      	ldr	r2, [pc, #160]	@ (8003d0c <__sflush_r+0xfc>)
 8003c6a:	40ca      	lsrs	r2, r1
 8003c6c:	07d6      	lsls	r6, r2, #31
 8003c6e:	d527      	bpl.n	8003cc0 <__sflush_r+0xb0>
 8003c70:	2200      	movs	r2, #0
 8003c72:	6062      	str	r2, [r4, #4]
 8003c74:	6922      	ldr	r2, [r4, #16]
 8003c76:	04d9      	lsls	r1, r3, #19
 8003c78:	6022      	str	r2, [r4, #0]
 8003c7a:	d504      	bpl.n	8003c86 <__sflush_r+0x76>
 8003c7c:	1c42      	adds	r2, r0, #1
 8003c7e:	d101      	bne.n	8003c84 <__sflush_r+0x74>
 8003c80:	682b      	ldr	r3, [r5, #0]
 8003c82:	b903      	cbnz	r3, 8003c86 <__sflush_r+0x76>
 8003c84:	6560      	str	r0, [r4, #84]	@ 0x54
 8003c86:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003c88:	602f      	str	r7, [r5, #0]
 8003c8a:	b1b9      	cbz	r1, 8003cbc <__sflush_r+0xac>
 8003c8c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003c90:	4299      	cmp	r1, r3
 8003c92:	d002      	beq.n	8003c9a <__sflush_r+0x8a>
 8003c94:	4628      	mov	r0, r5
 8003c96:	f7fe fecb 	bl	8002a30 <_free_r>
 8003c9a:	2300      	movs	r3, #0
 8003c9c:	6363      	str	r3, [r4, #52]	@ 0x34
 8003c9e:	e00d      	b.n	8003cbc <__sflush_r+0xac>
 8003ca0:	2301      	movs	r3, #1
 8003ca2:	4628      	mov	r0, r5
 8003ca4:	47b0      	blx	r6
 8003ca6:	4602      	mov	r2, r0
 8003ca8:	1c50      	adds	r0, r2, #1
 8003caa:	d1c9      	bne.n	8003c40 <__sflush_r+0x30>
 8003cac:	682b      	ldr	r3, [r5, #0]
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d0c6      	beq.n	8003c40 <__sflush_r+0x30>
 8003cb2:	2b1d      	cmp	r3, #29
 8003cb4:	d001      	beq.n	8003cba <__sflush_r+0xaa>
 8003cb6:	2b16      	cmp	r3, #22
 8003cb8:	d11d      	bne.n	8003cf6 <__sflush_r+0xe6>
 8003cba:	602f      	str	r7, [r5, #0]
 8003cbc:	2000      	movs	r0, #0
 8003cbe:	e021      	b.n	8003d04 <__sflush_r+0xf4>
 8003cc0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003cc4:	b21b      	sxth	r3, r3
 8003cc6:	e01a      	b.n	8003cfe <__sflush_r+0xee>
 8003cc8:	690f      	ldr	r7, [r1, #16]
 8003cca:	2f00      	cmp	r7, #0
 8003ccc:	d0f6      	beq.n	8003cbc <__sflush_r+0xac>
 8003cce:	0793      	lsls	r3, r2, #30
 8003cd0:	bf18      	it	ne
 8003cd2:	2300      	movne	r3, #0
 8003cd4:	680e      	ldr	r6, [r1, #0]
 8003cd6:	bf08      	it	eq
 8003cd8:	694b      	ldreq	r3, [r1, #20]
 8003cda:	1bf6      	subs	r6, r6, r7
 8003cdc:	600f      	str	r7, [r1, #0]
 8003cde:	608b      	str	r3, [r1, #8]
 8003ce0:	2e00      	cmp	r6, #0
 8003ce2:	ddeb      	ble.n	8003cbc <__sflush_r+0xac>
 8003ce4:	4633      	mov	r3, r6
 8003ce6:	463a      	mov	r2, r7
 8003ce8:	4628      	mov	r0, r5
 8003cea:	6a21      	ldr	r1, [r4, #32]
 8003cec:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8003cf0:	47e0      	blx	ip
 8003cf2:	2800      	cmp	r0, #0
 8003cf4:	dc07      	bgt.n	8003d06 <__sflush_r+0xf6>
 8003cf6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003cfa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003cfe:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003d02:	81a3      	strh	r3, [r4, #12]
 8003d04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d06:	4407      	add	r7, r0
 8003d08:	1a36      	subs	r6, r6, r0
 8003d0a:	e7e9      	b.n	8003ce0 <__sflush_r+0xd0>
 8003d0c:	20400001 	.word	0x20400001

08003d10 <_fflush_r>:
 8003d10:	b538      	push	{r3, r4, r5, lr}
 8003d12:	690b      	ldr	r3, [r1, #16]
 8003d14:	4605      	mov	r5, r0
 8003d16:	460c      	mov	r4, r1
 8003d18:	b913      	cbnz	r3, 8003d20 <_fflush_r+0x10>
 8003d1a:	2500      	movs	r5, #0
 8003d1c:	4628      	mov	r0, r5
 8003d1e:	bd38      	pop	{r3, r4, r5, pc}
 8003d20:	b118      	cbz	r0, 8003d2a <_fflush_r+0x1a>
 8003d22:	6a03      	ldr	r3, [r0, #32]
 8003d24:	b90b      	cbnz	r3, 8003d2a <_fflush_r+0x1a>
 8003d26:	f7fe fd67 	bl	80027f8 <__sinit>
 8003d2a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d0f3      	beq.n	8003d1a <_fflush_r+0xa>
 8003d32:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003d34:	07d0      	lsls	r0, r2, #31
 8003d36:	d404      	bmi.n	8003d42 <_fflush_r+0x32>
 8003d38:	0599      	lsls	r1, r3, #22
 8003d3a:	d402      	bmi.n	8003d42 <_fflush_r+0x32>
 8003d3c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003d3e:	f7fe fe60 	bl	8002a02 <__retarget_lock_acquire_recursive>
 8003d42:	4628      	mov	r0, r5
 8003d44:	4621      	mov	r1, r4
 8003d46:	f7ff ff63 	bl	8003c10 <__sflush_r>
 8003d4a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003d4c:	4605      	mov	r5, r0
 8003d4e:	07da      	lsls	r2, r3, #31
 8003d50:	d4e4      	bmi.n	8003d1c <_fflush_r+0xc>
 8003d52:	89a3      	ldrh	r3, [r4, #12]
 8003d54:	059b      	lsls	r3, r3, #22
 8003d56:	d4e1      	bmi.n	8003d1c <_fflush_r+0xc>
 8003d58:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003d5a:	f7fe fe53 	bl	8002a04 <__retarget_lock_release_recursive>
 8003d5e:	e7dd      	b.n	8003d1c <_fflush_r+0xc>

08003d60 <_sbrk_r>:
 8003d60:	b538      	push	{r3, r4, r5, lr}
 8003d62:	2300      	movs	r3, #0
 8003d64:	4d05      	ldr	r5, [pc, #20]	@ (8003d7c <_sbrk_r+0x1c>)
 8003d66:	4604      	mov	r4, r0
 8003d68:	4608      	mov	r0, r1
 8003d6a:	602b      	str	r3, [r5, #0]
 8003d6c:	f7fd fb3c 	bl	80013e8 <_sbrk>
 8003d70:	1c43      	adds	r3, r0, #1
 8003d72:	d102      	bne.n	8003d7a <_sbrk_r+0x1a>
 8003d74:	682b      	ldr	r3, [r5, #0]
 8003d76:	b103      	cbz	r3, 8003d7a <_sbrk_r+0x1a>
 8003d78:	6023      	str	r3, [r4, #0]
 8003d7a:	bd38      	pop	{r3, r4, r5, pc}
 8003d7c:	200003a0 	.word	0x200003a0

08003d80 <__assert_func>:
 8003d80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003d82:	4614      	mov	r4, r2
 8003d84:	461a      	mov	r2, r3
 8003d86:	4b09      	ldr	r3, [pc, #36]	@ (8003dac <__assert_func+0x2c>)
 8003d88:	4605      	mov	r5, r0
 8003d8a:	681b      	ldr	r3, [r3, #0]
 8003d8c:	68d8      	ldr	r0, [r3, #12]
 8003d8e:	b14c      	cbz	r4, 8003da4 <__assert_func+0x24>
 8003d90:	4b07      	ldr	r3, [pc, #28]	@ (8003db0 <__assert_func+0x30>)
 8003d92:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003d96:	9100      	str	r1, [sp, #0]
 8003d98:	462b      	mov	r3, r5
 8003d9a:	4906      	ldr	r1, [pc, #24]	@ (8003db4 <__assert_func+0x34>)
 8003d9c:	f000 f82a 	bl	8003df4 <fiprintf>
 8003da0:	f000 f83a 	bl	8003e18 <abort>
 8003da4:	4b04      	ldr	r3, [pc, #16]	@ (8003db8 <__assert_func+0x38>)
 8003da6:	461c      	mov	r4, r3
 8003da8:	e7f3      	b.n	8003d92 <__assert_func+0x12>
 8003daa:	bf00      	nop
 8003dac:	2000017c 	.word	0x2000017c
 8003db0:	080047a7 	.word	0x080047a7
 8003db4:	080047b4 	.word	0x080047b4
 8003db8:	080047e2 	.word	0x080047e2

08003dbc <_calloc_r>:
 8003dbc:	b570      	push	{r4, r5, r6, lr}
 8003dbe:	fba1 5402 	umull	r5, r4, r1, r2
 8003dc2:	b934      	cbnz	r4, 8003dd2 <_calloc_r+0x16>
 8003dc4:	4629      	mov	r1, r5
 8003dc6:	f7ff f9d7 	bl	8003178 <_malloc_r>
 8003dca:	4606      	mov	r6, r0
 8003dcc:	b928      	cbnz	r0, 8003dda <_calloc_r+0x1e>
 8003dce:	4630      	mov	r0, r6
 8003dd0:	bd70      	pop	{r4, r5, r6, pc}
 8003dd2:	220c      	movs	r2, #12
 8003dd4:	2600      	movs	r6, #0
 8003dd6:	6002      	str	r2, [r0, #0]
 8003dd8:	e7f9      	b.n	8003dce <_calloc_r+0x12>
 8003dda:	462a      	mov	r2, r5
 8003ddc:	4621      	mov	r1, r4
 8003dde:	f7fe fd84 	bl	80028ea <memset>
 8003de2:	e7f4      	b.n	8003dce <_calloc_r+0x12>

08003de4 <malloc>:
 8003de4:	4b02      	ldr	r3, [pc, #8]	@ (8003df0 <malloc+0xc>)
 8003de6:	4601      	mov	r1, r0
 8003de8:	6818      	ldr	r0, [r3, #0]
 8003dea:	f7ff b9c5 	b.w	8003178 <_malloc_r>
 8003dee:	bf00      	nop
 8003df0:	2000017c 	.word	0x2000017c

08003df4 <fiprintf>:
 8003df4:	b40e      	push	{r1, r2, r3}
 8003df6:	b503      	push	{r0, r1, lr}
 8003df8:	4601      	mov	r1, r0
 8003dfa:	ab03      	add	r3, sp, #12
 8003dfc:	4805      	ldr	r0, [pc, #20]	@ (8003e14 <fiprintf+0x20>)
 8003dfe:	f853 2b04 	ldr.w	r2, [r3], #4
 8003e02:	6800      	ldr	r0, [r0, #0]
 8003e04:	9301      	str	r3, [sp, #4]
 8003e06:	f000 f835 	bl	8003e74 <_vfiprintf_r>
 8003e0a:	b002      	add	sp, #8
 8003e0c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003e10:	b003      	add	sp, #12
 8003e12:	4770      	bx	lr
 8003e14:	2000017c 	.word	0x2000017c

08003e18 <abort>:
 8003e18:	2006      	movs	r0, #6
 8003e1a:	b508      	push	{r3, lr}
 8003e1c:	f000 fb8e 	bl	800453c <raise>
 8003e20:	2001      	movs	r0, #1
 8003e22:	f7fd fa6c 	bl	80012fe <_exit>

08003e26 <__sfputc_r>:
 8003e26:	6893      	ldr	r3, [r2, #8]
 8003e28:	b410      	push	{r4}
 8003e2a:	3b01      	subs	r3, #1
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	6093      	str	r3, [r2, #8]
 8003e30:	da07      	bge.n	8003e42 <__sfputc_r+0x1c>
 8003e32:	6994      	ldr	r4, [r2, #24]
 8003e34:	42a3      	cmp	r3, r4
 8003e36:	db01      	blt.n	8003e3c <__sfputc_r+0x16>
 8003e38:	290a      	cmp	r1, #10
 8003e3a:	d102      	bne.n	8003e42 <__sfputc_r+0x1c>
 8003e3c:	bc10      	pop	{r4}
 8003e3e:	f000 bac1 	b.w	80043c4 <__swbuf_r>
 8003e42:	6813      	ldr	r3, [r2, #0]
 8003e44:	1c58      	adds	r0, r3, #1
 8003e46:	6010      	str	r0, [r2, #0]
 8003e48:	7019      	strb	r1, [r3, #0]
 8003e4a:	4608      	mov	r0, r1
 8003e4c:	bc10      	pop	{r4}
 8003e4e:	4770      	bx	lr

08003e50 <__sfputs_r>:
 8003e50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e52:	4606      	mov	r6, r0
 8003e54:	460f      	mov	r7, r1
 8003e56:	4614      	mov	r4, r2
 8003e58:	18d5      	adds	r5, r2, r3
 8003e5a:	42ac      	cmp	r4, r5
 8003e5c:	d101      	bne.n	8003e62 <__sfputs_r+0x12>
 8003e5e:	2000      	movs	r0, #0
 8003e60:	e007      	b.n	8003e72 <__sfputs_r+0x22>
 8003e62:	463a      	mov	r2, r7
 8003e64:	4630      	mov	r0, r6
 8003e66:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e6a:	f7ff ffdc 	bl	8003e26 <__sfputc_r>
 8003e6e:	1c43      	adds	r3, r0, #1
 8003e70:	d1f3      	bne.n	8003e5a <__sfputs_r+0xa>
 8003e72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003e74 <_vfiprintf_r>:
 8003e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e78:	460d      	mov	r5, r1
 8003e7a:	4614      	mov	r4, r2
 8003e7c:	4698      	mov	r8, r3
 8003e7e:	4606      	mov	r6, r0
 8003e80:	b09d      	sub	sp, #116	@ 0x74
 8003e82:	b118      	cbz	r0, 8003e8c <_vfiprintf_r+0x18>
 8003e84:	6a03      	ldr	r3, [r0, #32]
 8003e86:	b90b      	cbnz	r3, 8003e8c <_vfiprintf_r+0x18>
 8003e88:	f7fe fcb6 	bl	80027f8 <__sinit>
 8003e8c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003e8e:	07d9      	lsls	r1, r3, #31
 8003e90:	d405      	bmi.n	8003e9e <_vfiprintf_r+0x2a>
 8003e92:	89ab      	ldrh	r3, [r5, #12]
 8003e94:	059a      	lsls	r2, r3, #22
 8003e96:	d402      	bmi.n	8003e9e <_vfiprintf_r+0x2a>
 8003e98:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003e9a:	f7fe fdb2 	bl	8002a02 <__retarget_lock_acquire_recursive>
 8003e9e:	89ab      	ldrh	r3, [r5, #12]
 8003ea0:	071b      	lsls	r3, r3, #28
 8003ea2:	d501      	bpl.n	8003ea8 <_vfiprintf_r+0x34>
 8003ea4:	692b      	ldr	r3, [r5, #16]
 8003ea6:	b99b      	cbnz	r3, 8003ed0 <_vfiprintf_r+0x5c>
 8003ea8:	4629      	mov	r1, r5
 8003eaa:	4630      	mov	r0, r6
 8003eac:	f000 fac8 	bl	8004440 <__swsetup_r>
 8003eb0:	b170      	cbz	r0, 8003ed0 <_vfiprintf_r+0x5c>
 8003eb2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003eb4:	07dc      	lsls	r4, r3, #31
 8003eb6:	d504      	bpl.n	8003ec2 <_vfiprintf_r+0x4e>
 8003eb8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003ebc:	b01d      	add	sp, #116	@ 0x74
 8003ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ec2:	89ab      	ldrh	r3, [r5, #12]
 8003ec4:	0598      	lsls	r0, r3, #22
 8003ec6:	d4f7      	bmi.n	8003eb8 <_vfiprintf_r+0x44>
 8003ec8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003eca:	f7fe fd9b 	bl	8002a04 <__retarget_lock_release_recursive>
 8003ece:	e7f3      	b.n	8003eb8 <_vfiprintf_r+0x44>
 8003ed0:	2300      	movs	r3, #0
 8003ed2:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ed4:	2320      	movs	r3, #32
 8003ed6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003eda:	2330      	movs	r3, #48	@ 0x30
 8003edc:	f04f 0901 	mov.w	r9, #1
 8003ee0:	f8cd 800c 	str.w	r8, [sp, #12]
 8003ee4:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8004090 <_vfiprintf_r+0x21c>
 8003ee8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003eec:	4623      	mov	r3, r4
 8003eee:	469a      	mov	sl, r3
 8003ef0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003ef4:	b10a      	cbz	r2, 8003efa <_vfiprintf_r+0x86>
 8003ef6:	2a25      	cmp	r2, #37	@ 0x25
 8003ef8:	d1f9      	bne.n	8003eee <_vfiprintf_r+0x7a>
 8003efa:	ebba 0b04 	subs.w	fp, sl, r4
 8003efe:	d00b      	beq.n	8003f18 <_vfiprintf_r+0xa4>
 8003f00:	465b      	mov	r3, fp
 8003f02:	4622      	mov	r2, r4
 8003f04:	4629      	mov	r1, r5
 8003f06:	4630      	mov	r0, r6
 8003f08:	f7ff ffa2 	bl	8003e50 <__sfputs_r>
 8003f0c:	3001      	adds	r0, #1
 8003f0e:	f000 80a7 	beq.w	8004060 <_vfiprintf_r+0x1ec>
 8003f12:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003f14:	445a      	add	r2, fp
 8003f16:	9209      	str	r2, [sp, #36]	@ 0x24
 8003f18:	f89a 3000 	ldrb.w	r3, [sl]
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	f000 809f 	beq.w	8004060 <_vfiprintf_r+0x1ec>
 8003f22:	2300      	movs	r3, #0
 8003f24:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003f28:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003f2c:	f10a 0a01 	add.w	sl, sl, #1
 8003f30:	9304      	str	r3, [sp, #16]
 8003f32:	9307      	str	r3, [sp, #28]
 8003f34:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003f38:	931a      	str	r3, [sp, #104]	@ 0x68
 8003f3a:	4654      	mov	r4, sl
 8003f3c:	2205      	movs	r2, #5
 8003f3e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f42:	4853      	ldr	r0, [pc, #332]	@ (8004090 <_vfiprintf_r+0x21c>)
 8003f44:	f000 fb16 	bl	8004574 <memchr>
 8003f48:	9a04      	ldr	r2, [sp, #16]
 8003f4a:	b9d8      	cbnz	r0, 8003f84 <_vfiprintf_r+0x110>
 8003f4c:	06d1      	lsls	r1, r2, #27
 8003f4e:	bf44      	itt	mi
 8003f50:	2320      	movmi	r3, #32
 8003f52:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003f56:	0713      	lsls	r3, r2, #28
 8003f58:	bf44      	itt	mi
 8003f5a:	232b      	movmi	r3, #43	@ 0x2b
 8003f5c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003f60:	f89a 3000 	ldrb.w	r3, [sl]
 8003f64:	2b2a      	cmp	r3, #42	@ 0x2a
 8003f66:	d015      	beq.n	8003f94 <_vfiprintf_r+0x120>
 8003f68:	4654      	mov	r4, sl
 8003f6a:	2000      	movs	r0, #0
 8003f6c:	f04f 0c0a 	mov.w	ip, #10
 8003f70:	9a07      	ldr	r2, [sp, #28]
 8003f72:	4621      	mov	r1, r4
 8003f74:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003f78:	3b30      	subs	r3, #48	@ 0x30
 8003f7a:	2b09      	cmp	r3, #9
 8003f7c:	d94b      	bls.n	8004016 <_vfiprintf_r+0x1a2>
 8003f7e:	b1b0      	cbz	r0, 8003fae <_vfiprintf_r+0x13a>
 8003f80:	9207      	str	r2, [sp, #28]
 8003f82:	e014      	b.n	8003fae <_vfiprintf_r+0x13a>
 8003f84:	eba0 0308 	sub.w	r3, r0, r8
 8003f88:	fa09 f303 	lsl.w	r3, r9, r3
 8003f8c:	4313      	orrs	r3, r2
 8003f8e:	46a2      	mov	sl, r4
 8003f90:	9304      	str	r3, [sp, #16]
 8003f92:	e7d2      	b.n	8003f3a <_vfiprintf_r+0xc6>
 8003f94:	9b03      	ldr	r3, [sp, #12]
 8003f96:	1d19      	adds	r1, r3, #4
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	9103      	str	r1, [sp, #12]
 8003f9c:	2b00      	cmp	r3, #0
 8003f9e:	bfbb      	ittet	lt
 8003fa0:	425b      	neglt	r3, r3
 8003fa2:	f042 0202 	orrlt.w	r2, r2, #2
 8003fa6:	9307      	strge	r3, [sp, #28]
 8003fa8:	9307      	strlt	r3, [sp, #28]
 8003faa:	bfb8      	it	lt
 8003fac:	9204      	strlt	r2, [sp, #16]
 8003fae:	7823      	ldrb	r3, [r4, #0]
 8003fb0:	2b2e      	cmp	r3, #46	@ 0x2e
 8003fb2:	d10a      	bne.n	8003fca <_vfiprintf_r+0x156>
 8003fb4:	7863      	ldrb	r3, [r4, #1]
 8003fb6:	2b2a      	cmp	r3, #42	@ 0x2a
 8003fb8:	d132      	bne.n	8004020 <_vfiprintf_r+0x1ac>
 8003fba:	9b03      	ldr	r3, [sp, #12]
 8003fbc:	3402      	adds	r4, #2
 8003fbe:	1d1a      	adds	r2, r3, #4
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	9203      	str	r2, [sp, #12]
 8003fc4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003fc8:	9305      	str	r3, [sp, #20]
 8003fca:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8004094 <_vfiprintf_r+0x220>
 8003fce:	2203      	movs	r2, #3
 8003fd0:	4650      	mov	r0, sl
 8003fd2:	7821      	ldrb	r1, [r4, #0]
 8003fd4:	f000 face 	bl	8004574 <memchr>
 8003fd8:	b138      	cbz	r0, 8003fea <_vfiprintf_r+0x176>
 8003fda:	2240      	movs	r2, #64	@ 0x40
 8003fdc:	9b04      	ldr	r3, [sp, #16]
 8003fde:	eba0 000a 	sub.w	r0, r0, sl
 8003fe2:	4082      	lsls	r2, r0
 8003fe4:	4313      	orrs	r3, r2
 8003fe6:	3401      	adds	r4, #1
 8003fe8:	9304      	str	r3, [sp, #16]
 8003fea:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003fee:	2206      	movs	r2, #6
 8003ff0:	4829      	ldr	r0, [pc, #164]	@ (8004098 <_vfiprintf_r+0x224>)
 8003ff2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003ff6:	f000 fabd 	bl	8004574 <memchr>
 8003ffa:	2800      	cmp	r0, #0
 8003ffc:	d03f      	beq.n	800407e <_vfiprintf_r+0x20a>
 8003ffe:	4b27      	ldr	r3, [pc, #156]	@ (800409c <_vfiprintf_r+0x228>)
 8004000:	bb1b      	cbnz	r3, 800404a <_vfiprintf_r+0x1d6>
 8004002:	9b03      	ldr	r3, [sp, #12]
 8004004:	3307      	adds	r3, #7
 8004006:	f023 0307 	bic.w	r3, r3, #7
 800400a:	3308      	adds	r3, #8
 800400c:	9303      	str	r3, [sp, #12]
 800400e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004010:	443b      	add	r3, r7
 8004012:	9309      	str	r3, [sp, #36]	@ 0x24
 8004014:	e76a      	b.n	8003eec <_vfiprintf_r+0x78>
 8004016:	460c      	mov	r4, r1
 8004018:	2001      	movs	r0, #1
 800401a:	fb0c 3202 	mla	r2, ip, r2, r3
 800401e:	e7a8      	b.n	8003f72 <_vfiprintf_r+0xfe>
 8004020:	2300      	movs	r3, #0
 8004022:	f04f 0c0a 	mov.w	ip, #10
 8004026:	4619      	mov	r1, r3
 8004028:	3401      	adds	r4, #1
 800402a:	9305      	str	r3, [sp, #20]
 800402c:	4620      	mov	r0, r4
 800402e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004032:	3a30      	subs	r2, #48	@ 0x30
 8004034:	2a09      	cmp	r2, #9
 8004036:	d903      	bls.n	8004040 <_vfiprintf_r+0x1cc>
 8004038:	2b00      	cmp	r3, #0
 800403a:	d0c6      	beq.n	8003fca <_vfiprintf_r+0x156>
 800403c:	9105      	str	r1, [sp, #20]
 800403e:	e7c4      	b.n	8003fca <_vfiprintf_r+0x156>
 8004040:	4604      	mov	r4, r0
 8004042:	2301      	movs	r3, #1
 8004044:	fb0c 2101 	mla	r1, ip, r1, r2
 8004048:	e7f0      	b.n	800402c <_vfiprintf_r+0x1b8>
 800404a:	ab03      	add	r3, sp, #12
 800404c:	9300      	str	r3, [sp, #0]
 800404e:	462a      	mov	r2, r5
 8004050:	4630      	mov	r0, r6
 8004052:	4b13      	ldr	r3, [pc, #76]	@ (80040a0 <_vfiprintf_r+0x22c>)
 8004054:	a904      	add	r1, sp, #16
 8004056:	f3af 8000 	nop.w
 800405a:	4607      	mov	r7, r0
 800405c:	1c78      	adds	r0, r7, #1
 800405e:	d1d6      	bne.n	800400e <_vfiprintf_r+0x19a>
 8004060:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004062:	07d9      	lsls	r1, r3, #31
 8004064:	d405      	bmi.n	8004072 <_vfiprintf_r+0x1fe>
 8004066:	89ab      	ldrh	r3, [r5, #12]
 8004068:	059a      	lsls	r2, r3, #22
 800406a:	d402      	bmi.n	8004072 <_vfiprintf_r+0x1fe>
 800406c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800406e:	f7fe fcc9 	bl	8002a04 <__retarget_lock_release_recursive>
 8004072:	89ab      	ldrh	r3, [r5, #12]
 8004074:	065b      	lsls	r3, r3, #25
 8004076:	f53f af1f 	bmi.w	8003eb8 <_vfiprintf_r+0x44>
 800407a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800407c:	e71e      	b.n	8003ebc <_vfiprintf_r+0x48>
 800407e:	ab03      	add	r3, sp, #12
 8004080:	9300      	str	r3, [sp, #0]
 8004082:	462a      	mov	r2, r5
 8004084:	4630      	mov	r0, r6
 8004086:	4b06      	ldr	r3, [pc, #24]	@ (80040a0 <_vfiprintf_r+0x22c>)
 8004088:	a904      	add	r1, sp, #16
 800408a:	f000 f87d 	bl	8004188 <_printf_i>
 800408e:	e7e4      	b.n	800405a <_vfiprintf_r+0x1e6>
 8004090:	080047e3 	.word	0x080047e3
 8004094:	080047e9 	.word	0x080047e9
 8004098:	080047ed 	.word	0x080047ed
 800409c:	00000000 	.word	0x00000000
 80040a0:	08003e51 	.word	0x08003e51

080040a4 <_printf_common>:
 80040a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040a8:	4616      	mov	r6, r2
 80040aa:	4698      	mov	r8, r3
 80040ac:	688a      	ldr	r2, [r1, #8]
 80040ae:	690b      	ldr	r3, [r1, #16]
 80040b0:	4607      	mov	r7, r0
 80040b2:	4293      	cmp	r3, r2
 80040b4:	bfb8      	it	lt
 80040b6:	4613      	movlt	r3, r2
 80040b8:	6033      	str	r3, [r6, #0]
 80040ba:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80040be:	460c      	mov	r4, r1
 80040c0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80040c4:	b10a      	cbz	r2, 80040ca <_printf_common+0x26>
 80040c6:	3301      	adds	r3, #1
 80040c8:	6033      	str	r3, [r6, #0]
 80040ca:	6823      	ldr	r3, [r4, #0]
 80040cc:	0699      	lsls	r1, r3, #26
 80040ce:	bf42      	ittt	mi
 80040d0:	6833      	ldrmi	r3, [r6, #0]
 80040d2:	3302      	addmi	r3, #2
 80040d4:	6033      	strmi	r3, [r6, #0]
 80040d6:	6825      	ldr	r5, [r4, #0]
 80040d8:	f015 0506 	ands.w	r5, r5, #6
 80040dc:	d106      	bne.n	80040ec <_printf_common+0x48>
 80040de:	f104 0a19 	add.w	sl, r4, #25
 80040e2:	68e3      	ldr	r3, [r4, #12]
 80040e4:	6832      	ldr	r2, [r6, #0]
 80040e6:	1a9b      	subs	r3, r3, r2
 80040e8:	42ab      	cmp	r3, r5
 80040ea:	dc2b      	bgt.n	8004144 <_printf_common+0xa0>
 80040ec:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80040f0:	6822      	ldr	r2, [r4, #0]
 80040f2:	3b00      	subs	r3, #0
 80040f4:	bf18      	it	ne
 80040f6:	2301      	movne	r3, #1
 80040f8:	0692      	lsls	r2, r2, #26
 80040fa:	d430      	bmi.n	800415e <_printf_common+0xba>
 80040fc:	4641      	mov	r1, r8
 80040fe:	4638      	mov	r0, r7
 8004100:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8004104:	47c8      	blx	r9
 8004106:	3001      	adds	r0, #1
 8004108:	d023      	beq.n	8004152 <_printf_common+0xae>
 800410a:	6823      	ldr	r3, [r4, #0]
 800410c:	6922      	ldr	r2, [r4, #16]
 800410e:	f003 0306 	and.w	r3, r3, #6
 8004112:	2b04      	cmp	r3, #4
 8004114:	bf14      	ite	ne
 8004116:	2500      	movne	r5, #0
 8004118:	6833      	ldreq	r3, [r6, #0]
 800411a:	f04f 0600 	mov.w	r6, #0
 800411e:	bf08      	it	eq
 8004120:	68e5      	ldreq	r5, [r4, #12]
 8004122:	f104 041a 	add.w	r4, r4, #26
 8004126:	bf08      	it	eq
 8004128:	1aed      	subeq	r5, r5, r3
 800412a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800412e:	bf08      	it	eq
 8004130:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004134:	4293      	cmp	r3, r2
 8004136:	bfc4      	itt	gt
 8004138:	1a9b      	subgt	r3, r3, r2
 800413a:	18ed      	addgt	r5, r5, r3
 800413c:	42b5      	cmp	r5, r6
 800413e:	d11a      	bne.n	8004176 <_printf_common+0xd2>
 8004140:	2000      	movs	r0, #0
 8004142:	e008      	b.n	8004156 <_printf_common+0xb2>
 8004144:	2301      	movs	r3, #1
 8004146:	4652      	mov	r2, sl
 8004148:	4641      	mov	r1, r8
 800414a:	4638      	mov	r0, r7
 800414c:	47c8      	blx	r9
 800414e:	3001      	adds	r0, #1
 8004150:	d103      	bne.n	800415a <_printf_common+0xb6>
 8004152:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004156:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800415a:	3501      	adds	r5, #1
 800415c:	e7c1      	b.n	80040e2 <_printf_common+0x3e>
 800415e:	2030      	movs	r0, #48	@ 0x30
 8004160:	18e1      	adds	r1, r4, r3
 8004162:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004166:	1c5a      	adds	r2, r3, #1
 8004168:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800416c:	4422      	add	r2, r4
 800416e:	3302      	adds	r3, #2
 8004170:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8004174:	e7c2      	b.n	80040fc <_printf_common+0x58>
 8004176:	2301      	movs	r3, #1
 8004178:	4622      	mov	r2, r4
 800417a:	4641      	mov	r1, r8
 800417c:	4638      	mov	r0, r7
 800417e:	47c8      	blx	r9
 8004180:	3001      	adds	r0, #1
 8004182:	d0e6      	beq.n	8004152 <_printf_common+0xae>
 8004184:	3601      	adds	r6, #1
 8004186:	e7d9      	b.n	800413c <_printf_common+0x98>

08004188 <_printf_i>:
 8004188:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800418c:	7e0f      	ldrb	r7, [r1, #24]
 800418e:	4691      	mov	r9, r2
 8004190:	2f78      	cmp	r7, #120	@ 0x78
 8004192:	4680      	mov	r8, r0
 8004194:	460c      	mov	r4, r1
 8004196:	469a      	mov	sl, r3
 8004198:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800419a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800419e:	d807      	bhi.n	80041b0 <_printf_i+0x28>
 80041a0:	2f62      	cmp	r7, #98	@ 0x62
 80041a2:	d80a      	bhi.n	80041ba <_printf_i+0x32>
 80041a4:	2f00      	cmp	r7, #0
 80041a6:	f000 80d1 	beq.w	800434c <_printf_i+0x1c4>
 80041aa:	2f58      	cmp	r7, #88	@ 0x58
 80041ac:	f000 80b8 	beq.w	8004320 <_printf_i+0x198>
 80041b0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80041b4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80041b8:	e03a      	b.n	8004230 <_printf_i+0xa8>
 80041ba:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80041be:	2b15      	cmp	r3, #21
 80041c0:	d8f6      	bhi.n	80041b0 <_printf_i+0x28>
 80041c2:	a101      	add	r1, pc, #4	@ (adr r1, 80041c8 <_printf_i+0x40>)
 80041c4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80041c8:	08004221 	.word	0x08004221
 80041cc:	08004235 	.word	0x08004235
 80041d0:	080041b1 	.word	0x080041b1
 80041d4:	080041b1 	.word	0x080041b1
 80041d8:	080041b1 	.word	0x080041b1
 80041dc:	080041b1 	.word	0x080041b1
 80041e0:	08004235 	.word	0x08004235
 80041e4:	080041b1 	.word	0x080041b1
 80041e8:	080041b1 	.word	0x080041b1
 80041ec:	080041b1 	.word	0x080041b1
 80041f0:	080041b1 	.word	0x080041b1
 80041f4:	08004333 	.word	0x08004333
 80041f8:	0800425f 	.word	0x0800425f
 80041fc:	080042ed 	.word	0x080042ed
 8004200:	080041b1 	.word	0x080041b1
 8004204:	080041b1 	.word	0x080041b1
 8004208:	08004355 	.word	0x08004355
 800420c:	080041b1 	.word	0x080041b1
 8004210:	0800425f 	.word	0x0800425f
 8004214:	080041b1 	.word	0x080041b1
 8004218:	080041b1 	.word	0x080041b1
 800421c:	080042f5 	.word	0x080042f5
 8004220:	6833      	ldr	r3, [r6, #0]
 8004222:	1d1a      	adds	r2, r3, #4
 8004224:	681b      	ldr	r3, [r3, #0]
 8004226:	6032      	str	r2, [r6, #0]
 8004228:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800422c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004230:	2301      	movs	r3, #1
 8004232:	e09c      	b.n	800436e <_printf_i+0x1e6>
 8004234:	6833      	ldr	r3, [r6, #0]
 8004236:	6820      	ldr	r0, [r4, #0]
 8004238:	1d19      	adds	r1, r3, #4
 800423a:	6031      	str	r1, [r6, #0]
 800423c:	0606      	lsls	r6, r0, #24
 800423e:	d501      	bpl.n	8004244 <_printf_i+0xbc>
 8004240:	681d      	ldr	r5, [r3, #0]
 8004242:	e003      	b.n	800424c <_printf_i+0xc4>
 8004244:	0645      	lsls	r5, r0, #25
 8004246:	d5fb      	bpl.n	8004240 <_printf_i+0xb8>
 8004248:	f9b3 5000 	ldrsh.w	r5, [r3]
 800424c:	2d00      	cmp	r5, #0
 800424e:	da03      	bge.n	8004258 <_printf_i+0xd0>
 8004250:	232d      	movs	r3, #45	@ 0x2d
 8004252:	426d      	negs	r5, r5
 8004254:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004258:	230a      	movs	r3, #10
 800425a:	4858      	ldr	r0, [pc, #352]	@ (80043bc <_printf_i+0x234>)
 800425c:	e011      	b.n	8004282 <_printf_i+0xfa>
 800425e:	6821      	ldr	r1, [r4, #0]
 8004260:	6833      	ldr	r3, [r6, #0]
 8004262:	0608      	lsls	r0, r1, #24
 8004264:	f853 5b04 	ldr.w	r5, [r3], #4
 8004268:	d402      	bmi.n	8004270 <_printf_i+0xe8>
 800426a:	0649      	lsls	r1, r1, #25
 800426c:	bf48      	it	mi
 800426e:	b2ad      	uxthmi	r5, r5
 8004270:	2f6f      	cmp	r7, #111	@ 0x6f
 8004272:	6033      	str	r3, [r6, #0]
 8004274:	bf14      	ite	ne
 8004276:	230a      	movne	r3, #10
 8004278:	2308      	moveq	r3, #8
 800427a:	4850      	ldr	r0, [pc, #320]	@ (80043bc <_printf_i+0x234>)
 800427c:	2100      	movs	r1, #0
 800427e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8004282:	6866      	ldr	r6, [r4, #4]
 8004284:	2e00      	cmp	r6, #0
 8004286:	60a6      	str	r6, [r4, #8]
 8004288:	db05      	blt.n	8004296 <_printf_i+0x10e>
 800428a:	6821      	ldr	r1, [r4, #0]
 800428c:	432e      	orrs	r6, r5
 800428e:	f021 0104 	bic.w	r1, r1, #4
 8004292:	6021      	str	r1, [r4, #0]
 8004294:	d04b      	beq.n	800432e <_printf_i+0x1a6>
 8004296:	4616      	mov	r6, r2
 8004298:	fbb5 f1f3 	udiv	r1, r5, r3
 800429c:	fb03 5711 	mls	r7, r3, r1, r5
 80042a0:	5dc7      	ldrb	r7, [r0, r7]
 80042a2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80042a6:	462f      	mov	r7, r5
 80042a8:	42bb      	cmp	r3, r7
 80042aa:	460d      	mov	r5, r1
 80042ac:	d9f4      	bls.n	8004298 <_printf_i+0x110>
 80042ae:	2b08      	cmp	r3, #8
 80042b0:	d10b      	bne.n	80042ca <_printf_i+0x142>
 80042b2:	6823      	ldr	r3, [r4, #0]
 80042b4:	07df      	lsls	r7, r3, #31
 80042b6:	d508      	bpl.n	80042ca <_printf_i+0x142>
 80042b8:	6923      	ldr	r3, [r4, #16]
 80042ba:	6861      	ldr	r1, [r4, #4]
 80042bc:	4299      	cmp	r1, r3
 80042be:	bfde      	ittt	le
 80042c0:	2330      	movle	r3, #48	@ 0x30
 80042c2:	f806 3c01 	strble.w	r3, [r6, #-1]
 80042c6:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 80042ca:	1b92      	subs	r2, r2, r6
 80042cc:	6122      	str	r2, [r4, #16]
 80042ce:	464b      	mov	r3, r9
 80042d0:	4621      	mov	r1, r4
 80042d2:	4640      	mov	r0, r8
 80042d4:	f8cd a000 	str.w	sl, [sp]
 80042d8:	aa03      	add	r2, sp, #12
 80042da:	f7ff fee3 	bl	80040a4 <_printf_common>
 80042de:	3001      	adds	r0, #1
 80042e0:	d14a      	bne.n	8004378 <_printf_i+0x1f0>
 80042e2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80042e6:	b004      	add	sp, #16
 80042e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80042ec:	6823      	ldr	r3, [r4, #0]
 80042ee:	f043 0320 	orr.w	r3, r3, #32
 80042f2:	6023      	str	r3, [r4, #0]
 80042f4:	2778      	movs	r7, #120	@ 0x78
 80042f6:	4832      	ldr	r0, [pc, #200]	@ (80043c0 <_printf_i+0x238>)
 80042f8:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80042fc:	6823      	ldr	r3, [r4, #0]
 80042fe:	6831      	ldr	r1, [r6, #0]
 8004300:	061f      	lsls	r7, r3, #24
 8004302:	f851 5b04 	ldr.w	r5, [r1], #4
 8004306:	d402      	bmi.n	800430e <_printf_i+0x186>
 8004308:	065f      	lsls	r7, r3, #25
 800430a:	bf48      	it	mi
 800430c:	b2ad      	uxthmi	r5, r5
 800430e:	6031      	str	r1, [r6, #0]
 8004310:	07d9      	lsls	r1, r3, #31
 8004312:	bf44      	itt	mi
 8004314:	f043 0320 	orrmi.w	r3, r3, #32
 8004318:	6023      	strmi	r3, [r4, #0]
 800431a:	b11d      	cbz	r5, 8004324 <_printf_i+0x19c>
 800431c:	2310      	movs	r3, #16
 800431e:	e7ad      	b.n	800427c <_printf_i+0xf4>
 8004320:	4826      	ldr	r0, [pc, #152]	@ (80043bc <_printf_i+0x234>)
 8004322:	e7e9      	b.n	80042f8 <_printf_i+0x170>
 8004324:	6823      	ldr	r3, [r4, #0]
 8004326:	f023 0320 	bic.w	r3, r3, #32
 800432a:	6023      	str	r3, [r4, #0]
 800432c:	e7f6      	b.n	800431c <_printf_i+0x194>
 800432e:	4616      	mov	r6, r2
 8004330:	e7bd      	b.n	80042ae <_printf_i+0x126>
 8004332:	6833      	ldr	r3, [r6, #0]
 8004334:	6825      	ldr	r5, [r4, #0]
 8004336:	1d18      	adds	r0, r3, #4
 8004338:	6961      	ldr	r1, [r4, #20]
 800433a:	6030      	str	r0, [r6, #0]
 800433c:	062e      	lsls	r6, r5, #24
 800433e:	681b      	ldr	r3, [r3, #0]
 8004340:	d501      	bpl.n	8004346 <_printf_i+0x1be>
 8004342:	6019      	str	r1, [r3, #0]
 8004344:	e002      	b.n	800434c <_printf_i+0x1c4>
 8004346:	0668      	lsls	r0, r5, #25
 8004348:	d5fb      	bpl.n	8004342 <_printf_i+0x1ba>
 800434a:	8019      	strh	r1, [r3, #0]
 800434c:	2300      	movs	r3, #0
 800434e:	4616      	mov	r6, r2
 8004350:	6123      	str	r3, [r4, #16]
 8004352:	e7bc      	b.n	80042ce <_printf_i+0x146>
 8004354:	6833      	ldr	r3, [r6, #0]
 8004356:	2100      	movs	r1, #0
 8004358:	1d1a      	adds	r2, r3, #4
 800435a:	6032      	str	r2, [r6, #0]
 800435c:	681e      	ldr	r6, [r3, #0]
 800435e:	6862      	ldr	r2, [r4, #4]
 8004360:	4630      	mov	r0, r6
 8004362:	f000 f907 	bl	8004574 <memchr>
 8004366:	b108      	cbz	r0, 800436c <_printf_i+0x1e4>
 8004368:	1b80      	subs	r0, r0, r6
 800436a:	6060      	str	r0, [r4, #4]
 800436c:	6863      	ldr	r3, [r4, #4]
 800436e:	6123      	str	r3, [r4, #16]
 8004370:	2300      	movs	r3, #0
 8004372:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004376:	e7aa      	b.n	80042ce <_printf_i+0x146>
 8004378:	4632      	mov	r2, r6
 800437a:	4649      	mov	r1, r9
 800437c:	4640      	mov	r0, r8
 800437e:	6923      	ldr	r3, [r4, #16]
 8004380:	47d0      	blx	sl
 8004382:	3001      	adds	r0, #1
 8004384:	d0ad      	beq.n	80042e2 <_printf_i+0x15a>
 8004386:	6823      	ldr	r3, [r4, #0]
 8004388:	079b      	lsls	r3, r3, #30
 800438a:	d413      	bmi.n	80043b4 <_printf_i+0x22c>
 800438c:	68e0      	ldr	r0, [r4, #12]
 800438e:	9b03      	ldr	r3, [sp, #12]
 8004390:	4298      	cmp	r0, r3
 8004392:	bfb8      	it	lt
 8004394:	4618      	movlt	r0, r3
 8004396:	e7a6      	b.n	80042e6 <_printf_i+0x15e>
 8004398:	2301      	movs	r3, #1
 800439a:	4632      	mov	r2, r6
 800439c:	4649      	mov	r1, r9
 800439e:	4640      	mov	r0, r8
 80043a0:	47d0      	blx	sl
 80043a2:	3001      	adds	r0, #1
 80043a4:	d09d      	beq.n	80042e2 <_printf_i+0x15a>
 80043a6:	3501      	adds	r5, #1
 80043a8:	68e3      	ldr	r3, [r4, #12]
 80043aa:	9903      	ldr	r1, [sp, #12]
 80043ac:	1a5b      	subs	r3, r3, r1
 80043ae:	42ab      	cmp	r3, r5
 80043b0:	dcf2      	bgt.n	8004398 <_printf_i+0x210>
 80043b2:	e7eb      	b.n	800438c <_printf_i+0x204>
 80043b4:	2500      	movs	r5, #0
 80043b6:	f104 0619 	add.w	r6, r4, #25
 80043ba:	e7f5      	b.n	80043a8 <_printf_i+0x220>
 80043bc:	080047f4 	.word	0x080047f4
 80043c0:	08004805 	.word	0x08004805

080043c4 <__swbuf_r>:
 80043c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043c6:	460e      	mov	r6, r1
 80043c8:	4614      	mov	r4, r2
 80043ca:	4605      	mov	r5, r0
 80043cc:	b118      	cbz	r0, 80043d6 <__swbuf_r+0x12>
 80043ce:	6a03      	ldr	r3, [r0, #32]
 80043d0:	b90b      	cbnz	r3, 80043d6 <__swbuf_r+0x12>
 80043d2:	f7fe fa11 	bl	80027f8 <__sinit>
 80043d6:	69a3      	ldr	r3, [r4, #24]
 80043d8:	60a3      	str	r3, [r4, #8]
 80043da:	89a3      	ldrh	r3, [r4, #12]
 80043dc:	071a      	lsls	r2, r3, #28
 80043de:	d501      	bpl.n	80043e4 <__swbuf_r+0x20>
 80043e0:	6923      	ldr	r3, [r4, #16]
 80043e2:	b943      	cbnz	r3, 80043f6 <__swbuf_r+0x32>
 80043e4:	4621      	mov	r1, r4
 80043e6:	4628      	mov	r0, r5
 80043e8:	f000 f82a 	bl	8004440 <__swsetup_r>
 80043ec:	b118      	cbz	r0, 80043f6 <__swbuf_r+0x32>
 80043ee:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80043f2:	4638      	mov	r0, r7
 80043f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80043f6:	6823      	ldr	r3, [r4, #0]
 80043f8:	6922      	ldr	r2, [r4, #16]
 80043fa:	b2f6      	uxtb	r6, r6
 80043fc:	1a98      	subs	r0, r3, r2
 80043fe:	6963      	ldr	r3, [r4, #20]
 8004400:	4637      	mov	r7, r6
 8004402:	4283      	cmp	r3, r0
 8004404:	dc05      	bgt.n	8004412 <__swbuf_r+0x4e>
 8004406:	4621      	mov	r1, r4
 8004408:	4628      	mov	r0, r5
 800440a:	f7ff fc81 	bl	8003d10 <_fflush_r>
 800440e:	2800      	cmp	r0, #0
 8004410:	d1ed      	bne.n	80043ee <__swbuf_r+0x2a>
 8004412:	68a3      	ldr	r3, [r4, #8]
 8004414:	3b01      	subs	r3, #1
 8004416:	60a3      	str	r3, [r4, #8]
 8004418:	6823      	ldr	r3, [r4, #0]
 800441a:	1c5a      	adds	r2, r3, #1
 800441c:	6022      	str	r2, [r4, #0]
 800441e:	701e      	strb	r6, [r3, #0]
 8004420:	6962      	ldr	r2, [r4, #20]
 8004422:	1c43      	adds	r3, r0, #1
 8004424:	429a      	cmp	r2, r3
 8004426:	d004      	beq.n	8004432 <__swbuf_r+0x6e>
 8004428:	89a3      	ldrh	r3, [r4, #12]
 800442a:	07db      	lsls	r3, r3, #31
 800442c:	d5e1      	bpl.n	80043f2 <__swbuf_r+0x2e>
 800442e:	2e0a      	cmp	r6, #10
 8004430:	d1df      	bne.n	80043f2 <__swbuf_r+0x2e>
 8004432:	4621      	mov	r1, r4
 8004434:	4628      	mov	r0, r5
 8004436:	f7ff fc6b 	bl	8003d10 <_fflush_r>
 800443a:	2800      	cmp	r0, #0
 800443c:	d0d9      	beq.n	80043f2 <__swbuf_r+0x2e>
 800443e:	e7d6      	b.n	80043ee <__swbuf_r+0x2a>

08004440 <__swsetup_r>:
 8004440:	b538      	push	{r3, r4, r5, lr}
 8004442:	4b29      	ldr	r3, [pc, #164]	@ (80044e8 <__swsetup_r+0xa8>)
 8004444:	4605      	mov	r5, r0
 8004446:	6818      	ldr	r0, [r3, #0]
 8004448:	460c      	mov	r4, r1
 800444a:	b118      	cbz	r0, 8004454 <__swsetup_r+0x14>
 800444c:	6a03      	ldr	r3, [r0, #32]
 800444e:	b90b      	cbnz	r3, 8004454 <__swsetup_r+0x14>
 8004450:	f7fe f9d2 	bl	80027f8 <__sinit>
 8004454:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004458:	0719      	lsls	r1, r3, #28
 800445a:	d422      	bmi.n	80044a2 <__swsetup_r+0x62>
 800445c:	06da      	lsls	r2, r3, #27
 800445e:	d407      	bmi.n	8004470 <__swsetup_r+0x30>
 8004460:	2209      	movs	r2, #9
 8004462:	602a      	str	r2, [r5, #0]
 8004464:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004468:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800446c:	81a3      	strh	r3, [r4, #12]
 800446e:	e033      	b.n	80044d8 <__swsetup_r+0x98>
 8004470:	0758      	lsls	r0, r3, #29
 8004472:	d512      	bpl.n	800449a <__swsetup_r+0x5a>
 8004474:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004476:	b141      	cbz	r1, 800448a <__swsetup_r+0x4a>
 8004478:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800447c:	4299      	cmp	r1, r3
 800447e:	d002      	beq.n	8004486 <__swsetup_r+0x46>
 8004480:	4628      	mov	r0, r5
 8004482:	f7fe fad5 	bl	8002a30 <_free_r>
 8004486:	2300      	movs	r3, #0
 8004488:	6363      	str	r3, [r4, #52]	@ 0x34
 800448a:	89a3      	ldrh	r3, [r4, #12]
 800448c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004490:	81a3      	strh	r3, [r4, #12]
 8004492:	2300      	movs	r3, #0
 8004494:	6063      	str	r3, [r4, #4]
 8004496:	6923      	ldr	r3, [r4, #16]
 8004498:	6023      	str	r3, [r4, #0]
 800449a:	89a3      	ldrh	r3, [r4, #12]
 800449c:	f043 0308 	orr.w	r3, r3, #8
 80044a0:	81a3      	strh	r3, [r4, #12]
 80044a2:	6923      	ldr	r3, [r4, #16]
 80044a4:	b94b      	cbnz	r3, 80044ba <__swsetup_r+0x7a>
 80044a6:	89a3      	ldrh	r3, [r4, #12]
 80044a8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80044ac:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80044b0:	d003      	beq.n	80044ba <__swsetup_r+0x7a>
 80044b2:	4621      	mov	r1, r4
 80044b4:	4628      	mov	r0, r5
 80044b6:	f000 f890 	bl	80045da <__smakebuf_r>
 80044ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80044be:	f013 0201 	ands.w	r2, r3, #1
 80044c2:	d00a      	beq.n	80044da <__swsetup_r+0x9a>
 80044c4:	2200      	movs	r2, #0
 80044c6:	60a2      	str	r2, [r4, #8]
 80044c8:	6962      	ldr	r2, [r4, #20]
 80044ca:	4252      	negs	r2, r2
 80044cc:	61a2      	str	r2, [r4, #24]
 80044ce:	6922      	ldr	r2, [r4, #16]
 80044d0:	b942      	cbnz	r2, 80044e4 <__swsetup_r+0xa4>
 80044d2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80044d6:	d1c5      	bne.n	8004464 <__swsetup_r+0x24>
 80044d8:	bd38      	pop	{r3, r4, r5, pc}
 80044da:	0799      	lsls	r1, r3, #30
 80044dc:	bf58      	it	pl
 80044de:	6962      	ldrpl	r2, [r4, #20]
 80044e0:	60a2      	str	r2, [r4, #8]
 80044e2:	e7f4      	b.n	80044ce <__swsetup_r+0x8e>
 80044e4:	2000      	movs	r0, #0
 80044e6:	e7f7      	b.n	80044d8 <__swsetup_r+0x98>
 80044e8:	2000017c 	.word	0x2000017c

080044ec <_raise_r>:
 80044ec:	291f      	cmp	r1, #31
 80044ee:	b538      	push	{r3, r4, r5, lr}
 80044f0:	4605      	mov	r5, r0
 80044f2:	460c      	mov	r4, r1
 80044f4:	d904      	bls.n	8004500 <_raise_r+0x14>
 80044f6:	2316      	movs	r3, #22
 80044f8:	6003      	str	r3, [r0, #0]
 80044fa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80044fe:	bd38      	pop	{r3, r4, r5, pc}
 8004500:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004502:	b112      	cbz	r2, 800450a <_raise_r+0x1e>
 8004504:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004508:	b94b      	cbnz	r3, 800451e <_raise_r+0x32>
 800450a:	4628      	mov	r0, r5
 800450c:	f000 f830 	bl	8004570 <_getpid_r>
 8004510:	4622      	mov	r2, r4
 8004512:	4601      	mov	r1, r0
 8004514:	4628      	mov	r0, r5
 8004516:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800451a:	f000 b817 	b.w	800454c <_kill_r>
 800451e:	2b01      	cmp	r3, #1
 8004520:	d00a      	beq.n	8004538 <_raise_r+0x4c>
 8004522:	1c59      	adds	r1, r3, #1
 8004524:	d103      	bne.n	800452e <_raise_r+0x42>
 8004526:	2316      	movs	r3, #22
 8004528:	6003      	str	r3, [r0, #0]
 800452a:	2001      	movs	r0, #1
 800452c:	e7e7      	b.n	80044fe <_raise_r+0x12>
 800452e:	2100      	movs	r1, #0
 8004530:	4620      	mov	r0, r4
 8004532:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004536:	4798      	blx	r3
 8004538:	2000      	movs	r0, #0
 800453a:	e7e0      	b.n	80044fe <_raise_r+0x12>

0800453c <raise>:
 800453c:	4b02      	ldr	r3, [pc, #8]	@ (8004548 <raise+0xc>)
 800453e:	4601      	mov	r1, r0
 8004540:	6818      	ldr	r0, [r3, #0]
 8004542:	f7ff bfd3 	b.w	80044ec <_raise_r>
 8004546:	bf00      	nop
 8004548:	2000017c 	.word	0x2000017c

0800454c <_kill_r>:
 800454c:	b538      	push	{r3, r4, r5, lr}
 800454e:	2300      	movs	r3, #0
 8004550:	4d06      	ldr	r5, [pc, #24]	@ (800456c <_kill_r+0x20>)
 8004552:	4604      	mov	r4, r0
 8004554:	4608      	mov	r0, r1
 8004556:	4611      	mov	r1, r2
 8004558:	602b      	str	r3, [r5, #0]
 800455a:	f7fc fec0 	bl	80012de <_kill>
 800455e:	1c43      	adds	r3, r0, #1
 8004560:	d102      	bne.n	8004568 <_kill_r+0x1c>
 8004562:	682b      	ldr	r3, [r5, #0]
 8004564:	b103      	cbz	r3, 8004568 <_kill_r+0x1c>
 8004566:	6023      	str	r3, [r4, #0]
 8004568:	bd38      	pop	{r3, r4, r5, pc}
 800456a:	bf00      	nop
 800456c:	200003a0 	.word	0x200003a0

08004570 <_getpid_r>:
 8004570:	f7fc beae 	b.w	80012d0 <_getpid>

08004574 <memchr>:
 8004574:	4603      	mov	r3, r0
 8004576:	b510      	push	{r4, lr}
 8004578:	b2c9      	uxtb	r1, r1
 800457a:	4402      	add	r2, r0
 800457c:	4293      	cmp	r3, r2
 800457e:	4618      	mov	r0, r3
 8004580:	d101      	bne.n	8004586 <memchr+0x12>
 8004582:	2000      	movs	r0, #0
 8004584:	e003      	b.n	800458e <memchr+0x1a>
 8004586:	7804      	ldrb	r4, [r0, #0]
 8004588:	3301      	adds	r3, #1
 800458a:	428c      	cmp	r4, r1
 800458c:	d1f6      	bne.n	800457c <memchr+0x8>
 800458e:	bd10      	pop	{r4, pc}

08004590 <__swhatbuf_r>:
 8004590:	b570      	push	{r4, r5, r6, lr}
 8004592:	460c      	mov	r4, r1
 8004594:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004598:	4615      	mov	r5, r2
 800459a:	2900      	cmp	r1, #0
 800459c:	461e      	mov	r6, r3
 800459e:	b096      	sub	sp, #88	@ 0x58
 80045a0:	da0c      	bge.n	80045bc <__swhatbuf_r+0x2c>
 80045a2:	89a3      	ldrh	r3, [r4, #12]
 80045a4:	2100      	movs	r1, #0
 80045a6:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80045aa:	bf14      	ite	ne
 80045ac:	2340      	movne	r3, #64	@ 0x40
 80045ae:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80045b2:	2000      	movs	r0, #0
 80045b4:	6031      	str	r1, [r6, #0]
 80045b6:	602b      	str	r3, [r5, #0]
 80045b8:	b016      	add	sp, #88	@ 0x58
 80045ba:	bd70      	pop	{r4, r5, r6, pc}
 80045bc:	466a      	mov	r2, sp
 80045be:	f000 f849 	bl	8004654 <_fstat_r>
 80045c2:	2800      	cmp	r0, #0
 80045c4:	dbed      	blt.n	80045a2 <__swhatbuf_r+0x12>
 80045c6:	9901      	ldr	r1, [sp, #4]
 80045c8:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80045cc:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80045d0:	4259      	negs	r1, r3
 80045d2:	4159      	adcs	r1, r3
 80045d4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80045d8:	e7eb      	b.n	80045b2 <__swhatbuf_r+0x22>

080045da <__smakebuf_r>:
 80045da:	898b      	ldrh	r3, [r1, #12]
 80045dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80045de:	079d      	lsls	r5, r3, #30
 80045e0:	4606      	mov	r6, r0
 80045e2:	460c      	mov	r4, r1
 80045e4:	d507      	bpl.n	80045f6 <__smakebuf_r+0x1c>
 80045e6:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80045ea:	6023      	str	r3, [r4, #0]
 80045ec:	6123      	str	r3, [r4, #16]
 80045ee:	2301      	movs	r3, #1
 80045f0:	6163      	str	r3, [r4, #20]
 80045f2:	b003      	add	sp, #12
 80045f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80045f6:	466a      	mov	r2, sp
 80045f8:	ab01      	add	r3, sp, #4
 80045fa:	f7ff ffc9 	bl	8004590 <__swhatbuf_r>
 80045fe:	9f00      	ldr	r7, [sp, #0]
 8004600:	4605      	mov	r5, r0
 8004602:	4639      	mov	r1, r7
 8004604:	4630      	mov	r0, r6
 8004606:	f7fe fdb7 	bl	8003178 <_malloc_r>
 800460a:	b948      	cbnz	r0, 8004620 <__smakebuf_r+0x46>
 800460c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004610:	059a      	lsls	r2, r3, #22
 8004612:	d4ee      	bmi.n	80045f2 <__smakebuf_r+0x18>
 8004614:	f023 0303 	bic.w	r3, r3, #3
 8004618:	f043 0302 	orr.w	r3, r3, #2
 800461c:	81a3      	strh	r3, [r4, #12]
 800461e:	e7e2      	b.n	80045e6 <__smakebuf_r+0xc>
 8004620:	89a3      	ldrh	r3, [r4, #12]
 8004622:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004626:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800462a:	81a3      	strh	r3, [r4, #12]
 800462c:	9b01      	ldr	r3, [sp, #4]
 800462e:	6020      	str	r0, [r4, #0]
 8004630:	b15b      	cbz	r3, 800464a <__smakebuf_r+0x70>
 8004632:	4630      	mov	r0, r6
 8004634:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004638:	f000 f81e 	bl	8004678 <_isatty_r>
 800463c:	b128      	cbz	r0, 800464a <__smakebuf_r+0x70>
 800463e:	89a3      	ldrh	r3, [r4, #12]
 8004640:	f023 0303 	bic.w	r3, r3, #3
 8004644:	f043 0301 	orr.w	r3, r3, #1
 8004648:	81a3      	strh	r3, [r4, #12]
 800464a:	89a3      	ldrh	r3, [r4, #12]
 800464c:	431d      	orrs	r5, r3
 800464e:	81a5      	strh	r5, [r4, #12]
 8004650:	e7cf      	b.n	80045f2 <__smakebuf_r+0x18>
	...

08004654 <_fstat_r>:
 8004654:	b538      	push	{r3, r4, r5, lr}
 8004656:	2300      	movs	r3, #0
 8004658:	4d06      	ldr	r5, [pc, #24]	@ (8004674 <_fstat_r+0x20>)
 800465a:	4604      	mov	r4, r0
 800465c:	4608      	mov	r0, r1
 800465e:	4611      	mov	r1, r2
 8004660:	602b      	str	r3, [r5, #0]
 8004662:	f7fc fe9b 	bl	800139c <_fstat>
 8004666:	1c43      	adds	r3, r0, #1
 8004668:	d102      	bne.n	8004670 <_fstat_r+0x1c>
 800466a:	682b      	ldr	r3, [r5, #0]
 800466c:	b103      	cbz	r3, 8004670 <_fstat_r+0x1c>
 800466e:	6023      	str	r3, [r4, #0]
 8004670:	bd38      	pop	{r3, r4, r5, pc}
 8004672:	bf00      	nop
 8004674:	200003a0 	.word	0x200003a0

08004678 <_isatty_r>:
 8004678:	b538      	push	{r3, r4, r5, lr}
 800467a:	2300      	movs	r3, #0
 800467c:	4d05      	ldr	r5, [pc, #20]	@ (8004694 <_isatty_r+0x1c>)
 800467e:	4604      	mov	r4, r0
 8004680:	4608      	mov	r0, r1
 8004682:	602b      	str	r3, [r5, #0]
 8004684:	f7fc fe99 	bl	80013ba <_isatty>
 8004688:	1c43      	adds	r3, r0, #1
 800468a:	d102      	bne.n	8004692 <_isatty_r+0x1a>
 800468c:	682b      	ldr	r3, [r5, #0]
 800468e:	b103      	cbz	r3, 8004692 <_isatty_r+0x1a>
 8004690:	6023      	str	r3, [r4, #0]
 8004692:	bd38      	pop	{r3, r4, r5, pc}
 8004694:	200003a0 	.word	0x200003a0

08004698 <_init>:
 8004698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800469a:	bf00      	nop
 800469c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800469e:	bc08      	pop	{r3}
 80046a0:	469e      	mov	lr, r3
 80046a2:	4770      	bx	lr

080046a4 <_fini>:
 80046a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046a6:	bf00      	nop
 80046a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80046aa:	bc08      	pop	{r3}
 80046ac:	469e      	mov	lr, r3
 80046ae:	4770      	bx	lr
